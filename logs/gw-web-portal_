[INFO ][20180102 10:53:06,360][AbstractTestContextBootstrapper:259] Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]
[INFO ][20180102 10:53:06,434][AbstractTestContextBootstrapper:185] Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@47d90b9e, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@1184ab05, org.springframework.test.context.support.DependencyInjectionTestExecutionListener@3aefe5e5, org.springframework.test.context.support.DirtiesContextTestExecutionListener@149e0f5d, org.springframework.test.context.transaction.TransactionalTestExecutionListener@1b1473ab, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@2f7c2f4f]
[INFO ][20180102 10:53:06,734][XmlBeanDefinitionReader:317] Loading XML bean definitions from class path resource [spring/spring-context.xml]
[INFO ][20180102 10:53:07,285][XmlBeanDefinitionReader:317] Loading XML bean definitions from class path resource [spring/dubbo/dubbo-consumer.xml]
[INFO ][20180102 10:53:07,433][?:?] using logger: com.alibaba.dubbo.common.logger.log4j.Log4jLoggerAdapter
[INFO ][20180102 10:53:07,484][XmlBeanDefinitionReader:317] Loading XML bean definitions from class path resource [spring/dubbo/dubbo-reference-user.xml]
[INFO ][20180102 10:53:07,696][XmlBeanDefinitionReader:317] Loading XML bean definitions from class path resource [spring/spring-amp.xml]
[INFO ][20180102 10:53:07,731][AbstractApplicationContext:577] Refreshing org.springframework.context.support.GenericApplicationContext@6dc17b83: startup date [Tue Jan 02 10:53:07 CST 2018]; root of context hierarchy
[INFO ][20180102 10:53:07,885][PropertiesLoaderSupport:172] Loading properties file from class path resource [public_system.properties]
[DEBUG][20180102 10:53:08,087][ExtensionLoader:943]  [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Protocol$Adpative implements com.alibaba.dubbo.rpc.Protocol {
public void destroy() {throw new UnsupportedOperationException("method public abstract void com.alibaba.dubbo.rpc.Protocol.destroy() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public int getDefaultPort() {throw new UnsupportedOperationException("method public abstract int com.alibaba.dubbo.rpc.Protocol.getDefaultPort() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public com.alibaba.dubbo.rpc.Invoker refer(java.lang.Class arg0, com.alibaba.dubbo.common.URL arg1) throws java.lang.Class {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.refer(arg0, arg1);
}
public com.alibaba.dubbo.rpc.Exporter export(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.Invoker {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.export(arg0);
}
}, dubbo version: 2.5.2, current host: 127.0.0.1
[DEBUG][20180102 10:53:08,275][ExtensionLoader:943]  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Cluster$Adpative implements com.alibaba.dubbo.rpc.cluster.Cluster {
public com.alibaba.dubbo.rpc.Invoker join(com.alibaba.dubbo.rpc.cluster.Directory arg0) throws com.alibaba.dubbo.rpc.cluster.Directory {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("cluster", "failover");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.Cluster) name from url(" + url.toString() + ") use keys([cluster])");
com.alibaba.dubbo.rpc.cluster.Cluster extension = (com.alibaba.dubbo.rpc.cluster.Cluster)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.Cluster.class).getExtension(extName);
return extension.join(arg0);
}
}, dubbo version: 2.5.2, current host: 127.0.0.1
[DEBUG][20180102 10:53:08,305][ExtensionLoader:943]  [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ProxyFactory$Adpative implements com.alibaba.dubbo.rpc.ProxyFactory {
public java.lang.Object getProxy(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.Invoker {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getProxy(arg0);
}
public com.alibaba.dubbo.rpc.Invoker getInvoker(java.lang.Object arg0, java.lang.Class arg1, com.alibaba.dubbo.common.URL arg2) throws java.lang.Object {
if (arg2 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg2;
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getInvoker(arg0, arg1, arg2);
}
}, dubbo version: 2.5.2, current host: 127.0.0.1
[DEBUG][20180102 10:53:08,616][ExtensionLoader:943]  [DUBBO] package com.alibaba.dubbo.registry;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class RegistryFactory$Adpative implements com.alibaba.dubbo.registry.RegistryFactory {
public com.alibaba.dubbo.registry.Registry getRegistry(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.registry.RegistryFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.registry.RegistryFactory extension = (com.alibaba.dubbo.registry.RegistryFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.registry.RegistryFactory.class).getExtension(extName);
return extension.getRegistry(arg0);
}
}, dubbo version: 2.5.2, current host: 127.0.0.1
[DEBUG][20180102 10:53:08,644][ExtensionLoader:943]  [DUBBO] package com.alibaba.dubbo.remoting.zookeeper;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ZookeeperTransporter$Adpative implements com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter {
public com.alibaba.dubbo.remoting.zookeeper.ZookeeperClient connect(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("client", url.getParameter("transporter", "zkclient"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter) name from url(" + url.toString() + ") use keys([client, transporter])");
com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter extension = (com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter.class).getExtension(extName);
return extension.connect(arg0);
}
}, dubbo version: 2.5.2, current host: 127.0.0.1
[INFO ][20180102 10:53:08,670][AbstractRegistry:232]  [DUBBO] Load registry store file C:\Users\junlonlu\.dubbo\dubbo-registry-127.0.0.1.cache, data: {com.junlon.facade.user.service.AdminQueryFacade=empty://192.168.19.1:20880/com.junlon.facade.user.service.AdminQueryFacade?anyhost=true&application=gw-serivce-user&category=configurators&check=false&default.accepts=1000&default.dispatcher=all&default.retries=0&default.threadpool=fixed&default.threads=1000&default.timeout=30000&dubbo=2.5.2&interface=com.junlon.facade.user.service.AdminQueryFacade&methods=list&pid=51644&retries=0&side=provider&timestamp=1514861525879, com.alibaba.dubbo.monitor.MonitorService=empty://192.168.103.21/com.alibaba.dubbo.monitor.MonitorService?category=configurators&dubbo=2.5.2&interface=com.alibaba.dubbo.monitor.MonitorService&pid=54212&timestamp=1514536669885 empty://192.168.103.21/com.alibaba.dubbo.monitor.MonitorService?category=routers&dubbo=2.5.2&interface=com.alibaba.dubbo.monitor.MonitorService&pid=54212&timestamp=1514536669885 empty://192.168.103.21/com.alibaba.dubbo.monitor.MonitorService?category=providers&dubbo=2.5.2&interface=com.alibaba.dubbo.monitor.MonitorService&pid=54212&timestamp=1514536669885}, dubbo version: 2.5.2, current host: 127.0.0.1
[INFO ][20180102 10:53:08,698][ZkEventThread:64] Starting ZkClient event thread.
[INFO ][20180102 10:53:08,710][Environment:109] Client environment:zookeeper.version=3.5.3-beta-8ce24f9e675cbefffb8f21a47e06b42864475a60, built on 04/03/2017 16:19 GMT
[INFO ][20180102 10:53:08,711][Environment:109] Client environment:host.name=windows10.microdone.cn
[INFO ][20180102 10:53:08,712][Environment:109] Client environment:java.version=1.8.0_131
[INFO ][20180102 10:53:08,713][Environment:109] Client environment:java.vendor=Oracle Corporation
[INFO ][20180102 10:53:08,714][Environment:109] Client environment:java.home=C:\Program Files\Java\jdk1.8.0_131\jre
[INFO ][20180102 10:53:08,714][Environment:109] Client environment:java.class.path=D:\Idea\IntelliJ IDEA 2017.1.1\lib\idea_rt.jar;D:\Idea\IntelliJ IDEA 2017.1.1\plugins\junit\lib\junit-rt.jar;C:\Program Files\Java\jdk1.8.0_131\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.8.0_131\jre\lib\deploy.jar;C:\Program Files\Java\jdk1.8.0_131\jre\lib\ext\access-bridge-64.jar;C:\Program Files\Java\jdk1.8.0_131\jre\lib\ext\cldrdata.jar;C:\Program Files\Java\jdk1.8.0_131\jre\lib\ext\dnsns.jar;C:\Program Files\Java\jdk1.8.0_131\jre\lib\ext\jaccess.jar;C:\Program Files\Java\jdk1.8.0_131\jre\lib\ext\jfxrt.jar;C:\Program Files\Java\jdk1.8.0_131\jre\lib\ext\localedata.jar;C:\Program Files\Java\jdk1.8.0_131\jre\lib\ext\nashorn.jar;C:\Program Files\Java\jdk1.8.0_131\jre\lib\ext\sunec.jar;C:\Program Files\Java\jdk1.8.0_131\jre\lib\ext\sunjce_provider.jar;C:\Program Files\Java\jdk1.8.0_131\jre\lib\ext\sunmscapi.jar;C:\Program Files\Java\jdk1.8.0_131\jre\lib\ext\sunpkcs11.jar;C:\Program Files\Java\jdk1.8.0_131\jre\lib\ext\zipfs.jar;C:\Program Files\Java\jdk1.8.0_131\jre\lib\javaws.jar;C:\Program Files\Java\jdk1.8.0_131\jre\lib\jce.jar;C:\Program Files\Java\jdk1.8.0_131\jre\lib\jfr.jar;C:\Program Files\Java\jdk1.8.0_131\jre\lib\jfxswt.jar;C:\Program Files\Java\jdk1.8.0_131\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.8.0_131\jre\lib\management-agent.jar;C:\Program Files\Java\jdk1.8.0_131\jre\lib\plugin.jar;C:\Program Files\Java\jdk1.8.0_131\jre\lib\resources.jar;C:\Program Files\Java\jdk1.8.0_131\jre\lib\rt.jar;D:\Idea\IntelliJ IDEA 2017.1.1\lib\junit.jar;D:\Idea\IntelliJ IDEA 2017.1.1\lib\junit-4.12.jar;D:\Idea\IntelliJ IDEA 2017.1.1\lib\hamcrest-core-1.3.jar;E:\Idea\gw_lulu\web\gw-web-portal\target\test-classes;E:\Idea\gw_lulu\web\gw-web-portal\target\classes;E:\Idea\gw_lulu\common\gw-common-base\target\classes;E:\Idea\gw_lulu\facade\gw-facade-user\target\classes;E:\Laboratory\Maven\repository\org\springframework\spring-aop\4.2.3.RELEASE\spring-aop-4.2.3.RELEASE.jar;E:\Laboratory\Maven\repository\org\springframework\spring-aspects\4.2.3.RELEASE\spring-aspects-4.2.3.RELEASE.jar;E:\Laboratory\Maven\repository\org\springframework\spring-beans\4.2.3.RELEASE\spring-beans-4.2.3.RELEASE.jar;E:\Laboratory\Maven\repository\org\springframework\spring-context\4.2.3.RELEASE\spring-context-4.2.3.RELEASE.jar;E:\Laboratory\Maven\repository\org\springframework\spring-context-support\4.2.3.RELEASE\spring-context-support-4.2.3.RELEASE.jar;E:\Laboratory\Maven\repository\org\springframework\spring-core\4.2.3.RELEASE\spring-core-4.2.3.RELEASE.jar;E:\Laboratory\Maven\repository\org\springframework\spring-expression\4.2.3.RELEASE\spring-expression-4.2.3.RELEASE.jar;E:\Laboratory\Maven\repository\org\springframework\spring-instrument\4.2.3.RELEASE\spring-instrument-4.2.3.RELEASE.jar;E:\Laboratory\Maven\repository\org\springframework\spring-instrument-tomcat\4.2.3.RELEASE\spring-instrument-tomcat-4.2.3.RELEASE.jar;E:\Laboratory\Maven\repository\org\springframework\data\spring-data-jpa\1.9.4.RELEASE\spring-data-jpa-1.9.4.RELEASE.jar;E:\Laboratory\Maven\repository\org\springframework\data\spring-data-commons\1.11.4.RELEASE\spring-data-commons-1.11.4.RELEASE.jar;E:\Laboratory\Maven\repository\org\slf4j\jcl-over-slf4j\1.7.13\jcl-over-slf4j-1.7.13.jar;E:\Laboratory\Maven\repository\org\springframework\spring-jms\4.2.3.RELEASE\spring-jms-4.2.3.RELEASE.jar;E:\Laboratory\Maven\repository\org\springframework\spring-messaging\4.2.3.RELEASE\spring-messaging-4.2.3.RELEASE.jar;E:\Laboratory\Maven\repository\org\springframework\spring-orm\4.2.3.RELEASE\spring-orm-4.2.3.RELEASE.jar;E:\Laboratory\Maven\repository\org\springframework\spring-jdbc\4.2.3.RELEASE\spring-jdbc-4.2.3.RELEASE.jar;E:\Laboratory\Maven\repository\org\springframework\spring-oxm\4.2.3.RELEASE\spring-oxm-4.2.3.RELEASE.jar;E:\Laboratory\Maven\repository\org\springframework\spring-tx\4.2.3.RELEASE\spring-tx-4.2.3.RELEASE.jar;E:\Laboratory\Maven\repository\org\springframework\spring-web\4.2.3.RELEASE\spring-web-4.2.3.RELEASE.jar;E:\Laboratory\Maven\repository\org\springframework\spring-webmvc\4.2.3.RELEASE\spring-webmvc-4.2.3.RELEASE.jar;E:\Laboratory\Maven\repository\org\springframework\spring-webmvc-portlet\4.2.3.RELEASE\spring-webmvc-portlet-4.2.3.RELEASE.jar;E:\Laboratory\Maven\repository\org\springframework\spring-test\4.2.3.RELEASE\spring-test-4.2.3.RELEASE.jar;E:\Laboratory\Maven\repository\org\springframework\ws\spring-ws-core\2.3.0.RELEASE\spring-ws-core-2.3.0.RELEASE.jar;E:\Laboratory\Maven\repository\commons-logging\commons-logging\1.1.3\commons-logging-1.1.3.jar;E:\Laboratory\Maven\repository\org\springframework\ws\spring-xml\2.3.0.RELEASE\spring-xml-2.3.0.RELEASE.jar;E:\Laboratory\Maven\repository\org\mybatis\mybatis\3.4.0\mybatis-3.4.0.jar;E:\Laboratory\Maven\repository\org\mybatis\mybatis-spring\1.3.0\mybatis-spring-1.3.0.jar;E:\Laboratory\Maven\repository\org\mybatis\generator\mybatis-generator-core\1.3.5\mybatis-generator-core-1.3.5.jar;E:\Laboratory\Maven\repository\mysql\mysql-connector-java\5.1.9\mysql-connector-java-5.1.9.jar;E:\Laboratory\Maven\repository\com\alibaba\druid\1.0.9\druid-1.0.9.jar;C:\Program Files\Java\jdk1.8.0_131\lib\jconsole.jar;C:\Program Files\Java\jdk1.8.0_131\lib\tools.jar;E:\Laboratory\Maven\repository\org\jboss\netty\netty\3.2.5.Final\netty-3.2.5.Final.jar;E:\Laboratory\Maven\repository\com\alibaba\dubbo\2.5.2\dubbo-2.5.2.jar;E:\Laboratory\Maven\repository\org\springframework\spring\2.5.6.SEC03\spring-2.5.6.SEC03.jar;E:\Laboratory\Maven\repository\org\javassist\javassist\3.15.0-GA\javassist-3.15.0-GA.jar;E:\Laboratory\Maven\repository\org\apache\zookeeper\zookeeper\3.5.3-beta\zookeeper-3.5.3-beta.jar;E:\Laboratory\Maven\repository\log4j\log4j\1.2.17\log4j-1.2.17.jar;E:\Laboratory\Maven\repository\io\netty\netty\3.10.5.Final\netty-3.10.5.Final.jar;E:\Laboratory\Maven\repository\com\101tec\zkclient\0.9\zkclient-0.9.jar;E:\Laboratory\Maven\repository\org\apache\activemq\activemq-all\5.8.0\activemq-all-5.8.0.jar;E:\Laboratory\Maven\repository\org\apache\activemq\activemq-amqp\5.8.0\activemq-amqp-5.8.0.jar;E:\Laboratory\Maven\repository\org\apache\activemq\activemq-broker\5.8.0\activemq-broker-5.8.0.jar;E:\Laboratory\Maven\repository\org\apache\activemq\activemq-openwire-legacy\5.8.0\activemq-openwire-legacy-5.8.0.jar;E:\Laboratory\Maven\repository\org\fusesource\hawtbuf\hawtbuf\1.9\hawtbuf-1.9.jar;E:\Laboratory\Maven\repository\org\apache\activemq\activemq-pool\5.8.0\activemq-pool-5.8.0.jar;E:\Laboratory\Maven\repository\org\apache\activemq\activemq-client\5.8.0\activemq-client-5.8.0.jar;E:\Laboratory\Maven\repository\org\apache\geronimo\specs\geronimo-jms_1.1_spec\1.1.1\geronimo-jms_1.1_spec-1.1.1.jar;E:\Laboratory\Maven\repository\org\apache\geronimo\specs\geronimo-j2ee-management_1.1_spec\1.0.1\geronimo-j2ee-management_1.1_spec-1.0.1.jar;E:\Laboratory\Maven\repository\org\apache\geronimo\specs\geronimo-jta_1.0.1B_spec\1.0.1\geronimo-jta_1.0.1B_spec-1.0.1.jar;E:\Laboratory\Maven\repository\commons-pool\commons-pool\1.6\commons-pool-1.6.jar;E:\Laboratory\Maven\repository\quartz\quartz\1.6.0\quartz-1.6.0.jar;E:\Laboratory\Maven\repository\org\elasticsearch\client\rest\5.0.0\rest-5.0.0.jar;E:\Laboratory\Maven\repository\org\apache\httpcomponents\httpclient\4.5.2\httpclient-4.5.2.jar;E:\Laboratory\Maven\repository\org\apache\httpcomponents\httpcore\4.4.5\httpcore-4.4.5.jar;E:\Laboratory\Maven\repository\org\apache\httpcomponents\httpasyncclient\4.1.2\httpasyncclient-4.1.2.jar;E:\Laboratory\Maven\repository\org\apache\httpcomponents\httpcore-nio\4.4.5\httpcore-nio-4.4.5.jar;E:\Laboratory\Maven\repository\org\aspectj\aspectjweaver\1.5.4\aspectjweaver-1.5.4.jar;E:\Laboratory\Maven\repository\org\aspectj\aspectjrt\1.5.4\aspectjrt-1.5.4.jar;E:\Laboratory\Maven\repository\junit\junit\4.12\junit-4.12.jar;E:\Laboratory\Maven\repository\org\hamcrest\hamcrest-core\1.3\hamcrest-core-1.3.jar;E:\Laboratory\Maven\repository\javax\servlet\javax.servlet-api\3.1.0\javax.servlet-api-3.1.0.jar;E:\Laboratory\Maven\repository\javax\servlet\jsp\jsp-api\2.2\jsp-api-2.2.jar;E:\Laboratory\Maven\repository\javax\servlet\jstl\1.2\jstl-1.2.jar;E:\Laboratory\Maven\repository\net\sf\jxls\jxls-core\1.0.6\jxls-core-1.0.6.jar;E:\Laboratory\Maven\repository\commons-collections\commons-collections\3.2.1\commons-collections-3.2.1.jar;E:\Laboratory\Maven\repository\org\apache\commons\commons-jexl\2.0.1\commons-jexl-2.0.1.jar;E:\Laboratory\Maven\repository\org\apache\logging\log4j\log4j-api\2.8.2\log4j-api-2.8.2.jar;E:\Laboratory\Maven\repository\org\apache\logging\log4j\log4j-core\2.8.2\log4j-core-2.8.2.jar;E:\Laboratory\Maven\repository\org\slf4j\slf4j-api\1.7.5\slf4j-api-1.7.5.jar;E:\Laboratory\Maven\repository\org\slf4j\slf4j-log4j12\1.7.5\slf4j-log4j12-1.7.5.jar;E:\Laboratory\Maven\repository\org\apache\logging\log4j\log4j-slf4j-impl\2.8.2\log4j-slf4j-impl-2.8.2.jar;E:\Laboratory\Maven\repository\com\google\zxing\core\3.0.0\core-3.0.0.jar;E:\Laboratory\Maven\repository\com\google\zxing\javase\3.0.0\javase-3.0.0.jar;E:\Laboratory\Maven\repository\com\alibaba\fastjson\1.2.6\fastjson-1.2.6.jar;E:\Laboratory\Maven\repository\org\codehaus\jackson\jackson-mapper-asl\1.9.13\jackson-mapper-asl-1.9.13.jar;E:\Laboratory\Maven\repository\org\codehaus\jackson\jackson-core-asl\1.9.13\jackson-core-asl-1.9.13.jar;E:\Laboratory\Maven\repository\org\apache\commons\commons-lang3\3.4\commons-lang3-3.4.jar;E:\Laboratory\Maven\repository\commons-fileupload\commons-fileupload\1.3.1\commons-fileupload-1.3.1.jar;E:\Laboratory\Maven\repository\commons-io\commons-io\2.4\commons-io-2.4.jar;E:\Laboratory\Maven\repository\commons-codec\commons-codec\1.10\commons-codec-1.10.jar;E:\Laboratory\Maven\repository\commons-beanutils\commons-beanutils\1.9.2\commons-beanutils-1.9.2.jar;E:\Laboratory\Maven\repository\org\apache\commons\commons-collections4\4.1\commons-collections4-4.1.jar;E:\Laboratory\Maven\repository\aopalliance\aopalliance\1.0\aopalliance-1.0.jar;E:\Laboratory\Maven\repository\commons-cli\commons-cli\1.2\commons-cli-1.2.jar;E:\Laboratory\Maven\repository\ognl\ognl\3.1.14\ognl-3.1.14.jar;E:\Laboratory\Maven\repository\commons-net\commons-net\3.2\commons-net-3.2.jar;E:\Laboratory\Maven\repository\org\apache\poi\poi\3.15\poi-3.15.jar;E:\Laboratory\Maven\repository\org\apache\poi\poi-ooxml\3.15\poi-ooxml-3.15.jar;E:\Laboratory\Maven\repository\org\apache\poi\poi-ooxml-schemas\3.15\poi-ooxml-schemas-3.15.jar;E:\Laboratory\Maven\repository\org\apache\xmlbeans\xmlbeans\2.6.0\xmlbeans-2.6.0.jar;E:\Laboratory\Maven\repository\stax\stax-api\1.0.1\stax-api-1.0.1.jar;E:\Laboratory\Maven\repository\com\github\virtuald\curvesapi\1.04\curvesapi-1.04.jar;E:\Laboratory\Maven\repository\javax\jms\jms\1.1\jms-1.1.jar
[INFO ][20180102 10:53:08,719][Environment:109] Client environment:java.library.path=C:\Program Files\Java\jdk1.8.0_131\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\ProgramData\Oracle\Java\javapath;C:\Program Files (x86)\Intel\iCLS Client\;C:\Program Files\Intel\iCLS Client\;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\Program Files\Java\jdk1.8.0_131\bin;D:\Git\Git\cmd;D:\Mysql\mysql-5.6.36-winx64\bin;D:\TortoiseGit\bin;D:\TortoiseSVN\bin;D:\Nodejs\;C:\Users\junlonlu\AppData\Local\Microsoft\WindowsApps;D:\Visual Studio Code\Microsoft VS Code\bin;C:\Users\junlonlu\AppData\Roaming\npm;E:\Laboratory\Maven\apache-maven-3.5.2\bin;.
[INFO ][20180102 10:53:08,720][Environment:109] Client environment:java.io.tmpdir=C:\Users\junlonlu\AppData\Local\Temp\
[INFO ][20180102 10:53:08,720][Environment:109] Client environment:java.compiler=<NA>
[INFO ][20180102 10:53:08,720][Environment:109] Client environment:os.name=Windows 10
[INFO ][20180102 10:53:08,720][Environment:109] Client environment:os.arch=amd64
[INFO ][20180102 10:53:08,721][Environment:109] Client environment:os.version=10.0
[INFO ][20180102 10:53:08,721][Environment:109] Client environment:user.name=junlonlu
[INFO ][20180102 10:53:08,721][Environment:109] Client environment:user.home=C:\Users\junlonlu
[INFO ][20180102 10:53:08,721][Environment:109] Client environment:user.dir=E:\Idea\gw_lulu\web\gw-web-portal
[INFO ][20180102 10:53:08,722][Environment:109] Client environment:os.memory.free=97MB
[INFO ][20180102 10:53:08,722][Environment:109] Client environment:os.memory.max=1799MB
[INFO ][20180102 10:53:08,722][Environment:109] Client environment:os.memory.total=123MB
[INFO ][20180102 10:53:08,725][ZooKeeper:865] Initiating client connection, connectString=127.0.0.1:2181 sessionTimeout=30000 watcher=org.I0Itec.zkclient.ZkClient@56db847e
[INFO ][20180102 10:53:09,025][ClientCnxnSocket:236] jute.maxbuffer value is 4194304 Bytes
[INFO ][20180102 10:53:09,032][ZkClient:935] Waiting for keeper state SyncConnected
[INFO ][20180102 10:53:09,039][ClientCnxn$SendThread:1113] Opening socket connection to server 127.0.0.1/127.0.0.1:2181. Will not attempt to authenticate using SASL (unknown error)
[INFO ][20180102 10:53:09,040][ClientCnxn$SendThread:948] Socket connection established, initiating session, client: /127.0.0.1:57941, server: 127.0.0.1/127.0.0.1:2181
[INFO ][20180102 10:53:09,111][ClientCnxn$SendThread:1381] Session establishment complete on server 127.0.0.1/127.0.0.1:2181, sessionid = 0x100cc6ac7c10001, negotiated timeout = 30000
[INFO ][20180102 10:53:09,114][ZkClient:712] zookeeper state changed (SyncConnected)
[DEBUG][20180102 10:53:09,123][ExtensionLoader:943]  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class RouterFactory$Adpative implements com.alibaba.dubbo.rpc.cluster.RouterFactory {
public com.alibaba.dubbo.rpc.cluster.Router getRouter(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getProtocol();
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.RouterFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.cluster.RouterFactory extension = (com.alibaba.dubbo.rpc.cluster.RouterFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.RouterFactory.class).getExtension(extName);
return extension.getRouter(arg0);
}
}, dubbo version: 2.5.2, current host: 127.0.0.1
[DEBUG][20180102 10:53:09,139][ExtensionLoader:943]  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ConfiguratorFactory$Adpative implements com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory {
public com.alibaba.dubbo.rpc.cluster.Configurator getConfigurator(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getProtocol();
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory extension = (com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory.class).getExtension(extName);
return extension.getConfigurator(arg0);
}
}, dubbo version: 2.5.2, current host: 127.0.0.1
[INFO ][20180102 10:53:09,148][AbstractRegistry:302]  [DUBBO] Register: consumer://192.168.19.1/com.junlon.facade.user.service.AdminQueryFacade?application=gw-web-portal&category=consumers&check=false&dubbo=2.5.2&interface=com.junlon.facade.user.service.AdminQueryFacade&methods=list&pid=68504&side=consumer&timestamp=1514861588549, dubbo version: 2.5.2, current host: 192.168.19.1
[INFO ][20180102 10:53:09,253][AbstractRegistry:325]  [DUBBO] Subscribe: consumer://192.168.19.1/com.junlon.facade.user.service.AdminQueryFacade?application=gw-web-portal&category=providers,configurators,routers&check=false&dubbo=2.5.2&interface=com.junlon.facade.user.service.AdminQueryFacade&methods=list&pid=68504&side=consumer&timestamp=1514861588549, dubbo version: 2.5.2, current host: 192.168.19.1
[INFO ][20180102 10:53:09,625][AbstractRegistry:422]  [DUBBO] Notify urls for subscribe url consumer://192.168.19.1/com.junlon.facade.user.service.AdminQueryFacade?application=gw-web-portal&category=providers,configurators,routers&check=false&dubbo=2.5.2&interface=com.junlon.facade.user.service.AdminQueryFacade&methods=list&pid=68504&side=consumer&timestamp=1514861588549, urls: [dubbo://192.168.19.1:20880/com.junlon.facade.user.service.AdminQueryFacade?anyhost=true&application=gw-serivce-user&default.accepts=1000&default.dispatcher=all&default.retries=0&default.threadpool=fixed&default.threads=1000&default.timeout=30000&dubbo=2.5.2&interface=com.junlon.facade.user.service.AdminQueryFacade&methods=list&pid=51644&retries=0&side=provider&timestamp=1514861525879, empty://192.168.19.1/com.junlon.facade.user.service.AdminQueryFacade?application=gw-web-portal&category=configurators&check=false&dubbo=2.5.2&interface=com.junlon.facade.user.service.AdminQueryFacade&methods=list&pid=68504&side=consumer&timestamp=1514861588549, empty://192.168.19.1/com.junlon.facade.user.service.AdminQueryFacade?application=gw-web-portal&category=routers&check=false&dubbo=2.5.2&interface=com.junlon.facade.user.service.AdminQueryFacade&methods=list&pid=68504&side=consumer&timestamp=1514861588549], dubbo version: 2.5.2, current host: 192.168.19.1
[DEBUG][20180102 10:53:09,701][ExtensionLoader:943]  [DUBBO] package com.alibaba.dubbo.remoting;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Transporter$Adpative implements com.alibaba.dubbo.remoting.Transporter {
public com.alibaba.dubbo.remoting.Client connect(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.remoting.ChannelHandler arg1) throws com.alibaba.dubbo.common.URL {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("client", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Transporter) name from url(" + url.toString() + ") use keys([client, transporter])");
com.alibaba.dubbo.remoting.Transporter extension = (com.alibaba.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.connect(arg0, arg1);
}
public com.alibaba.dubbo.remoting.Server bind(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.remoting.ChannelHandler arg1) throws com.alibaba.dubbo.common.URL {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("server", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Transporter) name from url(" + url.toString() + ") use keys([server, transporter])");
com.alibaba.dubbo.remoting.Transporter extension = (com.alibaba.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.bind(arg0, arg1);
}
}, dubbo version: 2.5.2, current host: 192.168.19.1
[DEBUG][20180102 10:53:09,767][ExtensionLoader:943]  [DUBBO] package com.alibaba.dubbo.remoting;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Dispatcher$Adpative implements com.alibaba.dubbo.remoting.Dispatcher {
public com.alibaba.dubbo.remoting.ChannelHandler dispatch(com.alibaba.dubbo.remoting.ChannelHandler arg0, com.alibaba.dubbo.common.URL arg1) {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = url.getParameter("dispatcher", url.getParameter("dispather", url.getParameter("channel.handler", "all")));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Dispatcher) name from url(" + url.toString() + ") use keys([dispatcher, dispather, channel.handler])");
com.alibaba.dubbo.remoting.Dispatcher extension = (com.alibaba.dubbo.remoting.Dispatcher)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Dispatcher.class).getExtension(extName);
return extension.dispatch(arg0, arg1);
}
}, dubbo version: 2.5.2, current host: 192.168.19.1
[DEBUG][20180102 10:53:09,784][ExtensionLoader:943]  [DUBBO] package com.alibaba.dubbo.common.threadpool;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ThreadPool$Adpative implements com.alibaba.dubbo.common.threadpool.ThreadPool {
public java.util.concurrent.Executor getExecutor(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("threadpool", "fixed");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.common.threadpool.ThreadPool) name from url(" + url.toString() + ") use keys([threadpool])");
com.alibaba.dubbo.common.threadpool.ThreadPool extension = (com.alibaba.dubbo.common.threadpool.ThreadPool)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.common.threadpool.ThreadPool.class).getExtension(extName);
return extension.getExecutor(arg0);
}
}, dubbo version: 2.5.2, current host: 192.168.19.1
[INFO ][20180102 10:53:09,906][AbstractClient:287]  [DUBBO] Successed connect to server /192.168.19.1:20880 from NettyClient 192.168.19.1 using dubbo version 2.5.2, channel is NettyChannel [channel=[id: 0x5942ee04, /192.168.19.1:57946 => /192.168.19.1:20880]], dubbo version: 2.5.2, current host: 192.168.19.1
[INFO ][20180102 10:53:09,907][AbstractClient:105]  [DUBBO] Start NettyClient DESKTOP-7P60AU6/192.168.19.1 connect to the server /192.168.19.1:20880, dubbo version: 2.5.2, current host: 192.168.19.1
[DEBUG][20180102 10:53:09,945][ExtensionLoader:943]  [DUBBO] package com.alibaba.dubbo.cache;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class CacheFactory$Adpative implements com.alibaba.dubbo.cache.CacheFactory {
public com.alibaba.dubbo.cache.Cache getCache(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("cache", "lru");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.cache.CacheFactory) name from url(" + url.toString() + ") use keys([cache])");
com.alibaba.dubbo.cache.CacheFactory extension = (com.alibaba.dubbo.cache.CacheFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.cache.CacheFactory.class).getExtension(extName);
return extension.getCache(arg0);
}
}, dubbo version: 2.5.2, current host: 192.168.19.1
[DEBUG][20180102 10:53:09,955][ExtensionLoader:943]  [DUBBO] package com.alibaba.dubbo.monitor;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class MonitorFactory$Adpative implements com.alibaba.dubbo.monitor.MonitorFactory {
public com.alibaba.dubbo.monitor.Monitor getMonitor(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.monitor.MonitorFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.monitor.MonitorFactory extension = (com.alibaba.dubbo.monitor.MonitorFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.monitor.MonitorFactory.class).getExtension(extName);
return extension.getMonitor(arg0);
}
}, dubbo version: 2.5.2, current host: 192.168.19.1
[DEBUG][20180102 10:53:09,967][ExtensionLoader:943]  [DUBBO] package com.alibaba.dubbo.validation;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Validation$Adpative implements com.alibaba.dubbo.validation.Validation {
public com.alibaba.dubbo.validation.Validator getValidator(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("validation", "jvalidation");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.validation.Validation) name from url(" + url.toString() + ") use keys([validation])");
com.alibaba.dubbo.validation.Validation extension = (com.alibaba.dubbo.validation.Validation)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.validation.Validation.class).getExtension(extName);
return extension.getValidator(arg0);
}
}, dubbo version: 2.5.2, current host: 192.168.19.1
[INFO ][20180102 10:53:10,022][ReferenceConfig:423]  [DUBBO] Refer dubbo service com.junlon.facade.user.service.AdminQueryFacade from url zookeeper://127.0.0.1:2181/com.alibaba.dubbo.registry.RegistryService?anyhost=true&application=gw-web-portal&check=false&default.accepts=1000&default.dispatcher=all&default.retries=0&default.timeout=30000&dubbo=2.5.2&interface=com.junlon.facade.user.service.AdminQueryFacade&methods=list&pid=68504&retries=0&side=consumer&timestamp=1514861588549, dubbo version: 2.5.2, current host: 192.168.19.1
[DEBUG][20180102 10:53:11,480][DecodeHandler:60]  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcResult, dubbo version: 2.5.2, current host: 192.168.19.1
[INFO ][20180102 10:53:12,096][SpringTest:63] testMybatis : [
	{
		"aaccount":"admin",
		"acontact":"13600000000",
		"adept":"it",
		"aid":"1",
		"aname":"winn啊",
		"apwd":"admin",
		"arole":"1",
		"state":"1"
	},
	{
		"aaccount":"test",
		"acontact":"18100000000",
		"adept":"test",
		"aid":"1589027c8a4411e7b5cec85b76aeb963",
		"aname":"test",
		"apwd":"111111",
		"arole":"1",
		"state":"1"
	},
	{
		"aaccount":"啊啊啊啊啊啊啊12345678",
		"acontact":"13610003422",
		"aid":"1819df469aac11e79724966435dcafda",
		"aname":"å\u0095\u008A12345678",
		"apwd":"admin123",
		"arole":"0",
		"state":"1"
	},
	{
		"aaccount":"test1",
		"acontact":"18100000123",
		"adept":"testtt",
		"aid":"316333ad8d5d11e7b5cec85b76aeb963",
		"aname":"testtt",
		"apwd":"111111",
		"arole":"1",
		"state":"1"
	},
	{
		"aaccount":"lulu",
		"acontact":"18000000001",
		"adept":"IT",
		"aid":"64c7f5eb87e311e7b5cec85b76aeb963",
		"aname":"lulu",
		"apwd":"123456",
		"arole":"1",
		"state":"1"
	},
	{
		"aaccount":"testAdmin",
		"acontact":"18000000001",
		"aid":"8066d30398f311e7acc0c85b76aeb963",
		"aname":"他她",
		"apwd":"admin",
		"arole":"1",
		"state":"1"
	},
	{
		"aaccount":"test2",
		"acontact":"18100000123",
		"adept":"testtt",
		"aid":"db493c0a8d5c11e7b5cec85b76aeb963",
		"aname":"testtt",
		"apwd":"111111",
		"arole":"1",
		"state":"1"
	}
]
[INFO ][20180102 10:53:12,109][AbstractConfig$1:450]  [DUBBO] Run shutdown hook now., dubbo version: 2.5.2, current host: 192.168.19.1
[INFO ][20180102 10:53:12,109][AbstractApplicationContext:957] Closing org.springframework.context.support.GenericApplicationContext@6dc17b83: startup date [Tue Jan 02 10:53:07 CST 2018]; root of context hierarchy
[INFO ][20180102 10:53:12,110][AbstractRegistryFactory:63]  [DUBBO] Close all registries [zookeeper://127.0.0.1:2181/com.alibaba.dubbo.registry.RegistryService?application=gw-web-portal&dubbo=2.5.2&interface=com.alibaba.dubbo.registry.RegistryService&pid=68504&timestamp=1514861588602], dubbo version: 2.5.2, current host: 192.168.19.1
[INFO ][20180102 10:53:12,110][AbstractRegistry:485]  [DUBBO] Destroy registry:zookeeper://127.0.0.1:2181/com.alibaba.dubbo.registry.RegistryService?application=gw-web-portal&dubbo=2.5.2&interface=com.alibaba.dubbo.registry.RegistryService&pid=68504&timestamp=1514861588602, dubbo version: 2.5.2, current host: 192.168.19.1
[INFO ][20180102 10:53:12,111][AbstractRegistry:312]  [DUBBO] Unregister: consumer://192.168.19.1/com.junlon.facade.user.service.AdminQueryFacade?application=gw-web-portal&category=consumers&check=false&dubbo=2.5.2&interface=com.junlon.facade.user.service.AdminQueryFacade&methods=list&pid=68504&side=consumer&timestamp=1514861588549, dubbo version: 2.5.2, current host: 192.168.19.1
[INFO ][20180102 10:53:12,111][AbstractRegistry:343]  [DUBBO] Unsubscribe: consumer://192.168.19.1/com.junlon.facade.user.service.AdminQueryFacade?application=gw-web-portal&category=providers,configurators,routers&check=false&dubbo=2.5.2&interface=com.junlon.facade.user.service.AdminQueryFacade&methods=list&pid=68504&side=consumer&timestamp=1514861588549, dubbo version: 2.5.2, current host: 192.168.19.1
[INFO ][20180102 10:53:12,113][NettyChannel:135]  [DUBBO] Close netty channel [id: 0x5942ee04, /192.168.19.1:57946 => /192.168.19.1:20880], dubbo version: 2.5.2, current host: 192.168.19.1
[INFO ][20180102 10:53:12,116][DubboProtocol$1:130]  [DUBBO] disconected from /192.168.19.1:20880,url:dubbo://192.168.19.1:20880/com.junlon.facade.user.service.AdminQueryFacade?anyhost=true&application=gw-web-portal&check=false&codec=dubbo&default.accepts=1000&default.dispatcher=all&default.retries=0&default.timeout=30000&dubbo=2.5.2&heartbeat=60000&interface=com.junlon.facade.user.service.AdminQueryFacade&methods=list&pid=68504&retries=0&side=consumer&timestamp=1514861588549, dubbo version: 2.5.2, current host: 192.168.19.1
[INFO ][20180102 10:53:12,136][AbstractRegistry:494]  [DUBBO] Destroy unregister url consumer://192.168.19.1/com.junlon.facade.user.service.AdminQueryFacade?application=gw-web-portal&category=consumers&check=false&dubbo=2.5.2&interface=com.junlon.facade.user.service.AdminQueryFacade&methods=list&pid=68504&side=consumer&timestamp=1514861588549, dubbo version: 2.5.2, current host: 192.168.19.1
[INFO ][20180102 10:53:12,137][ZkEventThread:82] Terminate ZkClient event thread.
[INFO ][20180102 10:53:12,164][ZooKeeper:1326] Session: 0x100cc6ac7c10001 closed
[INFO ][20180102 10:53:12,164][ClientCnxn$EventThread:513] EventThread shut down for session: 0x100cc6ac7c10001
[INFO ][20180102 10:53:12,165][DubboProtocol:407]  [DUBBO] Close dubbo connect: 192.168.19.1:0-->192.168.19.1:20880, dubbo version: 2.5.2, current host: 192.168.19.1
[INFO ][20180102 10:53:12,165][DubboProtocol:421]  [DUBBO] Close dubbo connect: 192.168.19.1:0-->192.168.19.1:20880, dubbo version: 2.5.2, current host: 192.168.19.1
