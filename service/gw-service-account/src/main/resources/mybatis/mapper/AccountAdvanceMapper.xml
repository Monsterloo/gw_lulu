<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd"> 


<mapper namespace="com.junlon.core.account.dao.impl.AccountAdvanceDaoImpl">

	<sql id="table"> tbl_account_advance </sql>

	<resultMap id="beanMap" type="com.junlon.facade.account.entity.AccountAdvance">
        <id property="id" column="ID" />
        <result property="version" column="VERSION"/>
        <result property="createTime" column="CREATE_TIME"/>
        <result property="accountNo" column="ACCOUNT_NO"/>
        <result property="userNo" column="USER_NO"/>
        <result property="accountType" column="ACCOUNT_TYPE"/>
        <result property="maxAdvanceAmount" column="MAX_ADVANCE_AMOUNT"/>
        <result property="currentAdvanceAmount" column="CURRENT_ADVANCE_AMOUNT"/>
        <result property="availableAdvanceAmount" column="AVAILABLE_ADVANCE_AMOUNT"/>
        <result property="usedAdvanceAmount" column="USED_ADVANCE_AMOUNT"/>
        <result property="advanceFrozenAmount" column="ADVANCE_FROZEN_AMOUNT"/>
        <result property="advanceScale" column="ADVANCE_SCALE"/>
        <result property="grandTotalReceiveAmount" column="GRAND_TOTAL_RECEIVE_AMOUNT"/>
        <result property="grandTotalFrozenAmount" column="GRAND_TOTAL_FROZEN_AMOUNT"/>
        <result property="grandTotalAvailableFrozenAmount" column="GRAND_TOTAL_AVAILABLE_FROZEN_AMOUNT"/>
        <result property="grandTotalReturnAmount" column="GRAND_TOTAL_RETURN_AMOUNT"/>
        <result property="grandTotalAvailableReturnAmount" column="GRAND_TOTAL_AVAILABLE_RETURN_AMOUNT"/>
        <result property="lastClearDate" column="LAST_CLEAR_DATE"/>
        <result property="lastDailyCollectDate" column="LAST_DAILY_COLLECT_DATE"/>
	</resultMap>
	
	<sql id="Base_Column_List">
		ID,VERSION,CREATE_TIME,ACCOUNT_NO,USER_NO,ACCOUNT_TYPE,MAX_ADVANCE_AMOUNT,CURRENT_ADVANCE_AMOUNT,AVAILABLE_ADVANCE_AMOUNT,USED_ADVANCE_AMOUNT,ADVANCE_FROZEN_AMOUNT,ADVANCE_SCALE,GRAND_TOTAL_RECEIVE_AMOUNT,GRAND_TOTAL_FROZEN_AMOUNT,GRAND_TOTAL_AVAILABLE_FROZEN_AMOUNT,GRAND_TOTAL_RETURN_AMOUNT,GRAND_TOTAL_AVAILABLE_RETURN_AMOUNT,LAST_CLEAR_DATE,LAST_DAILY_COLLECT_DATE
	</sql>
	<sql id="condition_sql">	
	       <if test="id != null and id != ''"> AND ID = #{id}</if>
	       <if test="version != null and version != ''"> AND VERSION = #{version}</if>
	       <if test="createTimeBegin != null and createTimeBegin != ''"> AND CREATE_TIME >= #{createTimeBegin}</if>
		   <if test="createTimeEnd != null and createTimeEnd != ''"> AND CREATE_TIME &lt;= #{createTimeEnd}</if>
	       <if test="accountNo != null and accountNo != ''"> AND ACCOUNT_NO = #{accountNo}</if>
	       <if test="userNo != null and userNo != ''"> AND USER_NO = #{userNo}</if>
	       <if test="accountType != null and accountType != ''"> AND ACCOUNT_TYPE = #{accountType}</if>
	       <if test="maxAdvanceAmount != null and maxAdvanceAmount != ''"> AND MAX_ADVANCE_AMOUNT = #{maxAdvanceAmount}</if>
	       <if test="currentAdvanceAmount != null and currentAdvanceAmount != ''"> AND CURRENT_ADVANCE_AMOUNT = #{currentAdvanceAmount}</if>
	       <if test="availableAdvanceAmount != null and availableAdvanceAmount != ''"> AND AVAILABLE_ADVANCE_AMOUNT = #{availableAdvanceAmount}</if>
	       <if test="usedAdvanceAmount != null and usedAdvanceAmount != ''"> AND USED_ADVANCE_AMOUNT = #{usedAdvanceAmount}</if>
	       <if test="advanceFrozenAmount != null and advanceFrozenAmount != ''"> AND ADVANCE_FROZEN_AMOUNT = #{advanceFrozenAmount}</if>
	       <if test="advanceScale != null and advanceScale != ''"> AND ADVANCE_SCALE = #{advanceScale}</if>
	       <if test="grandTotalReceiveAmount != null and grandTotalReceiveAmount != ''"> AND GRAND_TOTAL_RECEIVE_AMOUNT = #{grandTotalReceiveAmount}</if>
	       <if test="grandTotalFrozenAmount != null and grandTotalFrozenAmount != ''"> AND GRAND_TOTAL_FROZEN_AMOUNT = #{grandTotalFrozenAmount}</if>
	       <if test="grandTotalAvailableFrozenAmount != null and grandTotalAvailableFrozenAmount != ''"> AND GRAND_TOTAL_AVAILABLE_FROZEN_AMOUNT = #{grandTotalAvailableFrozenAmount}</if>
	       <if test="grandTotalReturnAmount != null and grandTotalReturnAmount != ''"> AND GRAND_TOTAL_RETURN_AMOUNT = #{grandTotalReturnAmount}</if>
	       <if test="grandTotalAvailableReturnAmount != null and grandTotalAvailableReturnAmount != ''"> AND GRAND_TOTAL_AVAILABLE_RETURN_AMOUNT = #{grandTotalAvailableReturnAmount}</if>
	       <if test="lastClearDateBegin != null and lastClearDateBegin != ''"> AND LAST_CLEAR_DATE >= #{lastClearDateBegin}</if>
		   <if test="lastClearDateEnd != null and lastClearDateEnd != ''"> AND LAST_CLEAR_DATE &lt;= #{lastClearDateEnd}</if>
	       <if test="lastDailyCollectDateBegin != null and lastDailyCollectDateBegin != ''"> AND LAST_DAILY_COLLECT_DATE >= #{lastDailyCollectDateBegin}</if>
		   <if test="lastDailyCollectDateEnd != null and lastDailyCollectDateEnd != ''"> AND LAST_DAILY_COLLECT_DATE &lt;= #{lastDailyCollectDateEnd}</if>
	       <!-- 是否行锁，要放在查询条件最后 -->
		   <if test="isPessimist != null and isPessimist == true "> for update</if>
	</sql>
	
	<insert id="insert" parameterType="com.junlon.facade.account.entity.AccountAdvance">
		INSERT INTO tbl_account_advance
		(VERSION,CREATE_TIME,ACCOUNT_NO,USER_NO,ACCOUNT_TYPE,MAX_ADVANCE_AMOUNT,CURRENT_ADVANCE_AMOUNT,AVAILABLE_ADVANCE_AMOUNT,USED_ADVANCE_AMOUNT,ADVANCE_FROZEN_AMOUNT,ADVANCE_SCALE,GRAND_TOTAL_RECEIVE_AMOUNT,GRAND_TOTAL_FROZEN_AMOUNT,GRAND_TOTAL_AVAILABLE_FROZEN_AMOUNT,GRAND_TOTAL_RETURN_AMOUNT,GRAND_TOTAL_AVAILABLE_RETURN_AMOUNT,LAST_CLEAR_DATE,LAST_DAILY_COLLECT_DATE)
		VALUES
		(#{version} ,#{createTime} ,#{accountNo} ,#{userNo} ,#{accountType} ,#{maxAdvanceAmount} ,#{currentAdvanceAmount} ,#{availableAdvanceAmount} ,#{usedAdvanceAmount} ,#{advanceFrozenAmount} ,#{advanceScale} ,#{grandTotalReceiveAmount} ,#{grandTotalFrozenAmount} ,#{grandTotalAvailableFrozenAmount} ,#{grandTotalReturnAmount} ,#{grandTotalAvailableReturnAmount} ,#{lastClearDate} ,#{lastDailyCollectDate}  )
    </insert>
    
    <insert id="batchInsert" parameterType="com.junlon.facade.account.entity.AccountAdvance">
		insert into	tbl_account_advance
		(VERSION,CREATE_TIME,ACCOUNT_NO,USER_NO,ACCOUNT_TYPE,MAX_ADVANCE_AMOUNT,CURRENT_ADVANCE_AMOUNT,AVAILABLE_ADVANCE_AMOUNT,USED_ADVANCE_AMOUNT,ADVANCE_FROZEN_AMOUNT,ADVANCE_SCALE,GRAND_TOTAL_RECEIVE_AMOUNT,GRAND_TOTAL_FROZEN_AMOUNT,GRAND_TOTAL_AVAILABLE_FROZEN_AMOUNT,GRAND_TOTAL_RETURN_AMOUNT,GRAND_TOTAL_AVAILABLE_RETURN_AMOUNT,LAST_CLEAR_DATE,LAST_DAILY_COLLECT_DATE)
		values
		<foreach collection="list" item="item" index="index" separator=",">
			(#{version} ,#{createTime} ,#{accountNo} ,#{userNo} ,#{accountType} ,#{maxAdvanceAmount} ,#{currentAdvanceAmount} ,#{availableAdvanceAmount} ,#{usedAdvanceAmount} ,#{advanceFrozenAmount} ,#{advanceScale} ,#{grandTotalReceiveAmount} ,#{grandTotalFrozenAmount} ,#{grandTotalAvailableFrozenAmount} ,#{grandTotalReturnAmount} ,#{grandTotalAvailableReturnAmount} ,#{lastClearDate} ,#{lastDailyCollectDate}  )
		</foreach>
	</insert>
	
	<!-- 更新:version+1 实现乐观锁 -->
	<update id="update" parameterType="com.junlon.facade.account.entity.AccountAdvance">
		update tbl_account_advance set
	        VERSION = #{version} + 1 ,
	        CREATE_TIME = #{createTime} ,
	        ACCOUNT_NO = #{accountNo} ,
	        USER_NO = #{userNo} ,
	        ACCOUNT_TYPE = #{accountType} ,
	        MAX_ADVANCE_AMOUNT = #{maxAdvanceAmount} ,
	        CURRENT_ADVANCE_AMOUNT = #{currentAdvanceAmount} ,
	        AVAILABLE_ADVANCE_AMOUNT = #{availableAdvanceAmount} ,
	        USED_ADVANCE_AMOUNT = #{usedAdvanceAmount} ,
	        ADVANCE_FROZEN_AMOUNT = #{advanceFrozenAmount} ,
	        ADVANCE_SCALE = #{advanceScale} ,
	        GRAND_TOTAL_RECEIVE_AMOUNT = #{grandTotalReceiveAmount} ,
	        GRAND_TOTAL_FROZEN_AMOUNT = #{grandTotalFrozenAmount} ,
	        GRAND_TOTAL_AVAILABLE_FROZEN_AMOUNT = #{grandTotalAvailableFrozenAmount} ,
	        GRAND_TOTAL_RETURN_AMOUNT = #{grandTotalReturnAmount} ,
	        GRAND_TOTAL_AVAILABLE_RETURN_AMOUNT = #{grandTotalAvailableReturnAmount} ,
	        LAST_CLEAR_DATE = #{lastClearDate} ,
	        LAST_DAILY_COLLECT_DATE = #{lastDailyCollectDate} 
        <where>
	        ID = #{id} AND VERSION = #{version} 
        </where> 
	</update>
	
	<delete id="deleteById" parameterType="java.lang.Long">
		delete tbl_account_advance
		where 
	        ID = #{id} 
	</delete>
	
	<select id="getById" parameterType="java.lang.Long" resultMap="beanMap">
		select <include refid="Base_Column_List" />
		from tbl_account_advance
		where 
	        ID = #{id} 
	</select>
	
	<select id="listBy" parameterType="java.util.Map" resultMap="beanMap">
		select <include refid="Base_Column_List" />
		from tbl_account_advance
		<where>
			<include refid="condition_sql" />
		</where>
	</select>
	
	<select id="listPage" parameterType="java.util.Map" resultMap="beanMap">
		select <include refid="Base_Column_List" /> 
		from tbl_account_advance
		<where>
			<include refid="condition_sql" />
		</where>
		<![CDATA[ order by ID desc]]>
	</select>
	
</mapper>

