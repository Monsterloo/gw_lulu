[INFO ][20171229 10:07:10,354][AbstractTestContextBootstrapper:259] Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]
[INFO ][20171229 10:07:10,370][AbstractTestContextBootstrapper:185] Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@5a8806ef, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@6c49835d, org.springframework.test.context.support.DependencyInjectionTestExecutionListener@5e853265, org.springframework.test.context.support.DirtiesContextTestExecutionListener@67205a84, org.springframework.test.context.transaction.TransactionalTestExecutionListener@7d0587f1, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@5d76b067]
[INFO ][20171229 10:07:10,448][XmlBeanDefinitionReader:317] Loading XML bean definitions from class path resource [spring/spring-context.xml]
[INFO ][20171229 10:07:10,620][XmlBeanDefinitionReader:317] Loading XML bean definitions from class path resource [spring/dubbo/dubbo-consumer.xml]
[INFO ][20171229 10:07:10,667][?:?] using logger: com.alibaba.dubbo.common.logger.log4j.Log4jLoggerAdapter
[INFO ][20171229 10:07:10,682][XmlBeanDefinitionReader:317] Loading XML bean definitions from class path resource [spring/dubbo/dubbo-reference-user.xml]
[INFO ][20171229 10:07:10,729][XmlBeanDefinitionReader:317] Loading XML bean definitions from class path resource [spring/spring-amp.xml]
[INFO ][20171229 10:07:10,745][AbstractApplicationContext:577] Refreshing org.springframework.context.support.GenericApplicationContext@4d50efb8: startup date [Fri Dec 29 10:07:10 CST 2017]; root of context hierarchy
[INFO ][20171229 10:07:10,908][PropertiesLoaderSupport:172] Loading properties file from class path resource [public_system.properties]
[DEBUG][20171229 10:07:11,095][ExtensionLoader:943]  [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Protocol$Adpative implements com.alibaba.dubbo.rpc.Protocol {
public void destroy() {throw new UnsupportedOperationException("method public abstract void com.alibaba.dubbo.rpc.Protocol.destroy() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public int getDefaultPort() {throw new UnsupportedOperationException("method public abstract int com.alibaba.dubbo.rpc.Protocol.getDefaultPort() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public com.alibaba.dubbo.rpc.Invoker refer(java.lang.Class arg0, com.alibaba.dubbo.common.URL arg1) throws java.lang.Class {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.refer(arg0, arg1);
}
public com.alibaba.dubbo.rpc.Exporter export(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.Invoker {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.export(arg0);
}
}, dubbo version: 2.5.2, current host: 127.0.0.1
[DEBUG][20171229 10:07:11,330][ExtensionLoader:943]  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Cluster$Adpative implements com.alibaba.dubbo.rpc.cluster.Cluster {
public com.alibaba.dubbo.rpc.Invoker join(com.alibaba.dubbo.rpc.cluster.Directory arg0) throws com.alibaba.dubbo.rpc.cluster.Directory {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("cluster", "failover");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.Cluster) name from url(" + url.toString() + ") use keys([cluster])");
com.alibaba.dubbo.rpc.cluster.Cluster extension = (com.alibaba.dubbo.rpc.cluster.Cluster)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.Cluster.class).getExtension(extName);
return extension.join(arg0);
}
}, dubbo version: 2.5.2, current host: 127.0.0.1
[DEBUG][20171229 10:07:11,361][ExtensionLoader:943]  [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ProxyFactory$Adpative implements com.alibaba.dubbo.rpc.ProxyFactory {
public java.lang.Object getProxy(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.Invoker {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getProxy(arg0);
}
public com.alibaba.dubbo.rpc.Invoker getInvoker(java.lang.Object arg0, java.lang.Class arg1, com.alibaba.dubbo.common.URL arg2) throws java.lang.Object {
if (arg2 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg2;
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getInvoker(arg0, arg1, arg2);
}
}, dubbo version: 2.5.2, current host: 127.0.0.1
[DEBUG][20171229 10:07:11,866][ExtensionLoader:943]  [DUBBO] package com.alibaba.dubbo.registry;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class RegistryFactory$Adpative implements com.alibaba.dubbo.registry.RegistryFactory {
public com.alibaba.dubbo.registry.Registry getRegistry(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.registry.RegistryFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.registry.RegistryFactory extension = (com.alibaba.dubbo.registry.RegistryFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.registry.RegistryFactory.class).getExtension(extName);
return extension.getRegistry(arg0);
}
}, dubbo version: 2.5.2, current host: 127.0.0.1
[DEBUG][20171229 10:07:11,866][ExtensionLoader:943]  [DUBBO] package com.alibaba.dubbo.remoting.zookeeper;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ZookeeperTransporter$Adpative implements com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter {
public com.alibaba.dubbo.remoting.zookeeper.ZookeeperClient connect(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("client", url.getParameter("transporter", "zkclient"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter) name from url(" + url.toString() + ") use keys([client, transporter])");
com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter extension = (com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter.class).getExtension(extName);
return extension.connect(arg0);
}
}, dubbo version: 2.5.2, current host: 127.0.0.1
[INFO ][20171229 10:07:11,897][AbstractRegistry:232]  [DUBBO] Load registry store file C:\Users\junlonlu\.dubbo\dubbo-registry-127.0.0.1.cache, data: {com.junlon.facade.user.service.AdminQueryFacade=empty://192.168.103.21/com.junlon.facade.user.service.AdminQueryFacade?application=gw-web-portal&category=configurators&check=false&dubbo=2.5.2&interface=com.junlon.facade.user.service.AdminQueryFacade&methods=list&pid=66796&side=consumer&timestamp=1514459478362 empty://192.168.103.21/com.junlon.facade.user.service.AdminQueryFacade?application=gw-web-portal&category=routers&check=false&dubbo=2.5.2&interface=com.junlon.facade.user.service.AdminQueryFacade&methods=list&pid=66796&side=consumer&timestamp=1514459478362 empty://192.168.103.21/com.junlon.facade.user.service.AdminQueryFacade?application=gw-web-portal&category=providers&check=false&dubbo=2.5.2&interface=com.junlon.facade.user.service.AdminQueryFacade&methods=list&pid=66796&side=consumer&timestamp=1514459478362, com.alibaba.dubbo.monitor.MonitorService=empty://192.168.19.1/com.alibaba.dubbo.monitor.MonitorService?category=configurators&dubbo=2.5.2&interface=com.alibaba.dubbo.monitor.MonitorService&pid=51500&timestamp=1512805752537 empty://192.168.19.1/com.alibaba.dubbo.monitor.MonitorService?category=routers&dubbo=2.5.2&interface=com.alibaba.dubbo.monitor.MonitorService&pid=51500&timestamp=1512805752537 empty://192.168.19.1/com.alibaba.dubbo.monitor.MonitorService?category=providers&dubbo=2.5.2&interface=com.alibaba.dubbo.monitor.MonitorService&pid=51500&timestamp=1512805752537}, dubbo version: 2.5.2, current host: 127.0.0.1
[INFO ][20171229 10:07:11,912][ZkEventThread:64] Starting ZkClient event thread.
[INFO ][20171229 10:07:11,928][Environment:109] Client environment:zookeeper.version=3.5.3-beta-8ce24f9e675cbefffb8f21a47e06b42864475a60, built on 04/03/2017 16:19 GMT
[INFO ][20171229 10:07:11,928][Environment:109] Client environment:host.name=192.168.103.21
[INFO ][20171229 10:07:11,928][Environment:109] Client environment:java.version=1.8.0_131
[INFO ][20171229 10:07:11,928][Environment:109] Client environment:java.vendor=Oracle Corporation
[INFO ][20171229 10:07:11,928][Environment:109] Client environment:java.home=C:\Program Files\Java\jdk1.8.0_131\jre
[INFO ][20171229 10:07:11,928][Environment:109] Client environment:java.class.path=E:\Idea\gw_lulu\web\gw-web-portal\target\test-classes;E:\Idea\gw_lulu\web\gw-web-portal\target\classes;E:\Laboratory\Maven\repository\com\gw\common\gw-common-base\1.0.0-SHAPSHOT\gw-common-base-1.0.0-SHAPSHOT.jar;E:\Laboratory\Maven\repository\com\gw\facade\gw-facade-user\1.0.0-SHAPSHOT\gw-facade-user-1.0.0-SHAPSHOT.jar;E:\Laboratory\Maven\repository\org\springframework\spring-aop\4.2.3.RELEASE\spring-aop-4.2.3.RELEASE.jar;E:\Laboratory\Maven\repository\org\springframework\spring-aspects\4.2.3.RELEASE\spring-aspects-4.2.3.RELEASE.jar;E:\Laboratory\Maven\repository\org\springframework\spring-beans\4.2.3.RELEASE\spring-beans-4.2.3.RELEASE.jar;E:\Laboratory\Maven\repository\org\springframework\spring-context\4.2.3.RELEASE\spring-context-4.2.3.RELEASE.jar;E:\Laboratory\Maven\repository\org\springframework\spring-context-support\4.2.3.RELEASE\spring-context-support-4.2.3.RELEASE.jar;E:\Laboratory\Maven\repository\org\springframework\spring-core\4.2.3.RELEASE\spring-core-4.2.3.RELEASE.jar;E:\Laboratory\Maven\repository\org\springframework\spring-expression\4.2.3.RELEASE\spring-expression-4.2.3.RELEASE.jar;E:\Laboratory\Maven\repository\org\springframework\spring-instrument\4.2.3.RELEASE\spring-instrument-4.2.3.RELEASE.jar;E:\Laboratory\Maven\repository\org\springframework\spring-instrument-tomcat\4.2.3.RELEASE\spring-instrument-tomcat-4.2.3.RELEASE.jar;E:\Laboratory\Maven\repository\org\springframework\data\spring-data-jpa\1.9.4.RELEASE\spring-data-jpa-1.9.4.RELEASE.jar;E:\Laboratory\Maven\repository\org\springframework\data\spring-data-commons\1.11.4.RELEASE\spring-data-commons-1.11.4.RELEASE.jar;E:\Laboratory\Maven\repository\org\slf4j\jcl-over-slf4j\1.7.13\jcl-over-slf4j-1.7.13.jar;E:\Laboratory\Maven\repository\org\springframework\spring-jms\4.2.3.RELEASE\spring-jms-4.2.3.RELEASE.jar;E:\Laboratory\Maven\repository\org\springframework\spring-messaging\4.2.3.RELEASE\spring-messaging-4.2.3.RELEASE.jar;E:\Laboratory\Maven\repository\org\springframework\spring-orm\4.2.3.RELEASE\spring-orm-4.2.3.RELEASE.jar;E:\Laboratory\Maven\repository\org\springframework\spring-jdbc\4.2.3.RELEASE\spring-jdbc-4.2.3.RELEASE.jar;E:\Laboratory\Maven\repository\org\springframework\spring-oxm\4.2.3.RELEASE\spring-oxm-4.2.3.RELEASE.jar;E:\Laboratory\Maven\repository\org\springframework\spring-tx\4.2.3.RELEASE\spring-tx-4.2.3.RELEASE.jar;E:\Laboratory\Maven\repository\org\springframework\spring-web\4.2.3.RELEASE\spring-web-4.2.3.RELEASE.jar;E:\Laboratory\Maven\repository\org\springframework\spring-webmvc\4.2.3.RELEASE\spring-webmvc-4.2.3.RELEASE.jar;E:\Laboratory\Maven\repository\org\springframework\spring-webmvc-portlet\4.2.3.RELEASE\spring-webmvc-portlet-4.2.3.RELEASE.jar;E:\Laboratory\Maven\repository\org\springframework\spring-test\4.2.3.RELEASE\spring-test-4.2.3.RELEASE.jar;E:\Laboratory\Maven\repository\org\springframework\ws\spring-ws-core\2.3.0.RELEASE\spring-ws-core-2.3.0.RELEASE.jar;E:\Laboratory\Maven\repository\commons-logging\commons-logging\1.1.3\commons-logging-1.1.3.jar;E:\Laboratory\Maven\repository\org\springframework\ws\spring-xml\2.3.0.RELEASE\spring-xml-2.3.0.RELEASE.jar;E:\Laboratory\Maven\repository\org\mybatis\mybatis\3.4.0\mybatis-3.4.0.jar;E:\Laboratory\Maven\repository\org\mybatis\mybatis-spring\1.3.0\mybatis-spring-1.3.0.jar;E:\Laboratory\Maven\repository\org\mybatis\generator\mybatis-generator-core\1.3.5\mybatis-generator-core-1.3.5.jar;E:\Laboratory\Maven\repository\mysql\mysql-connector-java\5.1.9\mysql-connector-java-5.1.9.jar;E:\Laboratory\Maven\repository\com\alibaba\druid\1.0.9\druid-1.0.9.jar;C:\Program Files\Java\jdk1.8.0_131\jre\..\lib\jconsole.jar;C:\Program Files\Java\jdk1.8.0_131\jre\..\lib\tools.jar;E:\Laboratory\Maven\repository\org\jboss\netty\netty\3.2.5.Final\netty-3.2.5.Final.jar;E:\Laboratory\Maven\repository\com\alibaba\dubbo\2.5.2\dubbo-2.5.2.jar;E:\Laboratory\Maven\repository\org\springframework\spring\2.5.6.SEC03\spring-2.5.6.SEC03.jar;E:\Laboratory\Maven\repository\org\javassist\javassist\3.15.0-GA\javassist-3.15.0-GA.jar;E:\Laboratory\Maven\repository\org\apache\zookeeper\zookeeper\3.5.3-beta\zookeeper-3.5.3-beta.jar;E:\Laboratory\Maven\repository\log4j\log4j\1.2.17\log4j-1.2.17.jar;E:\Laboratory\Maven\repository\io\netty\netty\3.10.5.Final\netty-3.10.5.Final.jar;E:\Laboratory\Maven\repository\com\101tec\zkclient\0.9\zkclient-0.9.jar;E:\Laboratory\Maven\repository\org\apache\activemq\activemq-all\5.8.0\activemq-all-5.8.0.jar;E:\Laboratory\Maven\repository\org\apache\activemq\activemq-amqp\5.8.0\activemq-amqp-5.8.0.jar;E:\Laboratory\Maven\repository\org\apache\activemq\activemq-broker\5.8.0\activemq-broker-5.8.0.jar;E:\Laboratory\Maven\repository\org\apache\activemq\activemq-openwire-legacy\5.8.0\activemq-openwire-legacy-5.8.0.jar;E:\Laboratory\Maven\repository\org\fusesource\hawtbuf\hawtbuf\1.9\hawtbuf-1.9.jar;E:\Laboratory\Maven\repository\org\apache\activemq\activemq-pool\5.8.0\activemq-pool-5.8.0.jar;E:\Laboratory\Maven\repository\org\apache\activemq\activemq-client\5.8.0\activemq-client-5.8.0.jar;E:\Laboratory\Maven\repository\org\apache\geronimo\specs\geronimo-jms_1.1_spec\1.1.1\geronimo-jms_1.1_spec-1.1.1.jar;E:\Laboratory\Maven\repository\org\apache\geronimo\specs\geronimo-j2ee-management_1.1_spec\1.0.1\geronimo-j2ee-management_1.1_spec-1.0.1.jar;E:\Laboratory\Maven\repository\org\apache\geronimo\specs\geronimo-jta_1.0.1B_spec\1.0.1\geronimo-jta_1.0.1B_spec-1.0.1.jar;E:\Laboratory\Maven\repository\commons-pool\commons-pool\1.6\commons-pool-1.6.jar;E:\Laboratory\Maven\repository\quartz\quartz\1.6.0\quartz-1.6.0.jar;E:\Laboratory\Maven\repository\org\elasticsearch\client\rest\5.0.0\rest-5.0.0.jar;E:\Laboratory\Maven\repository\org\apache\httpcomponents\httpclient\4.5.2\httpclient-4.5.2.jar;E:\Laboratory\Maven\repository\org\apache\httpcomponents\httpcore\4.4.5\httpcore-4.4.5.jar;E:\Laboratory\Maven\repository\org\apache\httpcomponents\httpasyncclient\4.1.2\httpasyncclient-4.1.2.jar;E:\Laboratory\Maven\repository\org\apache\httpcomponents\httpcore-nio\4.4.5\httpcore-nio-4.4.5.jar;E:\Laboratory\Maven\repository\org\aspectj\aspectjweaver\1.5.4\aspectjweaver-1.5.4.jar;E:\Laboratory\Maven\repository\org\aspectj\aspectjrt\1.5.4\aspectjrt-1.5.4.jar;E:\Laboratory\Maven\repository\junit\junit\4.12\junit-4.12.jar;E:\Laboratory\Maven\repository\org\hamcrest\hamcrest-core\1.3\hamcrest-core-1.3.jar;E:\Laboratory\Maven\repository\javax\servlet\javax.servlet-api\3.1.0\javax.servlet-api-3.1.0.jar;E:\Laboratory\Maven\repository\javax\servlet\jsp\jsp-api\2.2\jsp-api-2.2.jar;E:\Laboratory\Maven\repository\javax\servlet\jstl\1.2\jstl-1.2.jar;E:\Laboratory\Maven\repository\net\sf\jxls\jxls-core\1.0.6\jxls-core-1.0.6.jar;E:\Laboratory\Maven\repository\commons-collections\commons-collections\3.2.1\commons-collections-3.2.1.jar;E:\Laboratory\Maven\repository\org\apache\commons\commons-jexl\2.0.1\commons-jexl-2.0.1.jar;E:\Laboratory\Maven\repository\org\apache\logging\log4j\log4j-api\2.8.2\log4j-api-2.8.2.jar;E:\Laboratory\Maven\repository\org\apache\logging\log4j\log4j-core\2.8.2\log4j-core-2.8.2.jar;E:\Laboratory\Maven\repository\org\slf4j\slf4j-api\1.7.5\slf4j-api-1.7.5.jar;E:\Laboratory\Maven\repository\org\slf4j\slf4j-log4j12\1.7.5\slf4j-log4j12-1.7.5.jar;E:\Laboratory\Maven\repository\org\apache\logging\log4j\log4j-slf4j-impl\2.8.2\log4j-slf4j-impl-2.8.2.jar;E:\Laboratory\Maven\repository\com\google\zxing\core\3.0.0\core-3.0.0.jar;E:\Laboratory\Maven\repository\com\google\zxing\javase\3.0.0\javase-3.0.0.jar;E:\Laboratory\Maven\repository\com\alibaba\fastjson\1.2.6\fastjson-1.2.6.jar;E:\Laboratory\Maven\repository\org\codehaus\jackson\jackson-mapper-asl\1.9.13\jackson-mapper-asl-1.9.13.jar;E:\Laboratory\Maven\repository\org\codehaus\jackson\jackson-core-asl\1.9.13\jackson-core-asl-1.9.13.jar;E:\Laboratory\Maven\repository\org\apache\commons\commons-lang3\3.4\commons-lang3-3.4.jar;E:\Laboratory\Maven\repository\commons-fileupload\commons-fileupload\1.3.1\commons-fileupload-1.3.1.jar;E:\Laboratory\Maven\repository\commons-io\commons-io\2.4\commons-io-2.4.jar;E:\Laboratory\Maven\repository\commons-codec\commons-codec\1.10\commons-codec-1.10.jar;E:\Laboratory\Maven\repository\commons-beanutils\commons-beanutils\1.9.2\commons-beanutils-1.9.2.jar;E:\Laboratory\Maven\repository\org\apache\commons\commons-collections4\4.1\commons-collections4-4.1.jar;E:\Laboratory\Maven\repository\aopalliance\aopalliance\1.0\aopalliance-1.0.jar;E:\Laboratory\Maven\repository\commons-cli\commons-cli\1.2\commons-cli-1.2.jar;E:\Laboratory\Maven\repository\ognl\ognl\3.1.14\ognl-3.1.14.jar;E:\Laboratory\Maven\repository\commons-net\commons-net\3.2\commons-net-3.2.jar;E:\Laboratory\Maven\repository\org\apache\poi\poi\3.15\poi-3.15.jar;E:\Laboratory\Maven\repository\org\apache\poi\poi-ooxml\3.15\poi-ooxml-3.15.jar;E:\Laboratory\Maven\repository\org\apache\poi\poi-ooxml-schemas\3.15\poi-ooxml-schemas-3.15.jar;E:\Laboratory\Maven\repository\org\apache\xmlbeans\xmlbeans\2.6.0\xmlbeans-2.6.0.jar;E:\Laboratory\Maven\repository\stax\stax-api\1.0.1\stax-api-1.0.1.jar;E:\Laboratory\Maven\repository\com\github\virtuald\curvesapi\1.04\curvesapi-1.04.jar;E:\Laboratory\Maven\repository\javax\jms\jms\1.1\jms-1.1.jar;
[INFO ][20171229 10:07:11,928][Environment:109] Client environment:java.library.path=C:\Program Files\Java\jdk1.8.0_131\jre\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\ProgramData\Oracle\Java\javapath;C:\Program Files (x86)\Intel\iCLS Client\;C:\Program Files\Intel\iCLS Client\;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\Program Files\Java\jdk1.8.0_131\bin;D:\Git\Git\cmd;D:\Mysql\mysql-5.6.36-winx64\bin;D:\TortoiseGit\bin;D:\TortoiseSVN\bin;D:\Nodejs\;C:\Users\junlonlu\AppData\Local\Microsoft\WindowsApps;D:\Visual Studio Code\Microsoft VS Code\bin;C:\Users\junlonlu\AppData\Roaming\npm;E:\Laboratory\Maven\apache-maven-3.5.2\bin;.
[INFO ][20171229 10:07:11,928][Environment:109] Client environment:java.io.tmpdir=C:\Users\junlonlu\AppData\Local\Temp\
[INFO ][20171229 10:07:11,928][Environment:109] Client environment:java.compiler=<NA>
[INFO ][20171229 10:07:11,928][Environment:109] Client environment:os.name=Windows 10
[INFO ][20171229 10:07:11,928][Environment:109] Client environment:os.arch=amd64
[INFO ][20171229 10:07:11,928][Environment:109] Client environment:os.version=10.0
[INFO ][20171229 10:07:11,928][Environment:109] Client environment:user.name=junlonlu
[INFO ][20171229 10:07:11,928][Environment:109] Client environment:user.home=C:\Users\junlonlu
[INFO ][20171229 10:07:11,928][Environment:109] Client environment:user.dir=E:\Idea\gw_lulu\web\gw-web-portal
[INFO ][20171229 10:07:11,928][Environment:109] Client environment:os.memory.free=106MB
[INFO ][20171229 10:07:11,928][Environment:109] Client environment:os.memory.max=1799MB
[INFO ][20171229 10:07:11,928][Environment:109] Client environment:os.memory.total=123MB
[INFO ][20171229 10:07:11,928][ZooKeeper:865] Initiating client connection, connectString=127.0.0.1:2181 sessionTimeout=30000 watcher=org.I0Itec.zkclient.ZkClient@1cb346ea
[INFO ][20171229 10:07:13,209][ClientCnxnSocket:236] jute.maxbuffer value is 4194304 Bytes
[INFO ][20171229 10:07:13,289][ZkClient:935] Waiting for keeper state SyncConnected
[INFO ][20171229 10:07:13,289][ClientCnxn$SendThread:1113] Opening socket connection to server 127.0.0.1/127.0.0.1:2181. Will not attempt to authenticate using SASL (unknown error)
[INFO ][20171229 10:07:13,304][ClientCnxn$SendThread:948] Socket connection established, initiating session, client: /127.0.0.1:51158, server: 127.0.0.1/127.0.0.1:2181
[INFO ][20171229 10:07:13,595][ClientCnxn$SendThread:1381] Session establishment complete on server 127.0.0.1/127.0.0.1:2181, sessionid = 0x100b7eecfe00000, negotiated timeout = 30000
[INFO ][20171229 10:07:13,600][ZkClient:712] zookeeper state changed (SyncConnected)
[DEBUG][20171229 10:07:13,617][ExtensionLoader:943]  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class RouterFactory$Adpative implements com.alibaba.dubbo.rpc.cluster.RouterFactory {
public com.alibaba.dubbo.rpc.cluster.Router getRouter(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getProtocol();
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.RouterFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.cluster.RouterFactory extension = (com.alibaba.dubbo.rpc.cluster.RouterFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.RouterFactory.class).getExtension(extName);
return extension.getRouter(arg0);
}
}, dubbo version: 2.5.2, current host: 127.0.0.1
[DEBUG][20171229 10:07:13,632][ExtensionLoader:943]  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ConfiguratorFactory$Adpative implements com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory {
public com.alibaba.dubbo.rpc.cluster.Configurator getConfigurator(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getProtocol();
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory extension = (com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory.class).getExtension(extName);
return extension.getConfigurator(arg0);
}
}, dubbo version: 2.5.2, current host: 127.0.0.1
[INFO ][20171229 10:07:13,648][AbstractRegistry:302]  [DUBBO] Register: consumer://192.168.103.21/com.junlon.facade.user.service.AdminQueryFacade?application=gw-web-portal&category=consumers&check=false&dubbo=2.5.2&interface=com.junlon.facade.user.service.AdminQueryFacade&methods=list&pid=68352&revision=1.0.0-SHAPSHOT&side=consumer&timestamp=1514513231796, dubbo version: 2.5.2, current host: 192.168.103.21
[INFO ][20171229 10:07:13,820][AbstractRegistry:325]  [DUBBO] Subscribe: consumer://192.168.103.21/com.junlon.facade.user.service.AdminQueryFacade?application=gw-web-portal&category=providers,configurators,routers&check=false&dubbo=2.5.2&interface=com.junlon.facade.user.service.AdminQueryFacade&methods=list&pid=68352&revision=1.0.0-SHAPSHOT&side=consumer&timestamp=1514513231796, dubbo version: 2.5.2, current host: 192.168.103.21
[INFO ][20171229 10:07:14,093][AbstractRegistry:422]  [DUBBO] Notify urls for subscribe url consumer://192.168.103.21/com.junlon.facade.user.service.AdminQueryFacade?application=gw-web-portal&category=providers,configurators,routers&check=false&dubbo=2.5.2&interface=com.junlon.facade.user.service.AdminQueryFacade&methods=list&pid=68352&revision=1.0.0-SHAPSHOT&side=consumer&timestamp=1514513231796, urls: [empty://192.168.103.21/com.junlon.facade.user.service.AdminQueryFacade?application=gw-web-portal&category=providers&check=false&dubbo=2.5.2&interface=com.junlon.facade.user.service.AdminQueryFacade&methods=list&pid=68352&revision=1.0.0-SHAPSHOT&side=consumer&timestamp=1514513231796, empty://192.168.103.21/com.junlon.facade.user.service.AdminQueryFacade?application=gw-web-portal&category=configurators&check=false&dubbo=2.5.2&interface=com.junlon.facade.user.service.AdminQueryFacade&methods=list&pid=68352&revision=1.0.0-SHAPSHOT&side=consumer&timestamp=1514513231796, empty://192.168.103.21/com.junlon.facade.user.service.AdminQueryFacade?application=gw-web-portal&category=routers&check=false&dubbo=2.5.2&interface=com.junlon.facade.user.service.AdminQueryFacade&methods=list&pid=68352&revision=1.0.0-SHAPSHOT&side=consumer&timestamp=1514513231796], dubbo version: 2.5.2, current host: 192.168.103.21
[INFO ][20171229 10:07:14,113][ReferenceConfig:423]  [DUBBO] Refer dubbo service com.junlon.facade.user.service.AdminQueryFacade from url zookeeper://127.0.0.1:2181/com.alibaba.dubbo.registry.RegistryService?application=gw-web-portal&check=false&dubbo=2.5.2&interface=com.junlon.facade.user.service.AdminQueryFacade&methods=list&pid=68352&revision=1.0.0-SHAPSHOT&side=consumer&timestamp=1514513231796, dubbo version: 2.5.2, current host: 192.168.103.21
[INFO ][20171229 10:07:14,140][AbstractConfig$1:450]  [DUBBO] Run shutdown hook now., dubbo version: 2.5.2, current host: 192.168.103.21
[INFO ][20171229 10:07:14,140][AbstractApplicationContext:957] Closing org.springframework.context.support.GenericApplicationContext@4d50efb8: startup date [Fri Dec 29 10:07:10 CST 2017]; root of context hierarchy
[INFO ][20171229 10:07:14,141][AbstractRegistryFactory:63]  [DUBBO] Close all registries [zookeeper://127.0.0.1:2181/com.alibaba.dubbo.registry.RegistryService?application=gw-web-portal&dubbo=2.5.2&interface=com.alibaba.dubbo.registry.RegistryService&pid=68352&timestamp=1514513231850], dubbo version: 2.5.2, current host: 192.168.103.21
[INFO ][20171229 10:07:14,141][AbstractRegistry:485]  [DUBBO] Destroy registry:zookeeper://127.0.0.1:2181/com.alibaba.dubbo.registry.RegistryService?application=gw-web-portal&dubbo=2.5.2&interface=com.alibaba.dubbo.registry.RegistryService&pid=68352&timestamp=1514513231850, dubbo version: 2.5.2, current host: 192.168.103.21
[INFO ][20171229 10:07:14,141][AbstractRegistry:312]  [DUBBO] Unregister: consumer://192.168.103.21/com.junlon.facade.user.service.AdminQueryFacade?application=gw-web-portal&category=consumers&check=false&dubbo=2.5.2&interface=com.junlon.facade.user.service.AdminQueryFacade&methods=list&pid=68352&revision=1.0.0-SHAPSHOT&side=consumer&timestamp=1514513231796, dubbo version: 2.5.2, current host: 192.168.103.21
[INFO ][20171229 10:07:14,143][AbstractRegistry:343]  [DUBBO] Unsubscribe: consumer://192.168.103.21/com.junlon.facade.user.service.AdminQueryFacade?application=gw-web-portal&category=providers,configurators,routers&check=false&dubbo=2.5.2&interface=com.junlon.facade.user.service.AdminQueryFacade&methods=list&pid=68352&revision=1.0.0-SHAPSHOT&side=consumer&timestamp=1514513231796, dubbo version: 2.5.2, current host: 192.168.103.21
[INFO ][20171229 10:07:14,185][AbstractRegistry:494]  [DUBBO] Destroy unregister url consumer://192.168.103.21/com.junlon.facade.user.service.AdminQueryFacade?application=gw-web-portal&category=consumers&check=false&dubbo=2.5.2&interface=com.junlon.facade.user.service.AdminQueryFacade&methods=list&pid=68352&revision=1.0.0-SHAPSHOT&side=consumer&timestamp=1514513231796, dubbo version: 2.5.2, current host: 192.168.103.21
[INFO ][20171229 10:07:14,186][ZkEventThread:82] Terminate ZkClient event thread.
[INFO ][20171229 10:07:14,216][ZooKeeper:1326] Session: 0x100b7eecfe00000 closed
[INFO ][20171229 10:07:14,216][ClientCnxn$EventThread:513] EventThread shut down for session: 0x100b7eecfe00000
[INFO ][20171229 10:09:36,644][AbstractTestContextBootstrapper:259] Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]
[INFO ][20171229 10:09:36,675][AbstractTestContextBootstrapper:185] Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@5a8806ef, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@6c49835d, org.springframework.test.context.support.DependencyInjectionTestExecutionListener@5e853265, org.springframework.test.context.support.DirtiesContextTestExecutionListener@67205a84, org.springframework.test.context.transaction.TransactionalTestExecutionListener@7d0587f1, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@5d76b067]
[INFO ][20171229 10:09:36,804][XmlBeanDefinitionReader:317] Loading XML bean definitions from class path resource [spring/spring-context.xml]
[INFO ][20171229 10:09:37,069][XmlBeanDefinitionReader:317] Loading XML bean definitions from class path resource [spring/dubbo/dubbo-consumer.xml]
[INFO ][20171229 10:09:37,116][?:?] using logger: com.alibaba.dubbo.common.logger.log4j.Log4jLoggerAdapter
[INFO ][20171229 10:09:37,132][XmlBeanDefinitionReader:317] Loading XML bean definitions from class path resource [spring/dubbo/dubbo-reference-user.xml]
[INFO ][20171229 10:09:37,163][XmlBeanDefinitionReader:317] Loading XML bean definitions from class path resource [spring/spring-amp.xml]
[INFO ][20171229 10:09:37,179][AbstractApplicationContext:577] Refreshing org.springframework.context.support.GenericApplicationContext@4d50efb8: startup date [Fri Dec 29 10:09:37 CST 2017]; root of context hierarchy
[INFO ][20171229 10:09:37,288][PropertiesLoaderSupport:172] Loading properties file from class path resource [public_system.properties]
[DEBUG][20171229 10:09:37,429][ExtensionLoader:943]  [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Protocol$Adpative implements com.alibaba.dubbo.rpc.Protocol {
public void destroy() {throw new UnsupportedOperationException("method public abstract void com.alibaba.dubbo.rpc.Protocol.destroy() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public int getDefaultPort() {throw new UnsupportedOperationException("method public abstract int com.alibaba.dubbo.rpc.Protocol.getDefaultPort() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public com.alibaba.dubbo.rpc.Invoker refer(java.lang.Class arg0, com.alibaba.dubbo.common.URL arg1) throws java.lang.Class {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.refer(arg0, arg1);
}
public com.alibaba.dubbo.rpc.Exporter export(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.Invoker {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.export(arg0);
}
}, dubbo version: 2.5.2, current host: 127.0.0.1
[DEBUG][20171229 10:09:37,568][ExtensionLoader:943]  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Cluster$Adpative implements com.alibaba.dubbo.rpc.cluster.Cluster {
public com.alibaba.dubbo.rpc.Invoker join(com.alibaba.dubbo.rpc.cluster.Directory arg0) throws com.alibaba.dubbo.rpc.cluster.Directory {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("cluster", "failover");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.Cluster) name from url(" + url.toString() + ") use keys([cluster])");
com.alibaba.dubbo.rpc.cluster.Cluster extension = (com.alibaba.dubbo.rpc.cluster.Cluster)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.Cluster.class).getExtension(extName);
return extension.join(arg0);
}
}, dubbo version: 2.5.2, current host: 127.0.0.1
[DEBUG][20171229 10:09:37,583][ExtensionLoader:943]  [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ProxyFactory$Adpative implements com.alibaba.dubbo.rpc.ProxyFactory {
public com.alibaba.dubbo.rpc.Invoker getInvoker(java.lang.Object arg0, java.lang.Class arg1, com.alibaba.dubbo.common.URL arg2) throws java.lang.Object {
if (arg2 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg2;
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getInvoker(arg0, arg1, arg2);
}
public java.lang.Object getProxy(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.Invoker {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getProxy(arg0);
}
}, dubbo version: 2.5.2, current host: 127.0.0.1
[DEBUG][20171229 10:09:37,816][ExtensionLoader:943]  [DUBBO] package com.alibaba.dubbo.registry;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class RegistryFactory$Adpative implements com.alibaba.dubbo.registry.RegistryFactory {
public com.alibaba.dubbo.registry.Registry getRegistry(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.registry.RegistryFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.registry.RegistryFactory extension = (com.alibaba.dubbo.registry.RegistryFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.registry.RegistryFactory.class).getExtension(extName);
return extension.getRegistry(arg0);
}
}, dubbo version: 2.5.2, current host: 127.0.0.1
[DEBUG][20171229 10:09:37,832][ExtensionLoader:943]  [DUBBO] package com.alibaba.dubbo.remoting.zookeeper;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ZookeeperTransporter$Adpative implements com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter {
public com.alibaba.dubbo.remoting.zookeeper.ZookeeperClient connect(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("client", url.getParameter("transporter", "zkclient"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter) name from url(" + url.toString() + ") use keys([client, transporter])");
com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter extension = (com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter.class).getExtension(extName);
return extension.connect(arg0);
}
}, dubbo version: 2.5.2, current host: 127.0.0.1
[INFO ][20171229 10:09:37,847][AbstractRegistry:232]  [DUBBO] Load registry store file C:\Users\junlonlu\.dubbo\dubbo-registry-127.0.0.1.cache, data: {com.junlon.facade.user.service.AdminQueryFacade=empty://192.168.103.21/com.junlon.facade.user.service.AdminQueryFacade?application=gw-web-portal&category=configurators&check=false&dubbo=2.5.2&interface=com.junlon.facade.user.service.AdminQueryFacade&methods=list&pid=68352&revision=1.0.0-SHAPSHOT&side=consumer&timestamp=1514513231796 empty://192.168.103.21/com.junlon.facade.user.service.AdminQueryFacade?application=gw-web-portal&category=routers&check=false&dubbo=2.5.2&interface=com.junlon.facade.user.service.AdminQueryFacade&methods=list&pid=68352&revision=1.0.0-SHAPSHOT&side=consumer&timestamp=1514513231796 empty://192.168.103.21/com.junlon.facade.user.service.AdminQueryFacade?application=gw-web-portal&category=providers&check=false&dubbo=2.5.2&interface=com.junlon.facade.user.service.AdminQueryFacade&methods=list&pid=68352&revision=1.0.0-SHAPSHOT&side=consumer&timestamp=1514513231796, com.alibaba.dubbo.monitor.MonitorService=empty://192.168.19.1/com.alibaba.dubbo.monitor.MonitorService?category=configurators&dubbo=2.5.2&interface=com.alibaba.dubbo.monitor.MonitorService&pid=51500&timestamp=1512805752537 empty://192.168.19.1/com.alibaba.dubbo.monitor.MonitorService?category=routers&dubbo=2.5.2&interface=com.alibaba.dubbo.monitor.MonitorService&pid=51500&timestamp=1512805752537 empty://192.168.19.1/com.alibaba.dubbo.monitor.MonitorService?category=providers&dubbo=2.5.2&interface=com.alibaba.dubbo.monitor.MonitorService&pid=51500&timestamp=1512805752537}, dubbo version: 2.5.2, current host: 127.0.0.1
[INFO ][20171229 10:09:37,879][ZkEventThread:64] Starting ZkClient event thread.
[INFO ][20171229 10:09:37,894][Environment:109] Client environment:zookeeper.version=3.5.3-beta-8ce24f9e675cbefffb8f21a47e06b42864475a60, built on 04/03/2017 16:19 GMT
[INFO ][20171229 10:09:37,894][Environment:109] Client environment:host.name=192.168.103.21
[INFO ][20171229 10:09:37,894][Environment:109] Client environment:java.version=1.8.0_131
[INFO ][20171229 10:09:37,894][Environment:109] Client environment:java.vendor=Oracle Corporation
[INFO ][20171229 10:09:37,894][Environment:109] Client environment:java.home=C:\Program Files\Java\jdk1.8.0_131\jre
[INFO ][20171229 10:09:37,894][Environment:109] Client environment:java.class.path=E:\Idea\gw_lulu\web\gw-web-portal\target\test-classes;E:\Idea\gw_lulu\web\gw-web-portal\target\classes;E:\Laboratory\Maven\repository\com\gw\common\gw-common-base\1.0.0-SHAPSHOT\gw-common-base-1.0.0-SHAPSHOT.jar;E:\Laboratory\Maven\repository\com\gw\facade\gw-facade-user\1.0.0-SHAPSHOT\gw-facade-user-1.0.0-SHAPSHOT.jar;E:\Laboratory\Maven\repository\org\springframework\spring-aop\4.2.3.RELEASE\spring-aop-4.2.3.RELEASE.jar;E:\Laboratory\Maven\repository\org\springframework\spring-aspects\4.2.3.RELEASE\spring-aspects-4.2.3.RELEASE.jar;E:\Laboratory\Maven\repository\org\springframework\spring-beans\4.2.3.RELEASE\spring-beans-4.2.3.RELEASE.jar;E:\Laboratory\Maven\repository\org\springframework\spring-context\4.2.3.RELEASE\spring-context-4.2.3.RELEASE.jar;E:\Laboratory\Maven\repository\org\springframework\spring-context-support\4.2.3.RELEASE\spring-context-support-4.2.3.RELEASE.jar;E:\Laboratory\Maven\repository\org\springframework\spring-core\4.2.3.RELEASE\spring-core-4.2.3.RELEASE.jar;E:\Laboratory\Maven\repository\org\springframework\spring-expression\4.2.3.RELEASE\spring-expression-4.2.3.RELEASE.jar;E:\Laboratory\Maven\repository\org\springframework\spring-instrument\4.2.3.RELEASE\spring-instrument-4.2.3.RELEASE.jar;E:\Laboratory\Maven\repository\org\springframework\spring-instrument-tomcat\4.2.3.RELEASE\spring-instrument-tomcat-4.2.3.RELEASE.jar;E:\Laboratory\Maven\repository\org\springframework\data\spring-data-jpa\1.9.4.RELEASE\spring-data-jpa-1.9.4.RELEASE.jar;E:\Laboratory\Maven\repository\org\springframework\data\spring-data-commons\1.11.4.RELEASE\spring-data-commons-1.11.4.RELEASE.jar;E:\Laboratory\Maven\repository\org\slf4j\jcl-over-slf4j\1.7.13\jcl-over-slf4j-1.7.13.jar;E:\Laboratory\Maven\repository\org\springframework\spring-jms\4.2.3.RELEASE\spring-jms-4.2.3.RELEASE.jar;E:\Laboratory\Maven\repository\org\springframework\spring-messaging\4.2.3.RELEASE\spring-messaging-4.2.3.RELEASE.jar;E:\Laboratory\Maven\repository\org\springframework\spring-orm\4.2.3.RELEASE\spring-orm-4.2.3.RELEASE.jar;E:\Laboratory\Maven\repository\org\springframework\spring-jdbc\4.2.3.RELEASE\spring-jdbc-4.2.3.RELEASE.jar;E:\Laboratory\Maven\repository\org\springframework\spring-oxm\4.2.3.RELEASE\spring-oxm-4.2.3.RELEASE.jar;E:\Laboratory\Maven\repository\org\springframework\spring-tx\4.2.3.RELEASE\spring-tx-4.2.3.RELEASE.jar;E:\Laboratory\Maven\repository\org\springframework\spring-web\4.2.3.RELEASE\spring-web-4.2.3.RELEASE.jar;E:\Laboratory\Maven\repository\org\springframework\spring-webmvc\4.2.3.RELEASE\spring-webmvc-4.2.3.RELEASE.jar;E:\Laboratory\Maven\repository\org\springframework\spring-webmvc-portlet\4.2.3.RELEASE\spring-webmvc-portlet-4.2.3.RELEASE.jar;E:\Laboratory\Maven\repository\org\springframework\spring-test\4.2.3.RELEASE\spring-test-4.2.3.RELEASE.jar;E:\Laboratory\Maven\repository\org\springframework\ws\spring-ws-core\2.3.0.RELEASE\spring-ws-core-2.3.0.RELEASE.jar;E:\Laboratory\Maven\repository\commons-logging\commons-logging\1.1.3\commons-logging-1.1.3.jar;E:\Laboratory\Maven\repository\org\springframework\ws\spring-xml\2.3.0.RELEASE\spring-xml-2.3.0.RELEASE.jar;E:\Laboratory\Maven\repository\org\mybatis\mybatis\3.4.0\mybatis-3.4.0.jar;E:\Laboratory\Maven\repository\org\mybatis\mybatis-spring\1.3.0\mybatis-spring-1.3.0.jar;E:\Laboratory\Maven\repository\org\mybatis\generator\mybatis-generator-core\1.3.5\mybatis-generator-core-1.3.5.jar;E:\Laboratory\Maven\repository\mysql\mysql-connector-java\5.1.9\mysql-connector-java-5.1.9.jar;E:\Laboratory\Maven\repository\com\alibaba\druid\1.0.9\druid-1.0.9.jar;C:\Program Files\Java\jdk1.8.0_131\jre\..\lib\jconsole.jar;C:\Program Files\Java\jdk1.8.0_131\jre\..\lib\tools.jar;E:\Laboratory\Maven\repository\org\jboss\netty\netty\3.2.5.Final\netty-3.2.5.Final.jar;E:\Laboratory\Maven\repository\com\alibaba\dubbo\2.5.2\dubbo-2.5.2.jar;E:\Laboratory\Maven\repository\org\springframework\spring\2.5.6.SEC03\spring-2.5.6.SEC03.jar;E:\Laboratory\Maven\repository\org\javassist\javassist\3.15.0-GA\javassist-3.15.0-GA.jar;E:\Laboratory\Maven\repository\org\apache\zookeeper\zookeeper\3.5.3-beta\zookeeper-3.5.3-beta.jar;E:\Laboratory\Maven\repository\log4j\log4j\1.2.17\log4j-1.2.17.jar;E:\Laboratory\Maven\repository\io\netty\netty\3.10.5.Final\netty-3.10.5.Final.jar;E:\Laboratory\Maven\repository\com\101tec\zkclient\0.9\zkclient-0.9.jar;E:\Laboratory\Maven\repository\org\apache\activemq\activemq-all\5.8.0\activemq-all-5.8.0.jar;E:\Laboratory\Maven\repository\org\apache\activemq\activemq-amqp\5.8.0\activemq-amqp-5.8.0.jar;E:\Laboratory\Maven\repository\org\apache\activemq\activemq-broker\5.8.0\activemq-broker-5.8.0.jar;E:\Laboratory\Maven\repository\org\apache\activemq\activemq-openwire-legacy\5.8.0\activemq-openwire-legacy-5.8.0.jar;E:\Laboratory\Maven\repository\org\fusesource\hawtbuf\hawtbuf\1.9\hawtbuf-1.9.jar;E:\Laboratory\Maven\repository\org\apache\activemq\activemq-pool\5.8.0\activemq-pool-5.8.0.jar;E:\Laboratory\Maven\repository\org\apache\activemq\activemq-client\5.8.0\activemq-client-5.8.0.jar;E:\Laboratory\Maven\repository\org\apache\geronimo\specs\geronimo-jms_1.1_spec\1.1.1\geronimo-jms_1.1_spec-1.1.1.jar;E:\Laboratory\Maven\repository\org\apache\geronimo\specs\geronimo-j2ee-management_1.1_spec\1.0.1\geronimo-j2ee-management_1.1_spec-1.0.1.jar;E:\Laboratory\Maven\repository\org\apache\geronimo\specs\geronimo-jta_1.0.1B_spec\1.0.1\geronimo-jta_1.0.1B_spec-1.0.1.jar;E:\Laboratory\Maven\repository\commons-pool\commons-pool\1.6\commons-pool-1.6.jar;E:\Laboratory\Maven\repository\quartz\quartz\1.6.0\quartz-1.6.0.jar;E:\Laboratory\Maven\repository\org\elasticsearch\client\rest\5.0.0\rest-5.0.0.jar;E:\Laboratory\Maven\repository\org\apache\httpcomponents\httpclient\4.5.2\httpclient-4.5.2.jar;E:\Laboratory\Maven\repository\org\apache\httpcomponents\httpcore\4.4.5\httpcore-4.4.5.jar;E:\Laboratory\Maven\repository\org\apache\httpcomponents\httpasyncclient\4.1.2\httpasyncclient-4.1.2.jar;E:\Laboratory\Maven\repository\org\apache\httpcomponents\httpcore-nio\4.4.5\httpcore-nio-4.4.5.jar;E:\Laboratory\Maven\repository\org\aspectj\aspectjweaver\1.5.4\aspectjweaver-1.5.4.jar;E:\Laboratory\Maven\repository\org\aspectj\aspectjrt\1.5.4\aspectjrt-1.5.4.jar;E:\Laboratory\Maven\repository\junit\junit\4.12\junit-4.12.jar;E:\Laboratory\Maven\repository\org\hamcrest\hamcrest-core\1.3\hamcrest-core-1.3.jar;E:\Laboratory\Maven\repository\javax\servlet\javax.servlet-api\3.1.0\javax.servlet-api-3.1.0.jar;E:\Laboratory\Maven\repository\javax\servlet\jsp\jsp-api\2.2\jsp-api-2.2.jar;E:\Laboratory\Maven\repository\javax\servlet\jstl\1.2\jstl-1.2.jar;E:\Laboratory\Maven\repository\net\sf\jxls\jxls-core\1.0.6\jxls-core-1.0.6.jar;E:\Laboratory\Maven\repository\commons-collections\commons-collections\3.2.1\commons-collections-3.2.1.jar;E:\Laboratory\Maven\repository\org\apache\commons\commons-jexl\2.0.1\commons-jexl-2.0.1.jar;E:\Laboratory\Maven\repository\org\apache\logging\log4j\log4j-api\2.8.2\log4j-api-2.8.2.jar;E:\Laboratory\Maven\repository\org\apache\logging\log4j\log4j-core\2.8.2\log4j-core-2.8.2.jar;E:\Laboratory\Maven\repository\org\slf4j\slf4j-api\1.7.5\slf4j-api-1.7.5.jar;E:\Laboratory\Maven\repository\org\slf4j\slf4j-log4j12\1.7.5\slf4j-log4j12-1.7.5.jar;E:\Laboratory\Maven\repository\org\apache\logging\log4j\log4j-slf4j-impl\2.8.2\log4j-slf4j-impl-2.8.2.jar;E:\Laboratory\Maven\repository\com\google\zxing\core\3.0.0\core-3.0.0.jar;E:\Laboratory\Maven\repository\com\google\zxing\javase\3.0.0\javase-3.0.0.jar;E:\Laboratory\Maven\repository\com\alibaba\fastjson\1.2.6\fastjson-1.2.6.jar;E:\Laboratory\Maven\repository\org\codehaus\jackson\jackson-mapper-asl\1.9.13\jackson-mapper-asl-1.9.13.jar;E:\Laboratory\Maven\repository\org\codehaus\jackson\jackson-core-asl\1.9.13\jackson-core-asl-1.9.13.jar;E:\Laboratory\Maven\repository\org\apache\commons\commons-lang3\3.4\commons-lang3-3.4.jar;E:\Laboratory\Maven\repository\commons-fileupload\commons-fileupload\1.3.1\commons-fileupload-1.3.1.jar;E:\Laboratory\Maven\repository\commons-io\commons-io\2.4\commons-io-2.4.jar;E:\Laboratory\Maven\repository\commons-codec\commons-codec\1.10\commons-codec-1.10.jar;E:\Laboratory\Maven\repository\commons-beanutils\commons-beanutils\1.9.2\commons-beanutils-1.9.2.jar;E:\Laboratory\Maven\repository\org\apache\commons\commons-collections4\4.1\commons-collections4-4.1.jar;E:\Laboratory\Maven\repository\aopalliance\aopalliance\1.0\aopalliance-1.0.jar;E:\Laboratory\Maven\repository\commons-cli\commons-cli\1.2\commons-cli-1.2.jar;E:\Laboratory\Maven\repository\ognl\ognl\3.1.14\ognl-3.1.14.jar;E:\Laboratory\Maven\repository\commons-net\commons-net\3.2\commons-net-3.2.jar;E:\Laboratory\Maven\repository\org\apache\poi\poi\3.15\poi-3.15.jar;E:\Laboratory\Maven\repository\org\apache\poi\poi-ooxml\3.15\poi-ooxml-3.15.jar;E:\Laboratory\Maven\repository\org\apache\poi\poi-ooxml-schemas\3.15\poi-ooxml-schemas-3.15.jar;E:\Laboratory\Maven\repository\org\apache\xmlbeans\xmlbeans\2.6.0\xmlbeans-2.6.0.jar;E:\Laboratory\Maven\repository\stax\stax-api\1.0.1\stax-api-1.0.1.jar;E:\Laboratory\Maven\repository\com\github\virtuald\curvesapi\1.04\curvesapi-1.04.jar;E:\Laboratory\Maven\repository\javax\jms\jms\1.1\jms-1.1.jar;
[INFO ][20171229 10:09:37,894][Environment:109] Client environment:java.library.path=C:\Program Files\Java\jdk1.8.0_131\jre\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\ProgramData\Oracle\Java\javapath;C:\Program Files (x86)\Intel\iCLS Client\;C:\Program Files\Intel\iCLS Client\;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\Program Files\Java\jdk1.8.0_131\bin;D:\Git\Git\cmd;D:\Mysql\mysql-5.6.36-winx64\bin;D:\TortoiseGit\bin;D:\TortoiseSVN\bin;D:\Nodejs\;C:\Users\junlonlu\AppData\Local\Microsoft\WindowsApps;D:\Visual Studio Code\Microsoft VS Code\bin;C:\Users\junlonlu\AppData\Roaming\npm;E:\Laboratory\Maven\apache-maven-3.5.2\bin;.
[INFO ][20171229 10:09:37,910][Environment:109] Client environment:java.io.tmpdir=C:\Users\junlonlu\AppData\Local\Temp\
[INFO ][20171229 10:09:37,910][Environment:109] Client environment:java.compiler=<NA>
[INFO ][20171229 10:09:37,910][Environment:109] Client environment:os.name=Windows 10
[INFO ][20171229 10:09:37,910][Environment:109] Client environment:os.arch=amd64
[INFO ][20171229 10:09:37,910][Environment:109] Client environment:os.version=10.0
[INFO ][20171229 10:09:37,910][Environment:109] Client environment:user.name=junlonlu
[INFO ][20171229 10:09:37,910][Environment:109] Client environment:user.home=C:\Users\junlonlu
[INFO ][20171229 10:09:37,910][Environment:109] Client environment:user.dir=E:\Idea\gw_lulu\web\gw-web-portal
[INFO ][20171229 10:09:37,910][Environment:109] Client environment:os.memory.free=107MB
[INFO ][20171229 10:09:37,910][Environment:109] Client environment:os.memory.max=1799MB
[INFO ][20171229 10:09:37,910][Environment:109] Client environment:os.memory.total=123MB
[INFO ][20171229 10:09:37,910][ZooKeeper:865] Initiating client connection, connectString=127.0.0.1:2181 sessionTimeout=30000 watcher=org.I0Itec.zkclient.ZkClient@1cb346ea
[INFO ][20171229 10:09:38,207][ClientCnxnSocket:236] jute.maxbuffer value is 4194304 Bytes
[INFO ][20171229 10:09:38,207][ZkClient:935] Waiting for keeper state SyncConnected
[INFO ][20171229 10:09:38,222][ClientCnxn$SendThread:1113] Opening socket connection to server 127.0.0.1/127.0.0.1:2181. Will not attempt to authenticate using SASL (unknown error)
[INFO ][20171229 10:09:38,222][ClientCnxn$SendThread:948] Socket connection established, initiating session, client: /127.0.0.1:51230, server: 127.0.0.1/127.0.0.1:2181
[INFO ][20171229 10:09:38,285][ClientCnxn$SendThread:1381] Session establishment complete on server 127.0.0.1/127.0.0.1:2181, sessionid = 0x100b7eecfe00001, negotiated timeout = 30000
[INFO ][20171229 10:09:38,301][ZkClient:712] zookeeper state changed (SyncConnected)
[DEBUG][20171229 10:09:38,316][ExtensionLoader:943]  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class RouterFactory$Adpative implements com.alibaba.dubbo.rpc.cluster.RouterFactory {
public com.alibaba.dubbo.rpc.cluster.Router getRouter(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getProtocol();
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.RouterFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.cluster.RouterFactory extension = (com.alibaba.dubbo.rpc.cluster.RouterFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.RouterFactory.class).getExtension(extName);
return extension.getRouter(arg0);
}
}, dubbo version: 2.5.2, current host: 127.0.0.1
[DEBUG][20171229 10:09:38,332][ExtensionLoader:943]  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ConfiguratorFactory$Adpative implements com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory {
public com.alibaba.dubbo.rpc.cluster.Configurator getConfigurator(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getProtocol();
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory extension = (com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory.class).getExtension(extName);
return extension.getConfigurator(arg0);
}
}, dubbo version: 2.5.2, current host: 127.0.0.1
[INFO ][20171229 10:09:38,347][AbstractRegistry:302]  [DUBBO] Register: consumer://192.168.103.21/com.junlon.facade.user.service.AdminQueryFacade?application=gw-web-portal&category=consumers&check=false&dubbo=2.5.2&interface=com.junlon.facade.user.service.AdminQueryFacade&methods=list&pid=66820&revision=1.0.0-SHAPSHOT&side=consumer&timestamp=1514513377755, dubbo version: 2.5.2, current host: 192.168.103.21
[INFO ][20171229 10:09:38,481][AbstractRegistry:325]  [DUBBO] Subscribe: consumer://192.168.103.21/com.junlon.facade.user.service.AdminQueryFacade?application=gw-web-portal&category=providers,configurators,routers&check=false&dubbo=2.5.2&interface=com.junlon.facade.user.service.AdminQueryFacade&methods=list&pid=66820&revision=1.0.0-SHAPSHOT&side=consumer&timestamp=1514513377755, dubbo version: 2.5.2, current host: 192.168.103.21
[INFO ][20171229 10:09:38,716][AbstractRegistry:422]  [DUBBO] Notify urls for subscribe url consumer://192.168.103.21/com.junlon.facade.user.service.AdminQueryFacade?application=gw-web-portal&category=providers,configurators,routers&check=false&dubbo=2.5.2&interface=com.junlon.facade.user.service.AdminQueryFacade&methods=list&pid=66820&revision=1.0.0-SHAPSHOT&side=consumer&timestamp=1514513377755, urls: [empty://192.168.103.21/com.junlon.facade.user.service.AdminQueryFacade?application=gw-web-portal&category=providers&check=false&dubbo=2.5.2&interface=com.junlon.facade.user.service.AdminQueryFacade&methods=list&pid=66820&revision=1.0.0-SHAPSHOT&side=consumer&timestamp=1514513377755, empty://192.168.103.21/com.junlon.facade.user.service.AdminQueryFacade?application=gw-web-portal&category=configurators&check=false&dubbo=2.5.2&interface=com.junlon.facade.user.service.AdminQueryFacade&methods=list&pid=66820&revision=1.0.0-SHAPSHOT&side=consumer&timestamp=1514513377755, empty://192.168.103.21/com.junlon.facade.user.service.AdminQueryFacade?application=gw-web-portal&category=routers&check=false&dubbo=2.5.2&interface=com.junlon.facade.user.service.AdminQueryFacade&methods=list&pid=66820&revision=1.0.0-SHAPSHOT&side=consumer&timestamp=1514513377755], dubbo version: 2.5.2, current host: 192.168.103.21
[INFO ][20171229 10:09:38,731][ReferenceConfig:423]  [DUBBO] Refer dubbo service com.junlon.facade.user.service.AdminQueryFacade from url zookeeper://127.0.0.1:2181/com.alibaba.dubbo.registry.RegistryService?application=gw-web-portal&check=false&dubbo=2.5.2&interface=com.junlon.facade.user.service.AdminQueryFacade&methods=list&pid=66820&revision=1.0.0-SHAPSHOT&side=consumer&timestamp=1514513377755, dubbo version: 2.5.2, current host: 192.168.103.21
[INFO ][20171229 10:09:38,747][AbstractConfig$1:450]  [DUBBO] Run shutdown hook now., dubbo version: 2.5.2, current host: 192.168.103.21
[INFO ][20171229 10:09:38,747][AbstractApplicationContext:957] Closing org.springframework.context.support.GenericApplicationContext@4d50efb8: startup date [Fri Dec 29 10:09:37 CST 2017]; root of context hierarchy
[INFO ][20171229 10:09:38,747][AbstractRegistryFactory:63]  [DUBBO] Close all registries [zookeeper://127.0.0.1:2181/com.alibaba.dubbo.registry.RegistryService?application=gw-web-portal&dubbo=2.5.2&interface=com.alibaba.dubbo.registry.RegistryService&pid=66820&timestamp=1514513377816], dubbo version: 2.5.2, current host: 192.168.103.21
[INFO ][20171229 10:09:38,747][AbstractRegistry:343]  [DUBBO] Unsubscribe: consumer://192.168.103.21/com.junlon.facade.user.service.AdminQueryFacade?application=gw-web-portal&category=providers,configurators,routers&check=false&dubbo=2.5.2&interface=com.junlon.facade.user.service.AdminQueryFacade&methods=list&pid=66820&revision=1.0.0-SHAPSHOT&side=consumer&timestamp=1514513377755, dubbo version: 2.5.2, current host: 192.168.103.21
[INFO ][20171229 10:09:38,747][AbstractRegistry:485]  [DUBBO] Destroy registry:zookeeper://127.0.0.1:2181/com.alibaba.dubbo.registry.RegistryService?application=gw-web-portal&dubbo=2.5.2&interface=com.alibaba.dubbo.registry.RegistryService&pid=66820&timestamp=1514513377816, dubbo version: 2.5.2, current host: 192.168.103.21
[INFO ][20171229 10:09:38,747][AbstractRegistry:312]  [DUBBO] Unregister: consumer://192.168.103.21/com.junlon.facade.user.service.AdminQueryFacade?application=gw-web-portal&category=consumers&check=false&dubbo=2.5.2&interface=com.junlon.facade.user.service.AdminQueryFacade&methods=list&pid=66820&revision=1.0.0-SHAPSHOT&side=consumer&timestamp=1514513377755, dubbo version: 2.5.2, current host: 192.168.103.21
[INFO ][20171229 10:09:38,778][AbstractRegistry:494]  [DUBBO] Destroy unregister url consumer://192.168.103.21/com.junlon.facade.user.service.AdminQueryFacade?application=gw-web-portal&category=consumers&check=false&dubbo=2.5.2&interface=com.junlon.facade.user.service.AdminQueryFacade&methods=list&pid=66820&revision=1.0.0-SHAPSHOT&side=consumer&timestamp=1514513377755, dubbo version: 2.5.2, current host: 192.168.103.21
[INFO ][20171229 10:09:38,779][ZkEventThread:82] Terminate ZkClient event thread.
[INFO ][20171229 10:09:38,794][ZooKeeper:1326] Session: 0x100b7eecfe00001 closed
[INFO ][20171229 10:09:38,794][ClientCnxn$EventThread:513] EventThread shut down for session: 0x100b7eecfe00001
[INFO ][20171229 10:11:11,925][AbstractTestContextBootstrapper:259] Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]
[INFO ][20171229 10:11:11,956][AbstractTestContextBootstrapper:185] Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@47d90b9e, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@1184ab05, org.springframework.test.context.support.DependencyInjectionTestExecutionListener@3aefe5e5, org.springframework.test.context.support.DirtiesContextTestExecutionListener@149e0f5d, org.springframework.test.context.transaction.TransactionalTestExecutionListener@1b1473ab, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@2f7c2f4f]
[INFO ][20171229 10:11:12,128][XmlBeanDefinitionReader:317] Loading XML bean definitions from class path resource [spring/spring-context.xml]
[INFO ][20171229 10:11:12,615][XmlBeanDefinitionReader:317] Loading XML bean definitions from class path resource [spring/dubbo/dubbo-consumer.xml]
[INFO ][20171229 10:11:12,677][?:?] using logger: com.alibaba.dubbo.common.logger.log4j.Log4jLoggerAdapter
[INFO ][20171229 10:11:12,724][XmlBeanDefinitionReader:317] Loading XML bean definitions from class path resource [spring/dubbo/dubbo-reference-user.xml]
[INFO ][20171229 10:11:12,792][XmlBeanDefinitionReader:317] Loading XML bean definitions from class path resource [spring/spring-amp.xml]
[INFO ][20171229 10:11:12,827][AbstractApplicationContext:577] Refreshing org.springframework.context.support.GenericApplicationContext@6dc17b83: startup date [Fri Dec 29 10:11:12 CST 2017]; root of context hierarchy
[INFO ][20171229 10:11:13,049][PropertiesLoaderSupport:172] Loading properties file from class path resource [public_system.properties]
[DEBUG][20171229 10:11:13,237][ExtensionLoader:943]  [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Protocol$Adpative implements com.alibaba.dubbo.rpc.Protocol {
public void destroy() {throw new UnsupportedOperationException("method public abstract void com.alibaba.dubbo.rpc.Protocol.destroy() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public int getDefaultPort() {throw new UnsupportedOperationException("method public abstract int com.alibaba.dubbo.rpc.Protocol.getDefaultPort() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public com.alibaba.dubbo.rpc.Invoker refer(java.lang.Class arg0, com.alibaba.dubbo.common.URL arg1) throws java.lang.Class {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.refer(arg0, arg1);
}
public com.alibaba.dubbo.rpc.Exporter export(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.Invoker {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.export(arg0);
}
}, dubbo version: 2.5.2, current host: 127.0.0.1
[DEBUG][20171229 10:11:13,424][ExtensionLoader:943]  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Cluster$Adpative implements com.alibaba.dubbo.rpc.cluster.Cluster {
public com.alibaba.dubbo.rpc.Invoker join(com.alibaba.dubbo.rpc.cluster.Directory arg0) throws com.alibaba.dubbo.rpc.cluster.Directory {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("cluster", "failover");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.Cluster) name from url(" + url.toString() + ") use keys([cluster])");
com.alibaba.dubbo.rpc.cluster.Cluster extension = (com.alibaba.dubbo.rpc.cluster.Cluster)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.Cluster.class).getExtension(extName);
return extension.join(arg0);
}
}, dubbo version: 2.5.2, current host: 127.0.0.1
[DEBUG][20171229 10:11:13,456][ExtensionLoader:943]  [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ProxyFactory$Adpative implements com.alibaba.dubbo.rpc.ProxyFactory {
public java.lang.Object getProxy(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.Invoker {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getProxy(arg0);
}
public com.alibaba.dubbo.rpc.Invoker getInvoker(java.lang.Object arg0, java.lang.Class arg1, com.alibaba.dubbo.common.URL arg2) throws java.lang.Object {
if (arg2 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg2;
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getInvoker(arg0, arg1, arg2);
}
}, dubbo version: 2.5.2, current host: 127.0.0.1
[DEBUG][20171229 10:11:13,809][ExtensionLoader:943]  [DUBBO] package com.alibaba.dubbo.registry;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class RegistryFactory$Adpative implements com.alibaba.dubbo.registry.RegistryFactory {
public com.alibaba.dubbo.registry.Registry getRegistry(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.registry.RegistryFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.registry.RegistryFactory extension = (com.alibaba.dubbo.registry.RegistryFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.registry.RegistryFactory.class).getExtension(extName);
return extension.getRegistry(arg0);
}
}, dubbo version: 2.5.2, current host: 127.0.0.1
[DEBUG][20171229 10:11:13,827][ExtensionLoader:943]  [DUBBO] package com.alibaba.dubbo.remoting.zookeeper;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ZookeeperTransporter$Adpative implements com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter {
public com.alibaba.dubbo.remoting.zookeeper.ZookeeperClient connect(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("client", url.getParameter("transporter", "zkclient"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter) name from url(" + url.toString() + ") use keys([client, transporter])");
com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter extension = (com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter.class).getExtension(extName);
return extension.connect(arg0);
}
}, dubbo version: 2.5.2, current host: 127.0.0.1
[INFO ][20171229 10:11:13,863][AbstractRegistry:232]  [DUBBO] Load registry store file C:\Users\junlonlu\.dubbo\dubbo-registry-127.0.0.1.cache, data: {com.junlon.facade.user.service.AdminQueryFacade=empty://192.168.103.21/com.junlon.facade.user.service.AdminQueryFacade?application=gw-web-portal&category=configurators&check=false&dubbo=2.5.2&interface=com.junlon.facade.user.service.AdminQueryFacade&methods=list&pid=66820&revision=1.0.0-SHAPSHOT&side=consumer&timestamp=1514513377755 empty://192.168.103.21/com.junlon.facade.user.service.AdminQueryFacade?application=gw-web-portal&category=routers&check=false&dubbo=2.5.2&interface=com.junlon.facade.user.service.AdminQueryFacade&methods=list&pid=66820&revision=1.0.0-SHAPSHOT&side=consumer&timestamp=1514513377755 empty://192.168.103.21/com.junlon.facade.user.service.AdminQueryFacade?application=gw-web-portal&category=providers&check=false&dubbo=2.5.2&interface=com.junlon.facade.user.service.AdminQueryFacade&methods=list&pid=66820&revision=1.0.0-SHAPSHOT&side=consumer&timestamp=1514513377755, com.alibaba.dubbo.monitor.MonitorService=empty://192.168.19.1/com.alibaba.dubbo.monitor.MonitorService?category=configurators&dubbo=2.5.2&interface=com.alibaba.dubbo.monitor.MonitorService&pid=51500&timestamp=1512805752537 empty://192.168.19.1/com.alibaba.dubbo.monitor.MonitorService?category=routers&dubbo=2.5.2&interface=com.alibaba.dubbo.monitor.MonitorService&pid=51500&timestamp=1512805752537 empty://192.168.19.1/com.alibaba.dubbo.monitor.MonitorService?category=providers&dubbo=2.5.2&interface=com.alibaba.dubbo.monitor.MonitorService&pid=51500&timestamp=1512805752537}, dubbo version: 2.5.2, current host: 127.0.0.1
[INFO ][20171229 10:11:13,884][ZkEventThread:64] Starting ZkClient event thread.
[INFO ][20171229 10:11:13,889][Environment:109] Client environment:zookeeper.version=3.5.3-beta-8ce24f9e675cbefffb8f21a47e06b42864475a60, built on 04/03/2017 16:19 GMT
[INFO ][20171229 10:11:13,889][Environment:109] Client environment:host.name=192.168.103.21
[INFO ][20171229 10:11:13,889][Environment:109] Client environment:java.version=1.8.0_131
[INFO ][20171229 10:11:13,889][Environment:109] Client environment:java.vendor=Oracle Corporation
[INFO ][20171229 10:11:13,889][Environment:109] Client environment:java.home=C:\Program Files\Java\jdk1.8.0_131\jre
[INFO ][20171229 10:11:13,889][Environment:109] Client environment:java.class.path=D:\Idea\IntelliJ IDEA 2017.1.1\lib\idea_rt.jar;D:\Idea\IntelliJ IDEA 2017.1.1\plugins\junit\lib\junit-rt.jar;C:\Program Files\Java\jdk1.8.0_131\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.8.0_131\jre\lib\deploy.jar;C:\Program Files\Java\jdk1.8.0_131\jre\lib\ext\access-bridge-64.jar;C:\Program Files\Java\jdk1.8.0_131\jre\lib\ext\cldrdata.jar;C:\Program Files\Java\jdk1.8.0_131\jre\lib\ext\dnsns.jar;C:\Program Files\Java\jdk1.8.0_131\jre\lib\ext\jaccess.jar;C:\Program Files\Java\jdk1.8.0_131\jre\lib\ext\jfxrt.jar;C:\Program Files\Java\jdk1.8.0_131\jre\lib\ext\localedata.jar;C:\Program Files\Java\jdk1.8.0_131\jre\lib\ext\nashorn.jar;C:\Program Files\Java\jdk1.8.0_131\jre\lib\ext\sunec.jar;C:\Program Files\Java\jdk1.8.0_131\jre\lib\ext\sunjce_provider.jar;C:\Program Files\Java\jdk1.8.0_131\jre\lib\ext\sunmscapi.jar;C:\Program Files\Java\jdk1.8.0_131\jre\lib\ext\sunpkcs11.jar;C:\Program Files\Java\jdk1.8.0_131\jre\lib\ext\zipfs.jar;C:\Program Files\Java\jdk1.8.0_131\jre\lib\javaws.jar;C:\Program Files\Java\jdk1.8.0_131\jre\lib\jce.jar;C:\Program Files\Java\jdk1.8.0_131\jre\lib\jfr.jar;C:\Program Files\Java\jdk1.8.0_131\jre\lib\jfxswt.jar;C:\Program Files\Java\jdk1.8.0_131\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.8.0_131\jre\lib\management-agent.jar;C:\Program Files\Java\jdk1.8.0_131\jre\lib\plugin.jar;C:\Program Files\Java\jdk1.8.0_131\jre\lib\resources.jar;C:\Program Files\Java\jdk1.8.0_131\jre\lib\rt.jar;D:\Idea\IntelliJ IDEA 2017.1.1\lib\junit.jar;D:\Idea\IntelliJ IDEA 2017.1.1\lib\junit-4.12.jar;D:\Idea\IntelliJ IDEA 2017.1.1\lib\hamcrest-core-1.3.jar;E:\Idea\gw_lulu\web\gw-web-portal\target\test-classes;E:\Idea\gw_lulu\web\gw-web-portal\target\classes;E:\Idea\gw_lulu\common\gw-common-base\target\classes;E:\Idea\gw_lulu\facade\gw-facade-user\target\classes;E:\Laboratory\Maven\repository\org\springframework\spring-aop\4.2.3.RELEASE\spring-aop-4.2.3.RELEASE.jar;E:\Laboratory\Maven\repository\org\springframework\spring-aspects\4.2.3.RELEASE\spring-aspects-4.2.3.RELEASE.jar;E:\Laboratory\Maven\repository\org\springframework\spring-beans\4.2.3.RELEASE\spring-beans-4.2.3.RELEASE.jar;E:\Laboratory\Maven\repository\org\springframework\spring-context\4.2.3.RELEASE\spring-context-4.2.3.RELEASE.jar;E:\Laboratory\Maven\repository\org\springframework\spring-context-support\4.2.3.RELEASE\spring-context-support-4.2.3.RELEASE.jar;E:\Laboratory\Maven\repository\org\springframework\spring-core\4.2.3.RELEASE\spring-core-4.2.3.RELEASE.jar;E:\Laboratory\Maven\repository\org\springframework\spring-expression\4.2.3.RELEASE\spring-expression-4.2.3.RELEASE.jar;E:\Laboratory\Maven\repository\org\springframework\spring-instrument\4.2.3.RELEASE\spring-instrument-4.2.3.RELEASE.jar;E:\Laboratory\Maven\repository\org\springframework\spring-instrument-tomcat\4.2.3.RELEASE\spring-instrument-tomcat-4.2.3.RELEASE.jar;E:\Laboratory\Maven\repository\org\springframework\data\spring-data-jpa\1.9.4.RELEASE\spring-data-jpa-1.9.4.RELEASE.jar;E:\Laboratory\Maven\repository\org\springframework\data\spring-data-commons\1.11.4.RELEASE\spring-data-commons-1.11.4.RELEASE.jar;E:\Laboratory\Maven\repository\org\slf4j\jcl-over-slf4j\1.7.13\jcl-over-slf4j-1.7.13.jar;E:\Laboratory\Maven\repository\org\springframework\spring-jms\4.2.3.RELEASE\spring-jms-4.2.3.RELEASE.jar;E:\Laboratory\Maven\repository\org\springframework\spring-messaging\4.2.3.RELEASE\spring-messaging-4.2.3.RELEASE.jar;E:\Laboratory\Maven\repository\org\springframework\spring-orm\4.2.3.RELEASE\spring-orm-4.2.3.RELEASE.jar;E:\Laboratory\Maven\repository\org\springframework\spring-jdbc\4.2.3.RELEASE\spring-jdbc-4.2.3.RELEASE.jar;E:\Laboratory\Maven\repository\org\springframework\spring-oxm\4.2.3.RELEASE\spring-oxm-4.2.3.RELEASE.jar;E:\Laboratory\Maven\repository\org\springframework\spring-tx\4.2.3.RELEASE\spring-tx-4.2.3.RELEASE.jar;E:\Laboratory\Maven\repository\org\springframework\spring-web\4.2.3.RELEASE\spring-web-4.2.3.RELEASE.jar;E:\Laboratory\Maven\repository\org\springframework\spring-webmvc\4.2.3.RELEASE\spring-webmvc-4.2.3.RELEASE.jar;E:\Laboratory\Maven\repository\org\springframework\spring-webmvc-portlet\4.2.3.RELEASE\spring-webmvc-portlet-4.2.3.RELEASE.jar;E:\Laboratory\Maven\repository\org\springframework\spring-test\4.2.3.RELEASE\spring-test-4.2.3.RELEASE.jar;E:\Laboratory\Maven\repository\org\springframework\ws\spring-ws-core\2.3.0.RELEASE\spring-ws-core-2.3.0.RELEASE.jar;E:\Laboratory\Maven\repository\commons-logging\commons-logging\1.1.3\commons-logging-1.1.3.jar;E:\Laboratory\Maven\repository\org\springframework\ws\spring-xml\2.3.0.RELEASE\spring-xml-2.3.0.RELEASE.jar;E:\Laboratory\Maven\repository\org\mybatis\mybatis\3.4.0\mybatis-3.4.0.jar;E:\Laboratory\Maven\repository\org\mybatis\mybatis-spring\1.3.0\mybatis-spring-1.3.0.jar;E:\Laboratory\Maven\repository\org\mybatis\generator\mybatis-generator-core\1.3.5\mybatis-generator-core-1.3.5.jar;E:\Laboratory\Maven\repository\mysql\mysql-connector-java\5.1.9\mysql-connector-java-5.1.9.jar;E:\Laboratory\Maven\repository\com\alibaba\druid\1.0.9\druid-1.0.9.jar;C:\Program Files\Java\jdk1.8.0_131\lib\jconsole.jar;C:\Program Files\Java\jdk1.8.0_131\lib\tools.jar;E:\Laboratory\Maven\repository\org\jboss\netty\netty\3.2.5.Final\netty-3.2.5.Final.jar;E:\Laboratory\Maven\repository\com\alibaba\dubbo\2.5.2\dubbo-2.5.2.jar;E:\Laboratory\Maven\repository\org\springframework\spring\2.5.6.SEC03\spring-2.5.6.SEC03.jar;E:\Laboratory\Maven\repository\org\javassist\javassist\3.15.0-GA\javassist-3.15.0-GA.jar;E:\Laboratory\Maven\repository\org\apache\zookeeper\zookeeper\3.5.3-beta\zookeeper-3.5.3-beta.jar;E:\Laboratory\Maven\repository\log4j\log4j\1.2.17\log4j-1.2.17.jar;E:\Laboratory\Maven\repository\io\netty\netty\3.10.5.Final\netty-3.10.5.Final.jar;E:\Laboratory\Maven\repository\com\101tec\zkclient\0.9\zkclient-0.9.jar;E:\Laboratory\Maven\repository\org\apache\activemq\activemq-all\5.8.0\activemq-all-5.8.0.jar;E:\Laboratory\Maven\repository\org\apache\activemq\activemq-amqp\5.8.0\activemq-amqp-5.8.0.jar;E:\Laboratory\Maven\repository\org\apache\activemq\activemq-broker\5.8.0\activemq-broker-5.8.0.jar;E:\Laboratory\Maven\repository\org\apache\activemq\activemq-openwire-legacy\5.8.0\activemq-openwire-legacy-5.8.0.jar;E:\Laboratory\Maven\repository\org\fusesource\hawtbuf\hawtbuf\1.9\hawtbuf-1.9.jar;E:\Laboratory\Maven\repository\org\apache\activemq\activemq-pool\5.8.0\activemq-pool-5.8.0.jar;E:\Laboratory\Maven\repository\org\apache\activemq\activemq-client\5.8.0\activemq-client-5.8.0.jar;E:\Laboratory\Maven\repository\org\apache\geronimo\specs\geronimo-jms_1.1_spec\1.1.1\geronimo-jms_1.1_spec-1.1.1.jar;E:\Laboratory\Maven\repository\org\apache\geronimo\specs\geronimo-j2ee-management_1.1_spec\1.0.1\geronimo-j2ee-management_1.1_spec-1.0.1.jar;E:\Laboratory\Maven\repository\org\apache\geronimo\specs\geronimo-jta_1.0.1B_spec\1.0.1\geronimo-jta_1.0.1B_spec-1.0.1.jar;E:\Laboratory\Maven\repository\commons-pool\commons-pool\1.6\commons-pool-1.6.jar;E:\Laboratory\Maven\repository\quartz\quartz\1.6.0\quartz-1.6.0.jar;E:\Laboratory\Maven\repository\org\elasticsearch\client\rest\5.0.0\rest-5.0.0.jar;E:\Laboratory\Maven\repository\org\apache\httpcomponents\httpclient\4.5.2\httpclient-4.5.2.jar;E:\Laboratory\Maven\repository\org\apache\httpcomponents\httpcore\4.4.5\httpcore-4.4.5.jar;E:\Laboratory\Maven\repository\org\apache\httpcomponents\httpasyncclient\4.1.2\httpasyncclient-4.1.2.jar;E:\Laboratory\Maven\repository\org\apache\httpcomponents\httpcore-nio\4.4.5\httpcore-nio-4.4.5.jar;E:\Laboratory\Maven\repository\org\aspectj\aspectjweaver\1.5.4\aspectjweaver-1.5.4.jar;E:\Laboratory\Maven\repository\org\aspectj\aspectjrt\1.5.4\aspectjrt-1.5.4.jar;E:\Laboratory\Maven\repository\junit\junit\4.12\junit-4.12.jar;E:\Laboratory\Maven\repository\org\hamcrest\hamcrest-core\1.3\hamcrest-core-1.3.jar;E:\Laboratory\Maven\repository\javax\servlet\javax.servlet-api\3.1.0\javax.servlet-api-3.1.0.jar;E:\Laboratory\Maven\repository\javax\servlet\jsp\jsp-api\2.2\jsp-api-2.2.jar;E:\Laboratory\Maven\repository\javax\servlet\jstl\1.2\jstl-1.2.jar;E:\Laboratory\Maven\repository\net\sf\jxls\jxls-core\1.0.6\jxls-core-1.0.6.jar;E:\Laboratory\Maven\repository\commons-collections\commons-collections\3.2.1\commons-collections-3.2.1.jar;E:\Laboratory\Maven\repository\org\apache\commons\commons-jexl\2.0.1\commons-jexl-2.0.1.jar;E:\Laboratory\Maven\repository\org\apache\logging\log4j\log4j-api\2.8.2\log4j-api-2.8.2.jar;E:\Laboratory\Maven\repository\org\apache\logging\log4j\log4j-core\2.8.2\log4j-core-2.8.2.jar;E:\Laboratory\Maven\repository\org\slf4j\slf4j-api\1.7.5\slf4j-api-1.7.5.jar;E:\Laboratory\Maven\repository\org\slf4j\slf4j-log4j12\1.7.5\slf4j-log4j12-1.7.5.jar;E:\Laboratory\Maven\repository\org\apache\logging\log4j\log4j-slf4j-impl\2.8.2\log4j-slf4j-impl-2.8.2.jar;E:\Laboratory\Maven\repository\com\google\zxing\core\3.0.0\core-3.0.0.jar;E:\Laboratory\Maven\repository\com\google\zxing\javase\3.0.0\javase-3.0.0.jar;E:\Laboratory\Maven\repository\com\alibaba\fastjson\1.2.6\fastjson-1.2.6.jar;E:\Laboratory\Maven\repository\org\codehaus\jackson\jackson-mapper-asl\1.9.13\jackson-mapper-asl-1.9.13.jar;E:\Laboratory\Maven\repository\org\codehaus\jackson\jackson-core-asl\1.9.13\jackson-core-asl-1.9.13.jar;E:\Laboratory\Maven\repository\org\apache\commons\commons-lang3\3.4\commons-lang3-3.4.jar;E:\Laboratory\Maven\repository\commons-fileupload\commons-fileupload\1.3.1\commons-fileupload-1.3.1.jar;E:\Laboratory\Maven\repository\commons-io\commons-io\2.4\commons-io-2.4.jar;E:\Laboratory\Maven\repository\commons-codec\commons-codec\1.10\commons-codec-1.10.jar;E:\Laboratory\Maven\repository\commons-beanutils\commons-beanutils\1.9.2\commons-beanutils-1.9.2.jar;E:\Laboratory\Maven\repository\org\apache\commons\commons-collections4\4.1\commons-collections4-4.1.jar;E:\Laboratory\Maven\repository\aopalliance\aopalliance\1.0\aopalliance-1.0.jar;E:\Laboratory\Maven\repository\commons-cli\commons-cli\1.2\commons-cli-1.2.jar;E:\Laboratory\Maven\repository\ognl\ognl\3.1.14\ognl-3.1.14.jar;E:\Laboratory\Maven\repository\commons-net\commons-net\3.2\commons-net-3.2.jar;E:\Laboratory\Maven\repository\org\apache\poi\poi\3.15\poi-3.15.jar;E:\Laboratory\Maven\repository\org\apache\poi\poi-ooxml\3.15\poi-ooxml-3.15.jar;E:\Laboratory\Maven\repository\org\apache\poi\poi-ooxml-schemas\3.15\poi-ooxml-schemas-3.15.jar;E:\Laboratory\Maven\repository\org\apache\xmlbeans\xmlbeans\2.6.0\xmlbeans-2.6.0.jar;E:\Laboratory\Maven\repository\stax\stax-api\1.0.1\stax-api-1.0.1.jar;E:\Laboratory\Maven\repository\com\github\virtuald\curvesapi\1.04\curvesapi-1.04.jar;E:\Laboratory\Maven\repository\javax\jms\jms\1.1\jms-1.1.jar
[INFO ][20171229 10:11:13,905][Environment:109] Client environment:java.library.path=C:\Program Files\Java\jdk1.8.0_131\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\ProgramData\Oracle\Java\javapath;C:\Program Files (x86)\Intel\iCLS Client\;C:\Program Files\Intel\iCLS Client\;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\Program Files\Java\jdk1.8.0_131\bin;D:\Git\Git\cmd;D:\Mysql\mysql-5.6.36-winx64\bin;D:\TortoiseGit\bin;D:\TortoiseSVN\bin;D:\Nodejs\;C:\Users\junlonlu\AppData\Local\Microsoft\WindowsApps;D:\Visual Studio Code\Microsoft VS Code\bin;C:\Users\junlonlu\AppData\Roaming\npm;E:\Laboratory\Maven\apache-maven-3.5.2\bin;.
[INFO ][20171229 10:11:13,905][Environment:109] Client environment:java.io.tmpdir=C:\Users\junlonlu\AppData\Local\Temp\
[INFO ][20171229 10:11:13,905][Environment:109] Client environment:java.compiler=<NA>
[INFO ][20171229 10:11:13,905][Environment:109] Client environment:os.name=Windows 10
[INFO ][20171229 10:11:13,905][Environment:109] Client environment:os.arch=amd64
[INFO ][20171229 10:11:13,905][Environment:109] Client environment:os.version=10.0
[INFO ][20171229 10:11:13,905][Environment:109] Client environment:user.name=junlonlu
[INFO ][20171229 10:11:13,905][Environment:109] Client environment:user.home=C:\Users\junlonlu
[INFO ][20171229 10:11:13,905][Environment:109] Client environment:user.dir=E:\Idea\gw_lulu\web\gw-web-portal
[INFO ][20171229 10:11:13,905][Environment:109] Client environment:os.memory.free=97MB
[INFO ][20171229 10:11:13,905][Environment:109] Client environment:os.memory.max=1799MB
[INFO ][20171229 10:11:13,905][Environment:109] Client environment:os.memory.total=123MB
[INFO ][20171229 10:11:13,905][ZooKeeper:865] Initiating client connection, connectString=127.0.0.1:2181 sessionTimeout=30000 watcher=org.I0Itec.zkclient.ZkClient@56db847e
[INFO ][20171229 10:11:14,202][ClientCnxnSocket:236] jute.maxbuffer value is 4194304 Bytes
[INFO ][20171229 10:11:14,202][ZkClient:935] Waiting for keeper state SyncConnected
[INFO ][20171229 10:11:14,218][ClientCnxn$SendThread:1113] Opening socket connection to server 127.0.0.1/127.0.0.1:2181. Will not attempt to authenticate using SASL (unknown error)
[INFO ][20171229 10:11:14,218][ClientCnxn$SendThread:948] Socket connection established, initiating session, client: /127.0.0.1:51285, server: 127.0.0.1/127.0.0.1:2181
[INFO ][20171229 10:11:14,265][ClientCnxn$SendThread:1381] Session establishment complete on server 127.0.0.1/127.0.0.1:2181, sessionid = 0x100b7eecfe00002, negotiated timeout = 30000
[INFO ][20171229 10:11:14,280][ZkClient:712] zookeeper state changed (SyncConnected)
[DEBUG][20171229 10:11:14,296][ExtensionLoader:943]  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class RouterFactory$Adpative implements com.alibaba.dubbo.rpc.cluster.RouterFactory {
public com.alibaba.dubbo.rpc.cluster.Router getRouter(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getProtocol();
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.RouterFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.cluster.RouterFactory extension = (com.alibaba.dubbo.rpc.cluster.RouterFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.RouterFactory.class).getExtension(extName);
return extension.getRouter(arg0);
}
}, dubbo version: 2.5.2, current host: 127.0.0.1
[DEBUG][20171229 10:11:14,311][ExtensionLoader:943]  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ConfiguratorFactory$Adpative implements com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory {
public com.alibaba.dubbo.rpc.cluster.Configurator getConfigurator(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getProtocol();
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory extension = (com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory.class).getExtension(extName);
return extension.getConfigurator(arg0);
}
}, dubbo version: 2.5.2, current host: 127.0.0.1
[INFO ][20171229 10:11:14,327][AbstractRegistry:302]  [DUBBO] Register: consumer://192.168.103.21/com.junlon.facade.user.service.AdminQueryFacade?application=gw-web-portal&category=consumers&check=false&dubbo=2.5.2&interface=com.junlon.facade.user.service.AdminQueryFacade&methods=list&pid=61240&side=consumer&timestamp=1514513473737, dubbo version: 2.5.2, current host: 192.168.103.21
[INFO ][20171229 10:11:14,421][AbstractRegistry:325]  [DUBBO] Subscribe: consumer://192.168.103.21/com.junlon.facade.user.service.AdminQueryFacade?application=gw-web-portal&category=providers,configurators,routers&check=false&dubbo=2.5.2&interface=com.junlon.facade.user.service.AdminQueryFacade&methods=list&pid=61240&side=consumer&timestamp=1514513473737, dubbo version: 2.5.2, current host: 192.168.103.21
[INFO ][20171229 10:11:14,640][AbstractRegistry:422]  [DUBBO] Notify urls for subscribe url consumer://192.168.103.21/com.junlon.facade.user.service.AdminQueryFacade?application=gw-web-portal&category=providers,configurators,routers&check=false&dubbo=2.5.2&interface=com.junlon.facade.user.service.AdminQueryFacade&methods=list&pid=61240&side=consumer&timestamp=1514513473737, urls: [empty://192.168.103.21/com.junlon.facade.user.service.AdminQueryFacade?application=gw-web-portal&category=providers&check=false&dubbo=2.5.2&interface=com.junlon.facade.user.service.AdminQueryFacade&methods=list&pid=61240&side=consumer&timestamp=1514513473737, empty://192.168.103.21/com.junlon.facade.user.service.AdminQueryFacade?application=gw-web-portal&category=configurators&check=false&dubbo=2.5.2&interface=com.junlon.facade.user.service.AdminQueryFacade&methods=list&pid=61240&side=consumer&timestamp=1514513473737, empty://192.168.103.21/com.junlon.facade.user.service.AdminQueryFacade?application=gw-web-portal&category=routers&check=false&dubbo=2.5.2&interface=com.junlon.facade.user.service.AdminQueryFacade&methods=list&pid=61240&side=consumer&timestamp=1514513473737], dubbo version: 2.5.2, current host: 192.168.103.21
[INFO ][20171229 10:11:14,655][ReferenceConfig:423]  [DUBBO] Refer dubbo service com.junlon.facade.user.service.AdminQueryFacade from url zookeeper://127.0.0.1:2181/com.alibaba.dubbo.registry.RegistryService?application=gw-web-portal&check=false&dubbo=2.5.2&interface=com.junlon.facade.user.service.AdminQueryFacade&methods=list&pid=61240&side=consumer&timestamp=1514513473737, dubbo version: 2.5.2, current host: 192.168.103.21
[INFO ][20171229 10:11:14,702][AbstractApplicationContext:957] Closing org.springframework.context.support.GenericApplicationContext@6dc17b83: startup date [Fri Dec 29 10:11:12 CST 2017]; root of context hierarchy
[INFO ][20171229 10:11:14,702][AbstractConfig$1:450]  [DUBBO] Run shutdown hook now., dubbo version: 2.5.2, current host: 192.168.103.21
[INFO ][20171229 10:11:14,702][AbstractRegistry:343]  [DUBBO] Unsubscribe: consumer://192.168.103.21/com.junlon.facade.user.service.AdminQueryFacade?application=gw-web-portal&category=providers,configurators,routers&check=false&dubbo=2.5.2&interface=com.junlon.facade.user.service.AdminQueryFacade&methods=list&pid=61240&side=consumer&timestamp=1514513473737, dubbo version: 2.5.2, current host: 192.168.103.21
[INFO ][20171229 10:11:14,702][AbstractRegistryFactory:63]  [DUBBO] Close all registries [zookeeper://127.0.0.1:2181/com.alibaba.dubbo.registry.RegistryService?application=gw-web-portal&dubbo=2.5.2&interface=com.alibaba.dubbo.registry.RegistryService&pid=61240&timestamp=1514513473792], dubbo version: 2.5.2, current host: 192.168.103.21
[INFO ][20171229 10:11:14,702][AbstractRegistry:485]  [DUBBO] Destroy registry:zookeeper://127.0.0.1:2181/com.alibaba.dubbo.registry.RegistryService?application=gw-web-portal&dubbo=2.5.2&interface=com.alibaba.dubbo.registry.RegistryService&pid=61240&timestamp=1514513473792, dubbo version: 2.5.2, current host: 192.168.103.21
[INFO ][20171229 10:11:14,702][AbstractRegistry:312]  [DUBBO] Unregister: consumer://192.168.103.21/com.junlon.facade.user.service.AdminQueryFacade?application=gw-web-portal&category=consumers&check=false&dubbo=2.5.2&interface=com.junlon.facade.user.service.AdminQueryFacade&methods=list&pid=61240&side=consumer&timestamp=1514513473737, dubbo version: 2.5.2, current host: 192.168.103.21
[INFO ][20171229 10:11:14,718][AbstractRegistry:494]  [DUBBO] Destroy unregister url consumer://192.168.103.21/com.junlon.facade.user.service.AdminQueryFacade?application=gw-web-portal&category=consumers&check=false&dubbo=2.5.2&interface=com.junlon.facade.user.service.AdminQueryFacade&methods=list&pid=61240&side=consumer&timestamp=1514513473737, dubbo version: 2.5.2, current host: 192.168.103.21
[INFO ][20171229 10:11:14,718][ZkEventThread:82] Terminate ZkClient event thread.
[INFO ][20171229 10:11:14,749][ZooKeeper:1326] Session: 0x100b7eecfe00002 closed
[INFO ][20171229 10:11:14,749][ClientCnxn$EventThread:513] EventThread shut down for session: 0x100b7eecfe00002
[INFO ][20171229 10:13:29,452][AbstractTestContextBootstrapper:259] Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]
[INFO ][20171229 10:13:29,483][AbstractTestContextBootstrapper:185] Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@47d90b9e, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@1184ab05, org.springframework.test.context.support.DependencyInjectionTestExecutionListener@3aefe5e5, org.springframework.test.context.support.DirtiesContextTestExecutionListener@149e0f5d, org.springframework.test.context.transaction.TransactionalTestExecutionListener@1b1473ab, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@2f7c2f4f]
[INFO ][20171229 10:13:29,660][XmlBeanDefinitionReader:317] Loading XML bean definitions from class path resource [spring/spring-context.xml]
[INFO ][20171229 10:13:30,097][XmlBeanDefinitionReader:317] Loading XML bean definitions from class path resource [spring/dubbo/dubbo-consumer.xml]
[INFO ][20171229 10:13:30,191][?:?] using logger: com.alibaba.dubbo.common.logger.log4j.Log4jLoggerAdapter
[INFO ][20171229 10:13:30,300][XmlBeanDefinitionReader:317] Loading XML bean definitions from class path resource [spring/dubbo/dubbo-reference-user.xml]
[INFO ][20171229 10:13:30,472][XmlBeanDefinitionReader:317] Loading XML bean definitions from class path resource [spring/spring-amp.xml]
[INFO ][20171229 10:13:30,566][AbstractApplicationContext:577] Refreshing org.springframework.context.support.GenericApplicationContext@6dc17b83: startup date [Fri Dec 29 10:13:30 CST 2017]; root of context hierarchy
[INFO ][20171229 10:13:30,919][PropertiesLoaderSupport:172] Loading properties file from class path resource [public_system.properties]
[DEBUG][20171229 10:13:31,335][ExtensionLoader:943]  [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Protocol$Adpative implements com.alibaba.dubbo.rpc.Protocol {
public void destroy() {throw new UnsupportedOperationException("method public abstract void com.alibaba.dubbo.rpc.Protocol.destroy() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public int getDefaultPort() {throw new UnsupportedOperationException("method public abstract int com.alibaba.dubbo.rpc.Protocol.getDefaultPort() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public com.alibaba.dubbo.rpc.Invoker refer(java.lang.Class arg0, com.alibaba.dubbo.common.URL arg1) throws java.lang.Class {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.refer(arg0, arg1);
}
public com.alibaba.dubbo.rpc.Exporter export(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.Invoker {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.export(arg0);
}
}, dubbo version: 2.5.2, current host: 127.0.0.1
[DEBUG][20171229 10:13:31,510][ExtensionLoader:943]  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Cluster$Adpative implements com.alibaba.dubbo.rpc.cluster.Cluster {
public com.alibaba.dubbo.rpc.Invoker join(com.alibaba.dubbo.rpc.cluster.Directory arg0) throws com.alibaba.dubbo.rpc.cluster.Directory {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("cluster", "failover");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.Cluster) name from url(" + url.toString() + ") use keys([cluster])");
com.alibaba.dubbo.rpc.cluster.Cluster extension = (com.alibaba.dubbo.rpc.cluster.Cluster)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.Cluster.class).getExtension(extName);
return extension.join(arg0);
}
}, dubbo version: 2.5.2, current host: 127.0.0.1
[DEBUG][20171229 10:13:31,541][ExtensionLoader:943]  [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ProxyFactory$Adpative implements com.alibaba.dubbo.rpc.ProxyFactory {
public java.lang.Object getProxy(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.Invoker {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getProxy(arg0);
}
public com.alibaba.dubbo.rpc.Invoker getInvoker(java.lang.Object arg0, java.lang.Class arg1, com.alibaba.dubbo.common.URL arg2) throws java.lang.Object {
if (arg2 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg2;
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getInvoker(arg0, arg1, arg2);
}
}, dubbo version: 2.5.2, current host: 127.0.0.1
[DEBUG][20171229 10:13:31,862][ExtensionLoader:943]  [DUBBO] package com.alibaba.dubbo.registry;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class RegistryFactory$Adpative implements com.alibaba.dubbo.registry.RegistryFactory {
public com.alibaba.dubbo.registry.Registry getRegistry(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.registry.RegistryFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.registry.RegistryFactory extension = (com.alibaba.dubbo.registry.RegistryFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.registry.RegistryFactory.class).getExtension(extName);
return extension.getRegistry(arg0);
}
}, dubbo version: 2.5.2, current host: 127.0.0.1
[DEBUG][20171229 10:13:31,893][ExtensionLoader:943]  [DUBBO] package com.alibaba.dubbo.remoting.zookeeper;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ZookeeperTransporter$Adpative implements com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter {
public com.alibaba.dubbo.remoting.zookeeper.ZookeeperClient connect(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("client", url.getParameter("transporter", "zkclient"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter) name from url(" + url.toString() + ") use keys([client, transporter])");
com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter extension = (com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter.class).getExtension(extName);
return extension.connect(arg0);
}
}, dubbo version: 2.5.2, current host: 127.0.0.1
[INFO ][20171229 10:13:31,925][AbstractRegistry:232]  [DUBBO] Load registry store file C:\Users\junlonlu\.dubbo\dubbo-registry-127.0.0.1.cache, data: {com.junlon.facade.user.service.AdminQueryFacade=empty://192.168.103.21/com.junlon.facade.user.service.AdminQueryFacade?application=gw-web-portal&category=configurators&check=false&dubbo=2.5.2&interface=com.junlon.facade.user.service.AdminQueryFacade&methods=list&pid=61240&side=consumer&timestamp=1514513473737 empty://192.168.103.21/com.junlon.facade.user.service.AdminQueryFacade?application=gw-web-portal&category=routers&check=false&dubbo=2.5.2&interface=com.junlon.facade.user.service.AdminQueryFacade&methods=list&pid=61240&side=consumer&timestamp=1514513473737 empty://192.168.103.21/com.junlon.facade.user.service.AdminQueryFacade?application=gw-web-portal&category=providers&check=false&dubbo=2.5.2&interface=com.junlon.facade.user.service.AdminQueryFacade&methods=list&pid=61240&side=consumer&timestamp=1514513473737, com.alibaba.dubbo.monitor.MonitorService=empty://192.168.19.1/com.alibaba.dubbo.monitor.MonitorService?category=configurators&dubbo=2.5.2&interface=com.alibaba.dubbo.monitor.MonitorService&pid=51500&timestamp=1512805752537 empty://192.168.19.1/com.alibaba.dubbo.monitor.MonitorService?category=routers&dubbo=2.5.2&interface=com.alibaba.dubbo.monitor.MonitorService&pid=51500&timestamp=1512805752537 empty://192.168.19.1/com.alibaba.dubbo.monitor.MonitorService?category=providers&dubbo=2.5.2&interface=com.alibaba.dubbo.monitor.MonitorService&pid=51500&timestamp=1512805752537}, dubbo version: 2.5.2, current host: 127.0.0.1
[INFO ][20171229 10:13:31,940][ZkEventThread:64] Starting ZkClient event thread.
[INFO ][20171229 10:13:31,956][Environment:109] Client environment:zookeeper.version=3.5.3-beta-8ce24f9e675cbefffb8f21a47e06b42864475a60, built on 04/03/2017 16:19 GMT
[INFO ][20171229 10:13:31,956][Environment:109] Client environment:host.name=192.168.103.21
[INFO ][20171229 10:13:31,956][Environment:109] Client environment:java.version=1.8.0_131
[INFO ][20171229 10:13:31,956][Environment:109] Client environment:java.vendor=Oracle Corporation
[INFO ][20171229 10:13:31,972][Environment:109] Client environment:java.home=C:\Program Files\Java\jdk1.8.0_131\jre
[INFO ][20171229 10:13:31,972][Environment:109] Client environment:java.class.path=D:\Idea\IntelliJ IDEA 2017.1.1\lib\idea_rt.jar;D:\Idea\IntelliJ IDEA 2017.1.1\plugins\junit\lib\junit-rt.jar;C:\Program Files\Java\jdk1.8.0_131\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.8.0_131\jre\lib\deploy.jar;C:\Program Files\Java\jdk1.8.0_131\jre\lib\ext\access-bridge-64.jar;C:\Program Files\Java\jdk1.8.0_131\jre\lib\ext\cldrdata.jar;C:\Program Files\Java\jdk1.8.0_131\jre\lib\ext\dnsns.jar;C:\Program Files\Java\jdk1.8.0_131\jre\lib\ext\jaccess.jar;C:\Program Files\Java\jdk1.8.0_131\jre\lib\ext\jfxrt.jar;C:\Program Files\Java\jdk1.8.0_131\jre\lib\ext\localedata.jar;C:\Program Files\Java\jdk1.8.0_131\jre\lib\ext\nashorn.jar;C:\Program Files\Java\jdk1.8.0_131\jre\lib\ext\sunec.jar;C:\Program Files\Java\jdk1.8.0_131\jre\lib\ext\sunjce_provider.jar;C:\Program Files\Java\jdk1.8.0_131\jre\lib\ext\sunmscapi.jar;C:\Program Files\Java\jdk1.8.0_131\jre\lib\ext\sunpkcs11.jar;C:\Program Files\Java\jdk1.8.0_131\jre\lib\ext\zipfs.jar;C:\Program Files\Java\jdk1.8.0_131\jre\lib\javaws.jar;C:\Program Files\Java\jdk1.8.0_131\jre\lib\jce.jar;C:\Program Files\Java\jdk1.8.0_131\jre\lib\jfr.jar;C:\Program Files\Java\jdk1.8.0_131\jre\lib\jfxswt.jar;C:\Program Files\Java\jdk1.8.0_131\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.8.0_131\jre\lib\management-agent.jar;C:\Program Files\Java\jdk1.8.0_131\jre\lib\plugin.jar;C:\Program Files\Java\jdk1.8.0_131\jre\lib\resources.jar;C:\Program Files\Java\jdk1.8.0_131\jre\lib\rt.jar;D:\Idea\IntelliJ IDEA 2017.1.1\lib\junit.jar;D:\Idea\IntelliJ IDEA 2017.1.1\lib\junit-4.12.jar;D:\Idea\IntelliJ IDEA 2017.1.1\lib\hamcrest-core-1.3.jar;E:\Idea\gw_lulu\web\gw-web-portal\target\test-classes;E:\Idea\gw_lulu\web\gw-web-portal\target\classes;E:\Idea\gw_lulu\common\gw-common-base\target\classes;E:\Idea\gw_lulu\facade\gw-facade-user\target\classes;E:\Laboratory\Maven\repository\org\springframework\spring-aop\4.2.3.RELEASE\spring-aop-4.2.3.RELEASE.jar;E:\Laboratory\Maven\repository\org\springframework\spring-aspects\4.2.3.RELEASE\spring-aspects-4.2.3.RELEASE.jar;E:\Laboratory\Maven\repository\org\springframework\spring-beans\4.2.3.RELEASE\spring-beans-4.2.3.RELEASE.jar;E:\Laboratory\Maven\repository\org\springframework\spring-context\4.2.3.RELEASE\spring-context-4.2.3.RELEASE.jar;E:\Laboratory\Maven\repository\org\springframework\spring-context-support\4.2.3.RELEASE\spring-context-support-4.2.3.RELEASE.jar;E:\Laboratory\Maven\repository\org\springframework\spring-core\4.2.3.RELEASE\spring-core-4.2.3.RELEASE.jar;E:\Laboratory\Maven\repository\org\springframework\spring-expression\4.2.3.RELEASE\spring-expression-4.2.3.RELEASE.jar;E:\Laboratory\Maven\repository\org\springframework\spring-instrument\4.2.3.RELEASE\spring-instrument-4.2.3.RELEASE.jar;E:\Laboratory\Maven\repository\org\springframework\spring-instrument-tomcat\4.2.3.RELEASE\spring-instrument-tomcat-4.2.3.RELEASE.jar;E:\Laboratory\Maven\repository\org\springframework\data\spring-data-jpa\1.9.4.RELEASE\spring-data-jpa-1.9.4.RELEASE.jar;E:\Laboratory\Maven\repository\org\springframework\data\spring-data-commons\1.11.4.RELEASE\spring-data-commons-1.11.4.RELEASE.jar;E:\Laboratory\Maven\repository\org\slf4j\jcl-over-slf4j\1.7.13\jcl-over-slf4j-1.7.13.jar;E:\Laboratory\Maven\repository\org\springframework\spring-jms\4.2.3.RELEASE\spring-jms-4.2.3.RELEASE.jar;E:\Laboratory\Maven\repository\org\springframework\spring-messaging\4.2.3.RELEASE\spring-messaging-4.2.3.RELEASE.jar;E:\Laboratory\Maven\repository\org\springframework\spring-orm\4.2.3.RELEASE\spring-orm-4.2.3.RELEASE.jar;E:\Laboratory\Maven\repository\org\springframework\spring-jdbc\4.2.3.RELEASE\spring-jdbc-4.2.3.RELEASE.jar;E:\Laboratory\Maven\repository\org\springframework\spring-oxm\4.2.3.RELEASE\spring-oxm-4.2.3.RELEASE.jar;E:\Laboratory\Maven\repository\org\springframework\spring-tx\4.2.3.RELEASE\spring-tx-4.2.3.RELEASE.jar;E:\Laboratory\Maven\repository\org\springframework\spring-web\4.2.3.RELEASE\spring-web-4.2.3.RELEASE.jar;E:\Laboratory\Maven\repository\org\springframework\spring-webmvc\4.2.3.RELEASE\spring-webmvc-4.2.3.RELEASE.jar;E:\Laboratory\Maven\repository\org\springframework\spring-webmvc-portlet\4.2.3.RELEASE\spring-webmvc-portlet-4.2.3.RELEASE.jar;E:\Laboratory\Maven\repository\org\springframework\spring-test\4.2.3.RELEASE\spring-test-4.2.3.RELEASE.jar;E:\Laboratory\Maven\repository\org\springframework\ws\spring-ws-core\2.3.0.RELEASE\spring-ws-core-2.3.0.RELEASE.jar;E:\Laboratory\Maven\repository\commons-logging\commons-logging\1.1.3\commons-logging-1.1.3.jar;E:\Laboratory\Maven\repository\org\springframework\ws\spring-xml\2.3.0.RELEASE\spring-xml-2.3.0.RELEASE.jar;E:\Laboratory\Maven\repository\org\mybatis\mybatis\3.4.0\mybatis-3.4.0.jar;E:\Laboratory\Maven\repository\org\mybatis\mybatis-spring\1.3.0\mybatis-spring-1.3.0.jar;E:\Laboratory\Maven\repository\org\mybatis\generator\mybatis-generator-core\1.3.5\mybatis-generator-core-1.3.5.jar;E:\Laboratory\Maven\repository\mysql\mysql-connector-java\5.1.9\mysql-connector-java-5.1.9.jar;E:\Laboratory\Maven\repository\com\alibaba\druid\1.0.9\druid-1.0.9.jar;C:\Program Files\Java\jdk1.8.0_131\lib\jconsole.jar;C:\Program Files\Java\jdk1.8.0_131\lib\tools.jar;E:\Laboratory\Maven\repository\org\jboss\netty\netty\3.2.5.Final\netty-3.2.5.Final.jar;E:\Laboratory\Maven\repository\com\alibaba\dubbo\2.5.2\dubbo-2.5.2.jar;E:\Laboratory\Maven\repository\org\springframework\spring\2.5.6.SEC03\spring-2.5.6.SEC03.jar;E:\Laboratory\Maven\repository\org\javassist\javassist\3.15.0-GA\javassist-3.15.0-GA.jar;E:\Laboratory\Maven\repository\org\apache\zookeeper\zookeeper\3.5.3-beta\zookeeper-3.5.3-beta.jar;E:\Laboratory\Maven\repository\log4j\log4j\1.2.17\log4j-1.2.17.jar;E:\Laboratory\Maven\repository\io\netty\netty\3.10.5.Final\netty-3.10.5.Final.jar;E:\Laboratory\Maven\repository\com\101tec\zkclient\0.9\zkclient-0.9.jar;E:\Laboratory\Maven\repository\org\apache\activemq\activemq-all\5.8.0\activemq-all-5.8.0.jar;E:\Laboratory\Maven\repository\org\apache\activemq\activemq-amqp\5.8.0\activemq-amqp-5.8.0.jar;E:\Laboratory\Maven\repository\org\apache\activemq\activemq-broker\5.8.0\activemq-broker-5.8.0.jar;E:\Laboratory\Maven\repository\org\apache\activemq\activemq-openwire-legacy\5.8.0\activemq-openwire-legacy-5.8.0.jar;E:\Laboratory\Maven\repository\org\fusesource\hawtbuf\hawtbuf\1.9\hawtbuf-1.9.jar;E:\Laboratory\Maven\repository\org\apache\activemq\activemq-pool\5.8.0\activemq-pool-5.8.0.jar;E:\Laboratory\Maven\repository\org\apache\activemq\activemq-client\5.8.0\activemq-client-5.8.0.jar;E:\Laboratory\Maven\repository\org\apache\geronimo\specs\geronimo-jms_1.1_spec\1.1.1\geronimo-jms_1.1_spec-1.1.1.jar;E:\Laboratory\Maven\repository\org\apache\geronimo\specs\geronimo-j2ee-management_1.1_spec\1.0.1\geronimo-j2ee-management_1.1_spec-1.0.1.jar;E:\Laboratory\Maven\repository\org\apache\geronimo\specs\geronimo-jta_1.0.1B_spec\1.0.1\geronimo-jta_1.0.1B_spec-1.0.1.jar;E:\Laboratory\Maven\repository\commons-pool\commons-pool\1.6\commons-pool-1.6.jar;E:\Laboratory\Maven\repository\quartz\quartz\1.6.0\quartz-1.6.0.jar;E:\Laboratory\Maven\repository\org\elasticsearch\client\rest\5.0.0\rest-5.0.0.jar;E:\Laboratory\Maven\repository\org\apache\httpcomponents\httpclient\4.5.2\httpclient-4.5.2.jar;E:\Laboratory\Maven\repository\org\apache\httpcomponents\httpcore\4.4.5\httpcore-4.4.5.jar;E:\Laboratory\Maven\repository\org\apache\httpcomponents\httpasyncclient\4.1.2\httpasyncclient-4.1.2.jar;E:\Laboratory\Maven\repository\org\apache\httpcomponents\httpcore-nio\4.4.5\httpcore-nio-4.4.5.jar;E:\Laboratory\Maven\repository\org\aspectj\aspectjweaver\1.5.4\aspectjweaver-1.5.4.jar;E:\Laboratory\Maven\repository\org\aspectj\aspectjrt\1.5.4\aspectjrt-1.5.4.jar;E:\Laboratory\Maven\repository\junit\junit\4.12\junit-4.12.jar;E:\Laboratory\Maven\repository\org\hamcrest\hamcrest-core\1.3\hamcrest-core-1.3.jar;E:\Laboratory\Maven\repository\javax\servlet\javax.servlet-api\3.1.0\javax.servlet-api-3.1.0.jar;E:\Laboratory\Maven\repository\javax\servlet\jsp\jsp-api\2.2\jsp-api-2.2.jar;E:\Laboratory\Maven\repository\javax\servlet\jstl\1.2\jstl-1.2.jar;E:\Laboratory\Maven\repository\net\sf\jxls\jxls-core\1.0.6\jxls-core-1.0.6.jar;E:\Laboratory\Maven\repository\commons-collections\commons-collections\3.2.1\commons-collections-3.2.1.jar;E:\Laboratory\Maven\repository\org\apache\commons\commons-jexl\2.0.1\commons-jexl-2.0.1.jar;E:\Laboratory\Maven\repository\org\apache\logging\log4j\log4j-api\2.8.2\log4j-api-2.8.2.jar;E:\Laboratory\Maven\repository\org\apache\logging\log4j\log4j-core\2.8.2\log4j-core-2.8.2.jar;E:\Laboratory\Maven\repository\org\slf4j\slf4j-api\1.7.5\slf4j-api-1.7.5.jar;E:\Laboratory\Maven\repository\org\slf4j\slf4j-log4j12\1.7.5\slf4j-log4j12-1.7.5.jar;E:\Laboratory\Maven\repository\org\apache\logging\log4j\log4j-slf4j-impl\2.8.2\log4j-slf4j-impl-2.8.2.jar;E:\Laboratory\Maven\repository\com\google\zxing\core\3.0.0\core-3.0.0.jar;E:\Laboratory\Maven\repository\com\google\zxing\javase\3.0.0\javase-3.0.0.jar;E:\Laboratory\Maven\repository\com\alibaba\fastjson\1.2.6\fastjson-1.2.6.jar;E:\Laboratory\Maven\repository\org\codehaus\jackson\jackson-mapper-asl\1.9.13\jackson-mapper-asl-1.9.13.jar;E:\Laboratory\Maven\repository\org\codehaus\jackson\jackson-core-asl\1.9.13\jackson-core-asl-1.9.13.jar;E:\Laboratory\Maven\repository\org\apache\commons\commons-lang3\3.4\commons-lang3-3.4.jar;E:\Laboratory\Maven\repository\commons-fileupload\commons-fileupload\1.3.1\commons-fileupload-1.3.1.jar;E:\Laboratory\Maven\repository\commons-io\commons-io\2.4\commons-io-2.4.jar;E:\Laboratory\Maven\repository\commons-codec\commons-codec\1.10\commons-codec-1.10.jar;E:\Laboratory\Maven\repository\commons-beanutils\commons-beanutils\1.9.2\commons-beanutils-1.9.2.jar;E:\Laboratory\Maven\repository\org\apache\commons\commons-collections4\4.1\commons-collections4-4.1.jar;E:\Laboratory\Maven\repository\aopalliance\aopalliance\1.0\aopalliance-1.0.jar;E:\Laboratory\Maven\repository\commons-cli\commons-cli\1.2\commons-cli-1.2.jar;E:\Laboratory\Maven\repository\ognl\ognl\3.1.14\ognl-3.1.14.jar;E:\Laboratory\Maven\repository\commons-net\commons-net\3.2\commons-net-3.2.jar;E:\Laboratory\Maven\repository\org\apache\poi\poi\3.15\poi-3.15.jar;E:\Laboratory\Maven\repository\org\apache\poi\poi-ooxml\3.15\poi-ooxml-3.15.jar;E:\Laboratory\Maven\repository\org\apache\poi\poi-ooxml-schemas\3.15\poi-ooxml-schemas-3.15.jar;E:\Laboratory\Maven\repository\org\apache\xmlbeans\xmlbeans\2.6.0\xmlbeans-2.6.0.jar;E:\Laboratory\Maven\repository\stax\stax-api\1.0.1\stax-api-1.0.1.jar;E:\Laboratory\Maven\repository\com\github\virtuald\curvesapi\1.04\curvesapi-1.04.jar;E:\Laboratory\Maven\repository\javax\jms\jms\1.1\jms-1.1.jar
[INFO ][20171229 10:13:31,987][Environment:109] Client environment:java.library.path=C:\Program Files\Java\jdk1.8.0_131\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\ProgramData\Oracle\Java\javapath;C:\Program Files (x86)\Intel\iCLS Client\;C:\Program Files\Intel\iCLS Client\;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\Program Files\Java\jdk1.8.0_131\bin;D:\Git\Git\cmd;D:\Mysql\mysql-5.6.36-winx64\bin;D:\TortoiseGit\bin;D:\TortoiseSVN\bin;D:\Nodejs\;C:\Users\junlonlu\AppData\Local\Microsoft\WindowsApps;D:\Visual Studio Code\Microsoft VS Code\bin;C:\Users\junlonlu\AppData\Roaming\npm;E:\Laboratory\Maven\apache-maven-3.5.2\bin;.
[INFO ][20171229 10:13:31,987][Environment:109] Client environment:java.io.tmpdir=C:\Users\junlonlu\AppData\Local\Temp\
[INFO ][20171229 10:13:31,987][Environment:109] Client environment:java.compiler=<NA>
[INFO ][20171229 10:13:31,987][Environment:109] Client environment:os.name=Windows 10
[INFO ][20171229 10:13:31,987][Environment:109] Client environment:os.arch=amd64
[INFO ][20171229 10:13:31,987][Environment:109] Client environment:os.version=10.0
[INFO ][20171229 10:13:31,987][Environment:109] Client environment:user.name=junlonlu
[INFO ][20171229 10:13:31,987][Environment:109] Client environment:user.home=C:\Users\junlonlu
[INFO ][20171229 10:13:31,987][Environment:109] Client environment:user.dir=E:\Idea\gw_lulu\web\gw-web-portal
[INFO ][20171229 10:13:31,987][Environment:109] Client environment:os.memory.free=98MB
[INFO ][20171229 10:13:31,987][Environment:109] Client environment:os.memory.max=1799MB
[INFO ][20171229 10:13:32,003][Environment:109] Client environment:os.memory.total=123MB
[INFO ][20171229 10:13:32,003][ZooKeeper:865] Initiating client connection, connectString=127.0.0.1:2181 sessionTimeout=30000 watcher=org.I0Itec.zkclient.ZkClient@740abb5
[INFO ][20171229 10:13:32,373][ClientCnxnSocket:236] jute.maxbuffer value is 4194304 Bytes
[INFO ][20171229 10:13:32,373][ZkClient:935] Waiting for keeper state SyncConnected
[INFO ][20171229 10:13:32,389][ClientCnxn$SendThread:1113] Opening socket connection to server 127.0.0.1/127.0.0.1:2181. Will not attempt to authenticate using SASL (unknown error)
[INFO ][20171229 10:13:32,389][ClientCnxn$SendThread:948] Socket connection established, initiating session, client: /127.0.0.1:51357, server: 127.0.0.1/127.0.0.1:2181
[INFO ][20171229 10:13:32,530][ClientCnxn$SendThread:1381] Session establishment complete on server 127.0.0.1/127.0.0.1:2181, sessionid = 0x100b7fabcec0000, negotiated timeout = 30000
[INFO ][20171229 10:13:32,530][ZkClient:712] zookeeper state changed (SyncConnected)
[DEBUG][20171229 10:13:32,545][ExtensionLoader:943]  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class RouterFactory$Adpative implements com.alibaba.dubbo.rpc.cluster.RouterFactory {
public com.alibaba.dubbo.rpc.cluster.Router getRouter(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getProtocol();
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.RouterFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.cluster.RouterFactory extension = (com.alibaba.dubbo.rpc.cluster.RouterFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.RouterFactory.class).getExtension(extName);
return extension.getRouter(arg0);
}
}, dubbo version: 2.5.2, current host: 127.0.0.1
[DEBUG][20171229 10:13:32,576][ExtensionLoader:943]  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ConfiguratorFactory$Adpative implements com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory {
public com.alibaba.dubbo.rpc.cluster.Configurator getConfigurator(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getProtocol();
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory extension = (com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory.class).getExtension(extName);
return extension.getConfigurator(arg0);
}
}, dubbo version: 2.5.2, current host: 127.0.0.1
[INFO ][20171229 10:13:32,592][AbstractRegistry:302]  [DUBBO] Register: consumer://192.168.103.21/com.junlon.facade.user.service.AdminQueryFacade?application=gw-web-portal&category=consumers&check=false&dubbo=2.5.2&interface=com.junlon.facade.user.service.AdminQueryFacade&methods=list&pid=47580&side=consumer&timestamp=1514513611813, dubbo version: 2.5.2, current host: 192.168.103.21
[INFO ][20171229 10:13:32,803][AbstractRegistry:325]  [DUBBO] Subscribe: consumer://192.168.103.21/com.junlon.facade.user.service.AdminQueryFacade?application=gw-web-portal&category=providers,configurators,routers&check=false&dubbo=2.5.2&interface=com.junlon.facade.user.service.AdminQueryFacade&methods=list&pid=47580&side=consumer&timestamp=1514513611813, dubbo version: 2.5.2, current host: 192.168.103.21
[INFO ][20171229 10:13:33,012][AbstractRegistry:422]  [DUBBO] Notify urls for subscribe url consumer://192.168.103.21/com.junlon.facade.user.service.AdminQueryFacade?application=gw-web-portal&category=providers,configurators,routers&check=false&dubbo=2.5.2&interface=com.junlon.facade.user.service.AdminQueryFacade&methods=list&pid=47580&side=consumer&timestamp=1514513611813, urls: [empty://192.168.103.21/com.junlon.facade.user.service.AdminQueryFacade?application=gw-web-portal&category=providers&check=false&dubbo=2.5.2&interface=com.junlon.facade.user.service.AdminQueryFacade&methods=list&pid=47580&side=consumer&timestamp=1514513611813, empty://192.168.103.21/com.junlon.facade.user.service.AdminQueryFacade?application=gw-web-portal&category=configurators&check=false&dubbo=2.5.2&interface=com.junlon.facade.user.service.AdminQueryFacade&methods=list&pid=47580&side=consumer&timestamp=1514513611813, empty://192.168.103.21/com.junlon.facade.user.service.AdminQueryFacade?application=gw-web-portal&category=routers&check=false&dubbo=2.5.2&interface=com.junlon.facade.user.service.AdminQueryFacade&methods=list&pid=47580&side=consumer&timestamp=1514513611813], dubbo version: 2.5.2, current host: 192.168.103.21
[INFO ][20171229 10:13:33,012][ReferenceConfig:423]  [DUBBO] Refer dubbo service com.junlon.facade.user.service.AdminQueryFacade from url zookeeper://127.0.0.1:2181/com.alibaba.dubbo.registry.RegistryService?application=gw-web-portal&check=false&dubbo=2.5.2&interface=com.junlon.facade.user.service.AdminQueryFacade&methods=list&pid=47580&side=consumer&timestamp=1514513611813, dubbo version: 2.5.2, current host: 192.168.103.21
[INFO ][20171229 10:13:33,043][AbstractApplicationContext:957] Closing org.springframework.context.support.GenericApplicationContext@6dc17b83: startup date [Fri Dec 29 10:13:30 CST 2017]; root of context hierarchy
[INFO ][20171229 10:13:33,059][AbstractRegistry:343]  [DUBBO] Unsubscribe: consumer://192.168.103.21/com.junlon.facade.user.service.AdminQueryFacade?application=gw-web-portal&category=providers,configurators,routers&check=false&dubbo=2.5.2&interface=com.junlon.facade.user.service.AdminQueryFacade&methods=list&pid=47580&side=consumer&timestamp=1514513611813, dubbo version: 2.5.2, current host: 192.168.103.21
[INFO ][20171229 10:13:33,059][AbstractConfig$1:450]  [DUBBO] Run shutdown hook now., dubbo version: 2.5.2, current host: 192.168.103.21
[INFO ][20171229 10:13:33,059][AbstractRegistryFactory:63]  [DUBBO] Close all registries [zookeeper://127.0.0.1:2181/com.alibaba.dubbo.registry.RegistryService?application=gw-web-portal&dubbo=2.5.2&interface=com.alibaba.dubbo.registry.RegistryService&pid=47580&timestamp=1514513611846], dubbo version: 2.5.2, current host: 192.168.103.21
[INFO ][20171229 10:13:33,059][AbstractRegistry:485]  [DUBBO] Destroy registry:zookeeper://127.0.0.1:2181/com.alibaba.dubbo.registry.RegistryService?application=gw-web-portal&dubbo=2.5.2&interface=com.alibaba.dubbo.registry.RegistryService&pid=47580&timestamp=1514513611846, dubbo version: 2.5.2, current host: 192.168.103.21
[INFO ][20171229 10:13:33,059][AbstractRegistry:312]  [DUBBO] Unregister: consumer://192.168.103.21/com.junlon.facade.user.service.AdminQueryFacade?application=gw-web-portal&category=consumers&check=false&dubbo=2.5.2&interface=com.junlon.facade.user.service.AdminQueryFacade&methods=list&pid=47580&side=consumer&timestamp=1514513611813, dubbo version: 2.5.2, current host: 192.168.103.21
[INFO ][20171229 10:13:33,090][AbstractRegistry:494]  [DUBBO] Destroy unregister url consumer://192.168.103.21/com.junlon.facade.user.service.AdminQueryFacade?application=gw-web-portal&category=consumers&check=false&dubbo=2.5.2&interface=com.junlon.facade.user.service.AdminQueryFacade&methods=list&pid=47580&side=consumer&timestamp=1514513611813, dubbo version: 2.5.2, current host: 192.168.103.21
[INFO ][20171229 10:13:33,090][ZkEventThread:82] Terminate ZkClient event thread.
[INFO ][20171229 10:13:33,106][ZooKeeper:1326] Session: 0x100b7fabcec0000 closed
[INFO ][20171229 10:13:33,106][ClientCnxn$EventThread:513] EventThread shut down for session: 0x100b7fabcec0000
[INFO ][20171229 10:14:02,839][AbstractTestContextBootstrapper:259] Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]
[INFO ][20171229 10:14:02,867][AbstractTestContextBootstrapper:185] Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@5a8806ef, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@6c49835d, org.springframework.test.context.support.DependencyInjectionTestExecutionListener@5e853265, org.springframework.test.context.support.DirtiesContextTestExecutionListener@67205a84, org.springframework.test.context.transaction.TransactionalTestExecutionListener@7d0587f1, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@5d76b067]
[INFO ][20171229 10:15:54,527][AbstractTestContextBootstrapper:259] Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]
[INFO ][20171229 10:15:54,594][AbstractTestContextBootstrapper:185] Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@5a8806ef, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@6c49835d, org.springframework.test.context.support.DependencyInjectionTestExecutionListener@5e853265, org.springframework.test.context.support.DirtiesContextTestExecutionListener@67205a84, org.springframework.test.context.transaction.TransactionalTestExecutionListener@7d0587f1, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@5d76b067]
[INFO ][20171229 10:16:18,520][AbstractTestContextBootstrapper:259] Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]
[INFO ][20171229 10:16:18,593][AbstractTestContextBootstrapper:185] Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@47d90b9e, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@1184ab05, org.springframework.test.context.support.DependencyInjectionTestExecutionListener@3aefe5e5, org.springframework.test.context.support.DirtiesContextTestExecutionListener@149e0f5d, org.springframework.test.context.transaction.TransactionalTestExecutionListener@1b1473ab, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@2f7c2f4f]
[INFO ][20171229 10:16:18,803][XmlBeanDefinitionReader:317] Loading XML bean definitions from class path resource [spring/spring-context.xml]
[INFO ][20171229 10:16:19,336][XmlBeanDefinitionReader:317] Loading XML bean definitions from class path resource [spring/dubbo/dubbo-consumer.xml]
[INFO ][20171229 10:16:19,533][?:?] using logger: com.alibaba.dubbo.common.logger.log4j.Log4jLoggerAdapter
[INFO ][20171229 10:16:19,578][XmlBeanDefinitionReader:317] Loading XML bean definitions from class path resource [spring/dubbo/dubbo-reference-user.xml]
[INFO ][20171229 10:16:19,661][XmlBeanDefinitionReader:317] Loading XML bean definitions from class path resource [spring/spring-amp.xml]
[INFO ][20171229 10:16:19,718][AbstractApplicationContext:577] Refreshing org.springframework.context.support.GenericApplicationContext@6dc17b83: startup date [Fri Dec 29 10:16:19 CST 2017]; root of context hierarchy
[INFO ][20171229 10:16:20,199][PropertiesLoaderSupport:172] Loading properties file from class path resource [public_system.properties]
[DEBUG][20171229 10:16:20,498][ExtensionLoader:943]  [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Protocol$Adpative implements com.alibaba.dubbo.rpc.Protocol {
public void destroy() {throw new UnsupportedOperationException("method public abstract void com.alibaba.dubbo.rpc.Protocol.destroy() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public int getDefaultPort() {throw new UnsupportedOperationException("method public abstract int com.alibaba.dubbo.rpc.Protocol.getDefaultPort() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public com.alibaba.dubbo.rpc.Invoker refer(java.lang.Class arg0, com.alibaba.dubbo.common.URL arg1) throws java.lang.Class {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.refer(arg0, arg1);
}
public com.alibaba.dubbo.rpc.Exporter export(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.Invoker {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.export(arg0);
}
}, dubbo version: 2.5.2, current host: 127.0.0.1
[DEBUG][20171229 10:16:20,771][ExtensionLoader:943]  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Cluster$Adpative implements com.alibaba.dubbo.rpc.cluster.Cluster {
public com.alibaba.dubbo.rpc.Invoker join(com.alibaba.dubbo.rpc.cluster.Directory arg0) throws com.alibaba.dubbo.rpc.cluster.Directory {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("cluster", "failover");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.Cluster) name from url(" + url.toString() + ") use keys([cluster])");
com.alibaba.dubbo.rpc.cluster.Cluster extension = (com.alibaba.dubbo.rpc.cluster.Cluster)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.Cluster.class).getExtension(extName);
return extension.join(arg0);
}
}, dubbo version: 2.5.2, current host: 127.0.0.1
[DEBUG][20171229 10:16:20,833][ExtensionLoader:943]  [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ProxyFactory$Adpative implements com.alibaba.dubbo.rpc.ProxyFactory {
public java.lang.Object getProxy(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.Invoker {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getProxy(arg0);
}
public com.alibaba.dubbo.rpc.Invoker getInvoker(java.lang.Object arg0, java.lang.Class arg1, com.alibaba.dubbo.common.URL arg2) throws java.lang.Object {
if (arg2 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg2;
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getInvoker(arg0, arg1, arg2);
}
}, dubbo version: 2.5.2, current host: 127.0.0.1
[DEBUG][20171229 10:16:21,113][ExtensionLoader:943]  [DUBBO] package com.alibaba.dubbo.registry;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class RegistryFactory$Adpative implements com.alibaba.dubbo.registry.RegistryFactory {
public com.alibaba.dubbo.registry.Registry getRegistry(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.registry.RegistryFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.registry.RegistryFactory extension = (com.alibaba.dubbo.registry.RegistryFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.registry.RegistryFactory.class).getExtension(extName);
return extension.getRegistry(arg0);
}
}, dubbo version: 2.5.2, current host: 127.0.0.1
[DEBUG][20171229 10:16:21,134][ExtensionLoader:943]  [DUBBO] package com.alibaba.dubbo.remoting.zookeeper;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ZookeeperTransporter$Adpative implements com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter {
public com.alibaba.dubbo.remoting.zookeeper.ZookeeperClient connect(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("client", url.getParameter("transporter", "zkclient"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter) name from url(" + url.toString() + ") use keys([client, transporter])");
com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter extension = (com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter.class).getExtension(extName);
return extension.connect(arg0);
}
}, dubbo version: 2.5.2, current host: 127.0.0.1
[INFO ][20171229 10:16:21,162][AbstractRegistry:232]  [DUBBO] Load registry store file C:\Users\junlonlu\.dubbo\dubbo-registry-127.0.0.1.cache, data: {com.junlon.facade.user.service.AdminQueryFacade=empty://192.168.103.21/com.junlon.facade.user.service.AdminQueryFacade?application=gw-web-portal&category=configurators&check=false&dubbo=2.5.2&interface=com.junlon.facade.user.service.AdminQueryFacade&methods=list&pid=47580&side=consumer&timestamp=1514513611813 empty://192.168.103.21/com.junlon.facade.user.service.AdminQueryFacade?application=gw-web-portal&category=routers&check=false&dubbo=2.5.2&interface=com.junlon.facade.user.service.AdminQueryFacade&methods=list&pid=47580&side=consumer&timestamp=1514513611813 empty://192.168.103.21/com.junlon.facade.user.service.AdminQueryFacade?application=gw-web-portal&category=providers&check=false&dubbo=2.5.2&interface=com.junlon.facade.user.service.AdminQueryFacade&methods=list&pid=47580&side=consumer&timestamp=1514513611813, com.alibaba.dubbo.monitor.MonitorService=empty://192.168.19.1/com.alibaba.dubbo.monitor.MonitorService?category=configurators&dubbo=2.5.2&interface=com.alibaba.dubbo.monitor.MonitorService&pid=51500&timestamp=1512805752537 empty://192.168.19.1/com.alibaba.dubbo.monitor.MonitorService?category=routers&dubbo=2.5.2&interface=com.alibaba.dubbo.monitor.MonitorService&pid=51500&timestamp=1512805752537 empty://192.168.19.1/com.alibaba.dubbo.monitor.MonitorService?category=providers&dubbo=2.5.2&interface=com.alibaba.dubbo.monitor.MonitorService&pid=51500&timestamp=1512805752537}, dubbo version: 2.5.2, current host: 127.0.0.1
[INFO ][20171229 10:16:21,184][ZkEventThread:64] Starting ZkClient event thread.
[INFO ][20171229 10:16:21,202][Environment:109] Client environment:zookeeper.version=3.5.3-beta-8ce24f9e675cbefffb8f21a47e06b42864475a60, built on 04/03/2017 16:19 GMT
[INFO ][20171229 10:16:21,203][Environment:109] Client environment:host.name=192.168.103.21
[INFO ][20171229 10:16:21,204][Environment:109] Client environment:java.version=1.8.0_131
[INFO ][20171229 10:16:21,204][Environment:109] Client environment:java.vendor=Oracle Corporation
[INFO ][20171229 10:16:21,204][Environment:109] Client environment:java.home=C:\Program Files\Java\jdk1.8.0_131\jre
[INFO ][20171229 10:16:21,205][Environment:109] Client environment:java.class.path=D:\Idea\IntelliJ IDEA 2017.1.1\lib\idea_rt.jar;D:\Idea\IntelliJ IDEA 2017.1.1\plugins\junit\lib\junit-rt.jar;C:\Program Files\Java\jdk1.8.0_131\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.8.0_131\jre\lib\deploy.jar;C:\Program Files\Java\jdk1.8.0_131\jre\lib\ext\access-bridge-64.jar;C:\Program Files\Java\jdk1.8.0_131\jre\lib\ext\cldrdata.jar;C:\Program Files\Java\jdk1.8.0_131\jre\lib\ext\dnsns.jar;C:\Program Files\Java\jdk1.8.0_131\jre\lib\ext\jaccess.jar;C:\Program Files\Java\jdk1.8.0_131\jre\lib\ext\jfxrt.jar;C:\Program Files\Java\jdk1.8.0_131\jre\lib\ext\localedata.jar;C:\Program Files\Java\jdk1.8.0_131\jre\lib\ext\nashorn.jar;C:\Program Files\Java\jdk1.8.0_131\jre\lib\ext\sunec.jar;C:\Program Files\Java\jdk1.8.0_131\jre\lib\ext\sunjce_provider.jar;C:\Program Files\Java\jdk1.8.0_131\jre\lib\ext\sunmscapi.jar;C:\Program Files\Java\jdk1.8.0_131\jre\lib\ext\sunpkcs11.jar;C:\Program Files\Java\jdk1.8.0_131\jre\lib\ext\zipfs.jar;C:\Program Files\Java\jdk1.8.0_131\jre\lib\javaws.jar;C:\Program Files\Java\jdk1.8.0_131\jre\lib\jce.jar;C:\Program Files\Java\jdk1.8.0_131\jre\lib\jfr.jar;C:\Program Files\Java\jdk1.8.0_131\jre\lib\jfxswt.jar;C:\Program Files\Java\jdk1.8.0_131\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.8.0_131\jre\lib\management-agent.jar;C:\Program Files\Java\jdk1.8.0_131\jre\lib\plugin.jar;C:\Program Files\Java\jdk1.8.0_131\jre\lib\resources.jar;C:\Program Files\Java\jdk1.8.0_131\jre\lib\rt.jar;D:\Idea\IntelliJ IDEA 2017.1.1\lib\junit.jar;D:\Idea\IntelliJ IDEA 2017.1.1\lib\junit-4.12.jar;D:\Idea\IntelliJ IDEA 2017.1.1\lib\hamcrest-core-1.3.jar;E:\Idea\gw_lulu\web\gw-web-portal\target\test-classes;E:\Idea\gw_lulu\web\gw-web-portal\target\classes;E:\Idea\gw_lulu\common\gw-common-base\target\classes;E:\Idea\gw_lulu\facade\gw-facade-user\target\classes;E:\Laboratory\Maven\repository\org\springframework\spring-aop\4.2.3.RELEASE\spring-aop-4.2.3.RELEASE.jar;E:\Laboratory\Maven\repository\org\springframework\spring-aspects\4.2.3.RELEASE\spring-aspects-4.2.3.RELEASE.jar;E:\Laboratory\Maven\repository\org\springframework\spring-beans\4.2.3.RELEASE\spring-beans-4.2.3.RELEASE.jar;E:\Laboratory\Maven\repository\org\springframework\spring-context\4.2.3.RELEASE\spring-context-4.2.3.RELEASE.jar;E:\Laboratory\Maven\repository\org\springframework\spring-context-support\4.2.3.RELEASE\spring-context-support-4.2.3.RELEASE.jar;E:\Laboratory\Maven\repository\org\springframework\spring-core\4.2.3.RELEASE\spring-core-4.2.3.RELEASE.jar;E:\Laboratory\Maven\repository\org\springframework\spring-expression\4.2.3.RELEASE\spring-expression-4.2.3.RELEASE.jar;E:\Laboratory\Maven\repository\org\springframework\spring-instrument\4.2.3.RELEASE\spring-instrument-4.2.3.RELEASE.jar;E:\Laboratory\Maven\repository\org\springframework\spring-instrument-tomcat\4.2.3.RELEASE\spring-instrument-tomcat-4.2.3.RELEASE.jar;E:\Laboratory\Maven\repository\org\springframework\data\spring-data-jpa\1.9.4.RELEASE\spring-data-jpa-1.9.4.RELEASE.jar;E:\Laboratory\Maven\repository\org\springframework\data\spring-data-commons\1.11.4.RELEASE\spring-data-commons-1.11.4.RELEASE.jar;E:\Laboratory\Maven\repository\org\slf4j\jcl-over-slf4j\1.7.13\jcl-over-slf4j-1.7.13.jar;E:\Laboratory\Maven\repository\org\springframework\spring-jms\4.2.3.RELEASE\spring-jms-4.2.3.RELEASE.jar;E:\Laboratory\Maven\repository\org\springframework\spring-messaging\4.2.3.RELEASE\spring-messaging-4.2.3.RELEASE.jar;E:\Laboratory\Maven\repository\org\springframework\spring-orm\4.2.3.RELEASE\spring-orm-4.2.3.RELEASE.jar;E:\Laboratory\Maven\repository\org\springframework\spring-jdbc\4.2.3.RELEASE\spring-jdbc-4.2.3.RELEASE.jar;E:\Laboratory\Maven\repository\org\springframework\spring-oxm\4.2.3.RELEASE\spring-oxm-4.2.3.RELEASE.jar;E:\Laboratory\Maven\repository\org\springframework\spring-tx\4.2.3.RELEASE\spring-tx-4.2.3.RELEASE.jar;E:\Laboratory\Maven\repository\org\springframework\spring-web\4.2.3.RELEASE\spring-web-4.2.3.RELEASE.jar;E:\Laboratory\Maven\repository\org\springframework\spring-webmvc\4.2.3.RELEASE\spring-webmvc-4.2.3.RELEASE.jar;E:\Laboratory\Maven\repository\org\springframework\spring-webmvc-portlet\4.2.3.RELEASE\spring-webmvc-portlet-4.2.3.RELEASE.jar;E:\Laboratory\Maven\repository\org\springframework\spring-test\4.2.3.RELEASE\spring-test-4.2.3.RELEASE.jar;E:\Laboratory\Maven\repository\org\springframework\ws\spring-ws-core\2.3.0.RELEASE\spring-ws-core-2.3.0.RELEASE.jar;E:\Laboratory\Maven\repository\commons-logging\commons-logging\1.1.3\commons-logging-1.1.3.jar;E:\Laboratory\Maven\repository\org\springframework\ws\spring-xml\2.3.0.RELEASE\spring-xml-2.3.0.RELEASE.jar;E:\Laboratory\Maven\repository\org\mybatis\mybatis\3.4.0\mybatis-3.4.0.jar;E:\Laboratory\Maven\repository\org\mybatis\mybatis-spring\1.3.0\mybatis-spring-1.3.0.jar;E:\Laboratory\Maven\repository\org\mybatis\generator\mybatis-generator-core\1.3.5\mybatis-generator-core-1.3.5.jar;E:\Laboratory\Maven\repository\mysql\mysql-connector-java\5.1.9\mysql-connector-java-5.1.9.jar;E:\Laboratory\Maven\repository\com\alibaba\druid\1.0.9\druid-1.0.9.jar;C:\Program Files\Java\jdk1.8.0_131\lib\jconsole.jar;C:\Program Files\Java\jdk1.8.0_131\lib\tools.jar;E:\Laboratory\Maven\repository\org\jboss\netty\netty\3.2.5.Final\netty-3.2.5.Final.jar;E:\Laboratory\Maven\repository\com\alibaba\dubbo\2.5.2\dubbo-2.5.2.jar;E:\Laboratory\Maven\repository\org\springframework\spring\2.5.6.SEC03\spring-2.5.6.SEC03.jar;E:\Laboratory\Maven\repository\org\javassist\javassist\3.15.0-GA\javassist-3.15.0-GA.jar;E:\Laboratory\Maven\repository\org\apache\zookeeper\zookeeper\3.5.3-beta\zookeeper-3.5.3-beta.jar;E:\Laboratory\Maven\repository\log4j\log4j\1.2.17\log4j-1.2.17.jar;E:\Laboratory\Maven\repository\io\netty\netty\3.10.5.Final\netty-3.10.5.Final.jar;E:\Laboratory\Maven\repository\com\101tec\zkclient\0.9\zkclient-0.9.jar;E:\Laboratory\Maven\repository\org\apache\activemq\activemq-all\5.8.0\activemq-all-5.8.0.jar;E:\Laboratory\Maven\repository\org\apache\activemq\activemq-amqp\5.8.0\activemq-amqp-5.8.0.jar;E:\Laboratory\Maven\repository\org\apache\activemq\activemq-broker\5.8.0\activemq-broker-5.8.0.jar;E:\Laboratory\Maven\repository\org\apache\activemq\activemq-openwire-legacy\5.8.0\activemq-openwire-legacy-5.8.0.jar;E:\Laboratory\Maven\repository\org\fusesource\hawtbuf\hawtbuf\1.9\hawtbuf-1.9.jar;E:\Laboratory\Maven\repository\org\apache\activemq\activemq-pool\5.8.0\activemq-pool-5.8.0.jar;E:\Laboratory\Maven\repository\org\apache\activemq\activemq-client\5.8.0\activemq-client-5.8.0.jar;E:\Laboratory\Maven\repository\org\apache\geronimo\specs\geronimo-jms_1.1_spec\1.1.1\geronimo-jms_1.1_spec-1.1.1.jar;E:\Laboratory\Maven\repository\org\apache\geronimo\specs\geronimo-j2ee-management_1.1_spec\1.0.1\geronimo-j2ee-management_1.1_spec-1.0.1.jar;E:\Laboratory\Maven\repository\org\apache\geronimo\specs\geronimo-jta_1.0.1B_spec\1.0.1\geronimo-jta_1.0.1B_spec-1.0.1.jar;E:\Laboratory\Maven\repository\commons-pool\commons-pool\1.6\commons-pool-1.6.jar;E:\Laboratory\Maven\repository\quartz\quartz\1.6.0\quartz-1.6.0.jar;E:\Laboratory\Maven\repository\org\elasticsearch\client\rest\5.0.0\rest-5.0.0.jar;E:\Laboratory\Maven\repository\org\apache\httpcomponents\httpclient\4.5.2\httpclient-4.5.2.jar;E:\Laboratory\Maven\repository\org\apache\httpcomponents\httpcore\4.4.5\httpcore-4.4.5.jar;E:\Laboratory\Maven\repository\org\apache\httpcomponents\httpasyncclient\4.1.2\httpasyncclient-4.1.2.jar;E:\Laboratory\Maven\repository\org\apache\httpcomponents\httpcore-nio\4.4.5\httpcore-nio-4.4.5.jar;E:\Laboratory\Maven\repository\org\aspectj\aspectjweaver\1.5.4\aspectjweaver-1.5.4.jar;E:\Laboratory\Maven\repository\org\aspectj\aspectjrt\1.5.4\aspectjrt-1.5.4.jar;E:\Laboratory\Maven\repository\junit\junit\4.12\junit-4.12.jar;E:\Laboratory\Maven\repository\org\hamcrest\hamcrest-core\1.3\hamcrest-core-1.3.jar;E:\Laboratory\Maven\repository\javax\servlet\javax.servlet-api\3.1.0\javax.servlet-api-3.1.0.jar;E:\Laboratory\Maven\repository\javax\servlet\jsp\jsp-api\2.2\jsp-api-2.2.jar;E:\Laboratory\Maven\repository\javax\servlet\jstl\1.2\jstl-1.2.jar;E:\Laboratory\Maven\repository\net\sf\jxls\jxls-core\1.0.6\jxls-core-1.0.6.jar;E:\Laboratory\Maven\repository\commons-collections\commons-collections\3.2.1\commons-collections-3.2.1.jar;E:\Laboratory\Maven\repository\org\apache\commons\commons-jexl\2.0.1\commons-jexl-2.0.1.jar;E:\Laboratory\Maven\repository\org\apache\logging\log4j\log4j-api\2.8.2\log4j-api-2.8.2.jar;E:\Laboratory\Maven\repository\org\apache\logging\log4j\log4j-core\2.8.2\log4j-core-2.8.2.jar;E:\Laboratory\Maven\repository\org\slf4j\slf4j-api\1.7.5\slf4j-api-1.7.5.jar;E:\Laboratory\Maven\repository\org\slf4j\slf4j-log4j12\1.7.5\slf4j-log4j12-1.7.5.jar;E:\Laboratory\Maven\repository\org\apache\logging\log4j\log4j-slf4j-impl\2.8.2\log4j-slf4j-impl-2.8.2.jar;E:\Laboratory\Maven\repository\com\google\zxing\core\3.0.0\core-3.0.0.jar;E:\Laboratory\Maven\repository\com\google\zxing\javase\3.0.0\javase-3.0.0.jar;E:\Laboratory\Maven\repository\com\alibaba\fastjson\1.2.6\fastjson-1.2.6.jar;E:\Laboratory\Maven\repository\org\codehaus\jackson\jackson-mapper-asl\1.9.13\jackson-mapper-asl-1.9.13.jar;E:\Laboratory\Maven\repository\org\codehaus\jackson\jackson-core-asl\1.9.13\jackson-core-asl-1.9.13.jar;E:\Laboratory\Maven\repository\org\apache\commons\commons-lang3\3.4\commons-lang3-3.4.jar;E:\Laboratory\Maven\repository\commons-fileupload\commons-fileupload\1.3.1\commons-fileupload-1.3.1.jar;E:\Laboratory\Maven\repository\commons-io\commons-io\2.4\commons-io-2.4.jar;E:\Laboratory\Maven\repository\commons-codec\commons-codec\1.10\commons-codec-1.10.jar;E:\Laboratory\Maven\repository\commons-beanutils\commons-beanutils\1.9.2\commons-beanutils-1.9.2.jar;E:\Laboratory\Maven\repository\org\apache\commons\commons-collections4\4.1\commons-collections4-4.1.jar;E:\Laboratory\Maven\repository\aopalliance\aopalliance\1.0\aopalliance-1.0.jar;E:\Laboratory\Maven\repository\commons-cli\commons-cli\1.2\commons-cli-1.2.jar;E:\Laboratory\Maven\repository\ognl\ognl\3.1.14\ognl-3.1.14.jar;E:\Laboratory\Maven\repository\commons-net\commons-net\3.2\commons-net-3.2.jar;E:\Laboratory\Maven\repository\org\apache\poi\poi\3.15\poi-3.15.jar;E:\Laboratory\Maven\repository\org\apache\poi\poi-ooxml\3.15\poi-ooxml-3.15.jar;E:\Laboratory\Maven\repository\org\apache\poi\poi-ooxml-schemas\3.15\poi-ooxml-schemas-3.15.jar;E:\Laboratory\Maven\repository\org\apache\xmlbeans\xmlbeans\2.6.0\xmlbeans-2.6.0.jar;E:\Laboratory\Maven\repository\stax\stax-api\1.0.1\stax-api-1.0.1.jar;E:\Laboratory\Maven\repository\com\github\virtuald\curvesapi\1.04\curvesapi-1.04.jar;E:\Laboratory\Maven\repository\javax\jms\jms\1.1\jms-1.1.jar
[INFO ][20171229 10:16:21,206][Environment:109] Client environment:java.library.path=C:\Program Files\Java\jdk1.8.0_131\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\ProgramData\Oracle\Java\javapath;C:\Program Files (x86)\Intel\iCLS Client\;C:\Program Files\Intel\iCLS Client\;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\Program Files\Java\jdk1.8.0_131\bin;D:\Git\Git\cmd;D:\Mysql\mysql-5.6.36-winx64\bin;D:\TortoiseGit\bin;D:\TortoiseSVN\bin;D:\Nodejs\;C:\Users\junlonlu\AppData\Local\Microsoft\WindowsApps;D:\Visual Studio Code\Microsoft VS Code\bin;C:\Users\junlonlu\AppData\Roaming\npm;E:\Laboratory\Maven\apache-maven-3.5.2\bin;.
[INFO ][20171229 10:16:21,206][Environment:109] Client environment:java.io.tmpdir=C:\Users\junlonlu\AppData\Local\Temp\
[INFO ][20171229 10:16:21,206][Environment:109] Client environment:java.compiler=<NA>
[INFO ][20171229 10:16:21,207][Environment:109] Client environment:os.name=Windows 10
[INFO ][20171229 10:16:21,207][Environment:109] Client environment:os.arch=amd64
[INFO ][20171229 10:16:21,207][Environment:109] Client environment:os.version=10.0
[INFO ][20171229 10:16:21,207][Environment:109] Client environment:user.name=junlonlu
[INFO ][20171229 10:16:21,208][Environment:109] Client environment:user.home=C:\Users\junlonlu
[INFO ][20171229 10:16:21,209][Environment:109] Client environment:user.dir=E:\Idea\gw_lulu\web\gw-web-portal
[INFO ][20171229 10:16:21,209][Environment:109] Client environment:os.memory.free=98MB
[INFO ][20171229 10:16:21,209][Environment:109] Client environment:os.memory.max=1799MB
[INFO ][20171229 10:16:21,209][Environment:109] Client environment:os.memory.total=123MB
[INFO ][20171229 10:16:21,212][ZooKeeper:865] Initiating client connection, connectString=127.0.0.1:2181 sessionTimeout=30000 watcher=org.I0Itec.zkclient.ZkClient@56db847e
[INFO ][20171229 10:16:21,682][ClientCnxnSocket:236] jute.maxbuffer value is 4194304 Bytes
[INFO ][20171229 10:16:21,691][ZkClient:935] Waiting for keeper state SyncConnected
[INFO ][20171229 10:16:21,702][ClientCnxn$SendThread:1113] Opening socket connection to server 127.0.0.1/127.0.0.1:2181. Will not attempt to authenticate using SASL (unknown error)
[INFO ][20171229 10:16:21,706][ClientCnxn$SendThread:948] Socket connection established, initiating session, client: /127.0.0.1:51587, server: 127.0.0.1/127.0.0.1:2181
[INFO ][20171229 10:16:21,778][ClientCnxn$SendThread:1381] Session establishment complete on server 127.0.0.1/127.0.0.1:2181, sessionid = 0x100b7fabcec0001, negotiated timeout = 30000
[INFO ][20171229 10:16:21,783][ZkClient:712] zookeeper state changed (SyncConnected)
[DEBUG][20171229 10:16:21,794][ExtensionLoader:943]  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class RouterFactory$Adpative implements com.alibaba.dubbo.rpc.cluster.RouterFactory {
public com.alibaba.dubbo.rpc.cluster.Router getRouter(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getProtocol();
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.RouterFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.cluster.RouterFactory extension = (com.alibaba.dubbo.rpc.cluster.RouterFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.RouterFactory.class).getExtension(extName);
return extension.getRouter(arg0);
}
}, dubbo version: 2.5.2, current host: 127.0.0.1
[DEBUG][20171229 10:16:21,819][ExtensionLoader:943]  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ConfiguratorFactory$Adpative implements com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory {
public com.alibaba.dubbo.rpc.cluster.Configurator getConfigurator(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getProtocol();
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory extension = (com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory.class).getExtension(extName);
return extension.getConfigurator(arg0);
}
}, dubbo version: 2.5.2, current host: 127.0.0.1
[INFO ][20171229 10:16:21,843][AbstractRegistry:302]  [DUBBO] Register: consumer://192.168.103.21/com.junlon.facade.user.service.AdminQueryFacade?application=gw-web-portal&category=consumers&check=false&dubbo=2.5.2&interface=com.junlon.facade.user.service.AdminQueryFacade&methods=list&pid=14020&side=consumer&timestamp=1514513781056, dubbo version: 2.5.2, current host: 192.168.103.21
[INFO ][20171229 10:16:21,984][AbstractRegistry:325]  [DUBBO] Subscribe: consumer://192.168.103.21/com.junlon.facade.user.service.AdminQueryFacade?application=gw-web-portal&category=providers,configurators,routers&check=false&dubbo=2.5.2&interface=com.junlon.facade.user.service.AdminQueryFacade&methods=list&pid=14020&side=consumer&timestamp=1514513781056, dubbo version: 2.5.2, current host: 192.168.103.21
[INFO ][20171229 10:16:22,195][AbstractRegistry:422]  [DUBBO] Notify urls for subscribe url consumer://192.168.103.21/com.junlon.facade.user.service.AdminQueryFacade?application=gw-web-portal&category=providers,configurators,routers&check=false&dubbo=2.5.2&interface=com.junlon.facade.user.service.AdminQueryFacade&methods=list&pid=14020&side=consumer&timestamp=1514513781056, urls: [empty://192.168.103.21/com.junlon.facade.user.service.AdminQueryFacade?application=gw-web-portal&category=providers&check=false&dubbo=2.5.2&interface=com.junlon.facade.user.service.AdminQueryFacade&methods=list&pid=14020&side=consumer&timestamp=1514513781056, empty://192.168.103.21/com.junlon.facade.user.service.AdminQueryFacade?application=gw-web-portal&category=configurators&check=false&dubbo=2.5.2&interface=com.junlon.facade.user.service.AdminQueryFacade&methods=list&pid=14020&side=consumer&timestamp=1514513781056, empty://192.168.103.21/com.junlon.facade.user.service.AdminQueryFacade?application=gw-web-portal&category=routers&check=false&dubbo=2.5.2&interface=com.junlon.facade.user.service.AdminQueryFacade&methods=list&pid=14020&side=consumer&timestamp=1514513781056], dubbo version: 2.5.2, current host: 192.168.103.21
[INFO ][20171229 10:16:22,203][ReferenceConfig:423]  [DUBBO] Refer dubbo service com.junlon.facade.user.service.AdminQueryFacade from url zookeeper://127.0.0.1:2181/com.alibaba.dubbo.registry.RegistryService?application=gw-web-portal&check=false&dubbo=2.5.2&interface=com.junlon.facade.user.service.AdminQueryFacade&methods=list&pid=14020&side=consumer&timestamp=1514513781056, dubbo version: 2.5.2, current host: 192.168.103.21
[INFO ][20171229 10:16:22,232][AbstractApplicationContext:957] Closing org.springframework.context.support.GenericApplicationContext@6dc17b83: startup date [Fri Dec 29 10:16:19 CST 2017]; root of context hierarchy
[INFO ][20171229 10:16:22,235][AbstractConfig$1:450]  [DUBBO] Run shutdown hook now., dubbo version: 2.5.2, current host: 192.168.103.21
[INFO ][20171229 10:16:22,235][AbstractRegistry:343]  [DUBBO] Unsubscribe: consumer://192.168.103.21/com.junlon.facade.user.service.AdminQueryFacade?application=gw-web-portal&category=providers,configurators,routers&check=false&dubbo=2.5.2&interface=com.junlon.facade.user.service.AdminQueryFacade&methods=list&pid=14020&side=consumer&timestamp=1514513781056, dubbo version: 2.5.2, current host: 192.168.103.21
[INFO ][20171229 10:16:22,239][AbstractRegistryFactory:63]  [DUBBO] Close all registries [zookeeper://127.0.0.1:2181/com.alibaba.dubbo.registry.RegistryService?application=gw-web-portal&dubbo=2.5.2&interface=com.alibaba.dubbo.registry.RegistryService&pid=14020&timestamp=1514513781101], dubbo version: 2.5.2, current host: 192.168.103.21
[INFO ][20171229 10:16:22,239][AbstractRegistry:485]  [DUBBO] Destroy registry:zookeeper://127.0.0.1:2181/com.alibaba.dubbo.registry.RegistryService?application=gw-web-portal&dubbo=2.5.2&interface=com.alibaba.dubbo.registry.RegistryService&pid=14020&timestamp=1514513781101, dubbo version: 2.5.2, current host: 192.168.103.21
[INFO ][20171229 10:16:22,239][AbstractRegistry:312]  [DUBBO] Unregister: consumer://192.168.103.21/com.junlon.facade.user.service.AdminQueryFacade?application=gw-web-portal&category=consumers&check=false&dubbo=2.5.2&interface=com.junlon.facade.user.service.AdminQueryFacade&methods=list&pid=14020&side=consumer&timestamp=1514513781056, dubbo version: 2.5.2, current host: 192.168.103.21
[INFO ][20171229 10:16:22,261][AbstractRegistry:494]  [DUBBO] Destroy unregister url consumer://192.168.103.21/com.junlon.facade.user.service.AdminQueryFacade?application=gw-web-portal&category=consumers&check=false&dubbo=2.5.2&interface=com.junlon.facade.user.service.AdminQueryFacade&methods=list&pid=14020&side=consumer&timestamp=1514513781056, dubbo version: 2.5.2, current host: 192.168.103.21
[INFO ][20171229 10:16:22,262][ZkEventThread:82] Terminate ZkClient event thread.
[INFO ][20171229 10:16:22,318][ZooKeeper:1326] Session: 0x100b7fabcec0001 closed
[INFO ][20171229 10:16:22,318][ClientCnxn$EventThread:513] EventThread shut down for session: 0x100b7fabcec0001
[INFO ][20171229 10:18:01,330][AbstractTestContextBootstrapper:259] Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]
[INFO ][20171229 10:18:01,371][AbstractTestContextBootstrapper:185] Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@47d90b9e, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@1184ab05, org.springframework.test.context.support.DependencyInjectionTestExecutionListener@3aefe5e5, org.springframework.test.context.support.DirtiesContextTestExecutionListener@149e0f5d, org.springframework.test.context.transaction.TransactionalTestExecutionListener@1b1473ab, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@2f7c2f4f]
[INFO ][20171229 10:18:01,584][XmlBeanDefinitionReader:317] Loading XML bean definitions from class path resource [spring/spring-context.xml]
[INFO ][20171229 10:18:01,988][XmlBeanDefinitionReader:317] Loading XML bean definitions from class path resource [spring/dubbo/dubbo-consumer.xml]
[INFO ][20171229 10:18:02,163][?:?] using logger: com.alibaba.dubbo.common.logger.log4j.Log4jLoggerAdapter
[INFO ][20171229 10:18:02,261][XmlBeanDefinitionReader:317] Loading XML bean definitions from class path resource [spring/dubbo/dubbo-reference-user.xml]
[INFO ][20171229 10:18:02,343][XmlBeanDefinitionReader:317] Loading XML bean definitions from class path resource [spring/spring-amp.xml]
[INFO ][20171229 10:18:02,385][AbstractApplicationContext:577] Refreshing org.springframework.context.support.GenericApplicationContext@6dc17b83: startup date [Fri Dec 29 10:18:02 CST 2017]; root of context hierarchy
[INFO ][20171229 10:18:02,821][PropertiesLoaderSupport:172] Loading properties file from class path resource [public_system.properties]
[DEBUG][20171229 10:18:03,195][ExtensionLoader:943]  [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Protocol$Adpative implements com.alibaba.dubbo.rpc.Protocol {
public void destroy() {throw new UnsupportedOperationException("method public abstract void com.alibaba.dubbo.rpc.Protocol.destroy() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public int getDefaultPort() {throw new UnsupportedOperationException("method public abstract int com.alibaba.dubbo.rpc.Protocol.getDefaultPort() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public com.alibaba.dubbo.rpc.Exporter export(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.Invoker {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.export(arg0);
}
public com.alibaba.dubbo.rpc.Invoker refer(java.lang.Class arg0, com.alibaba.dubbo.common.URL arg1) throws java.lang.Class {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.refer(arg0, arg1);
}
}, dubbo version: 2.5.2, current host: 127.0.0.1
[DEBUG][20171229 10:18:03,412][ExtensionLoader:943]  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Cluster$Adpative implements com.alibaba.dubbo.rpc.cluster.Cluster {
public com.alibaba.dubbo.rpc.Invoker join(com.alibaba.dubbo.rpc.cluster.Directory arg0) throws com.alibaba.dubbo.rpc.cluster.Directory {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("cluster", "failover");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.Cluster) name from url(" + url.toString() + ") use keys([cluster])");
com.alibaba.dubbo.rpc.cluster.Cluster extension = (com.alibaba.dubbo.rpc.cluster.Cluster)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.Cluster.class).getExtension(extName);
return extension.join(arg0);
}
}, dubbo version: 2.5.2, current host: 127.0.0.1
[DEBUG][20171229 10:18:03,439][ExtensionLoader:943]  [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ProxyFactory$Adpative implements com.alibaba.dubbo.rpc.ProxyFactory {
public com.alibaba.dubbo.rpc.Invoker getInvoker(java.lang.Object arg0, java.lang.Class arg1, com.alibaba.dubbo.common.URL arg2) throws java.lang.Object {
if (arg2 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg2;
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getInvoker(arg0, arg1, arg2);
}
public java.lang.Object getProxy(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.Invoker {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getProxy(arg0);
}
}, dubbo version: 2.5.2, current host: 127.0.0.1
[DEBUG][20171229 10:18:03,751][ExtensionLoader:943]  [DUBBO] package com.alibaba.dubbo.registry;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class RegistryFactory$Adpative implements com.alibaba.dubbo.registry.RegistryFactory {
public com.alibaba.dubbo.registry.Registry getRegistry(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.registry.RegistryFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.registry.RegistryFactory extension = (com.alibaba.dubbo.registry.RegistryFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.registry.RegistryFactory.class).getExtension(extName);
return extension.getRegistry(arg0);
}
}, dubbo version: 2.5.2, current host: 127.0.0.1
[DEBUG][20171229 10:18:03,783][ExtensionLoader:943]  [DUBBO] package com.alibaba.dubbo.remoting.zookeeper;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ZookeeperTransporter$Adpative implements com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter {
public com.alibaba.dubbo.remoting.zookeeper.ZookeeperClient connect(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("client", url.getParameter("transporter", "zkclient"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter) name from url(" + url.toString() + ") use keys([client, transporter])");
com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter extension = (com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter.class).getExtension(extName);
return extension.connect(arg0);
}
}, dubbo version: 2.5.2, current host: 127.0.0.1
[INFO ][20171229 10:18:03,870][AbstractRegistry:232]  [DUBBO] Load registry store file C:\Users\junlonlu\.dubbo\dubbo-registry-127.0.0.1.cache, data: {com.junlon.facade.user.service.AdminQueryFacade=empty://192.168.103.21/com.junlon.facade.user.service.AdminQueryFacade?application=gw-web-portal&category=configurators&check=false&dubbo=2.5.2&interface=com.junlon.facade.user.service.AdminQueryFacade&methods=list&pid=14020&side=consumer&timestamp=1514513781056 empty://192.168.103.21/com.junlon.facade.user.service.AdminQueryFacade?application=gw-web-portal&category=routers&check=false&dubbo=2.5.2&interface=com.junlon.facade.user.service.AdminQueryFacade&methods=list&pid=14020&side=consumer&timestamp=1514513781056 empty://192.168.103.21/com.junlon.facade.user.service.AdminQueryFacade?application=gw-web-portal&category=providers&check=false&dubbo=2.5.2&interface=com.junlon.facade.user.service.AdminQueryFacade&methods=list&pid=14020&side=consumer&timestamp=1514513781056, com.alibaba.dubbo.monitor.MonitorService=empty://192.168.19.1/com.alibaba.dubbo.monitor.MonitorService?category=configurators&dubbo=2.5.2&interface=com.alibaba.dubbo.monitor.MonitorService&pid=51500&timestamp=1512805752537 empty://192.168.19.1/com.alibaba.dubbo.monitor.MonitorService?category=routers&dubbo=2.5.2&interface=com.alibaba.dubbo.monitor.MonitorService&pid=51500&timestamp=1512805752537 empty://192.168.19.1/com.alibaba.dubbo.monitor.MonitorService?category=providers&dubbo=2.5.2&interface=com.alibaba.dubbo.monitor.MonitorService&pid=51500&timestamp=1512805752537}, dubbo version: 2.5.2, current host: 127.0.0.1
[INFO ][20171229 10:18:03,994][ZkEventThread:64] Starting ZkClient event thread.
[INFO ][20171229 10:18:04,015][Environment:109] Client environment:zookeeper.version=3.5.3-beta-8ce24f9e675cbefffb8f21a47e06b42864475a60, built on 04/03/2017 16:19 GMT
[INFO ][20171229 10:18:04,017][Environment:109] Client environment:host.name=192.168.103.21
[INFO ][20171229 10:18:04,017][Environment:109] Client environment:java.version=1.8.0_131
[INFO ][20171229 10:18:04,018][Environment:109] Client environment:java.vendor=Oracle Corporation
[INFO ][20171229 10:18:04,018][Environment:109] Client environment:java.home=C:\Program Files\Java\jdk1.8.0_131\jre
[INFO ][20171229 10:18:04,018][Environment:109] Client environment:java.class.path=D:\Idea\IntelliJ IDEA 2017.1.1\lib\idea_rt.jar;D:\Idea\IntelliJ IDEA 2017.1.1\plugins\junit\lib\junit-rt.jar;C:\Program Files\Java\jdk1.8.0_131\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.8.0_131\jre\lib\deploy.jar;C:\Program Files\Java\jdk1.8.0_131\jre\lib\ext\access-bridge-64.jar;C:\Program Files\Java\jdk1.8.0_131\jre\lib\ext\cldrdata.jar;C:\Program Files\Java\jdk1.8.0_131\jre\lib\ext\dnsns.jar;C:\Program Files\Java\jdk1.8.0_131\jre\lib\ext\jaccess.jar;C:\Program Files\Java\jdk1.8.0_131\jre\lib\ext\jfxrt.jar;C:\Program Files\Java\jdk1.8.0_131\jre\lib\ext\localedata.jar;C:\Program Files\Java\jdk1.8.0_131\jre\lib\ext\nashorn.jar;C:\Program Files\Java\jdk1.8.0_131\jre\lib\ext\sunec.jar;C:\Program Files\Java\jdk1.8.0_131\jre\lib\ext\sunjce_provider.jar;C:\Program Files\Java\jdk1.8.0_131\jre\lib\ext\sunmscapi.jar;C:\Program Files\Java\jdk1.8.0_131\jre\lib\ext\sunpkcs11.jar;C:\Program Files\Java\jdk1.8.0_131\jre\lib\ext\zipfs.jar;C:\Program Files\Java\jdk1.8.0_131\jre\lib\javaws.jar;C:\Program Files\Java\jdk1.8.0_131\jre\lib\jce.jar;C:\Program Files\Java\jdk1.8.0_131\jre\lib\jfr.jar;C:\Program Files\Java\jdk1.8.0_131\jre\lib\jfxswt.jar;C:\Program Files\Java\jdk1.8.0_131\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.8.0_131\jre\lib\management-agent.jar;C:\Program Files\Java\jdk1.8.0_131\jre\lib\plugin.jar;C:\Program Files\Java\jdk1.8.0_131\jre\lib\resources.jar;C:\Program Files\Java\jdk1.8.0_131\jre\lib\rt.jar;D:\Idea\IntelliJ IDEA 2017.1.1\lib\junit.jar;D:\Idea\IntelliJ IDEA 2017.1.1\lib\junit-4.12.jar;D:\Idea\IntelliJ IDEA 2017.1.1\lib\hamcrest-core-1.3.jar;E:\Idea\gw_lulu\web\gw-web-portal\target\test-classes;E:\Idea\gw_lulu\web\gw-web-portal\target\classes;E:\Idea\gw_lulu\common\gw-common-base\target\classes;E:\Idea\gw_lulu\facade\gw-facade-user\target\classes;E:\Laboratory\Maven\repository\org\springframework\spring-aop\4.2.3.RELEASE\spring-aop-4.2.3.RELEASE.jar;E:\Laboratory\Maven\repository\org\springframework\spring-aspects\4.2.3.RELEASE\spring-aspects-4.2.3.RELEASE.jar;E:\Laboratory\Maven\repository\org\springframework\spring-beans\4.2.3.RELEASE\spring-beans-4.2.3.RELEASE.jar;E:\Laboratory\Maven\repository\org\springframework\spring-context\4.2.3.RELEASE\spring-context-4.2.3.RELEASE.jar;E:\Laboratory\Maven\repository\org\springframework\spring-context-support\4.2.3.RELEASE\spring-context-support-4.2.3.RELEASE.jar;E:\Laboratory\Maven\repository\org\springframework\spring-core\4.2.3.RELEASE\spring-core-4.2.3.RELEASE.jar;E:\Laboratory\Maven\repository\org\springframework\spring-expression\4.2.3.RELEASE\spring-expression-4.2.3.RELEASE.jar;E:\Laboratory\Maven\repository\org\springframework\spring-instrument\4.2.3.RELEASE\spring-instrument-4.2.3.RELEASE.jar;E:\Laboratory\Maven\repository\org\springframework\spring-instrument-tomcat\4.2.3.RELEASE\spring-instrument-tomcat-4.2.3.RELEASE.jar;E:\Laboratory\Maven\repository\org\springframework\data\spring-data-jpa\1.9.4.RELEASE\spring-data-jpa-1.9.4.RELEASE.jar;E:\Laboratory\Maven\repository\org\springframework\data\spring-data-commons\1.11.4.RELEASE\spring-data-commons-1.11.4.RELEASE.jar;E:\Laboratory\Maven\repository\org\slf4j\jcl-over-slf4j\1.7.13\jcl-over-slf4j-1.7.13.jar;E:\Laboratory\Maven\repository\org\springframework\spring-jms\4.2.3.RELEASE\spring-jms-4.2.3.RELEASE.jar;E:\Laboratory\Maven\repository\org\springframework\spring-messaging\4.2.3.RELEASE\spring-messaging-4.2.3.RELEASE.jar;E:\Laboratory\Maven\repository\org\springframework\spring-orm\4.2.3.RELEASE\spring-orm-4.2.3.RELEASE.jar;E:\Laboratory\Maven\repository\org\springframework\spring-jdbc\4.2.3.RELEASE\spring-jdbc-4.2.3.RELEASE.jar;E:\Laboratory\Maven\repository\org\springframework\spring-oxm\4.2.3.RELEASE\spring-oxm-4.2.3.RELEASE.jar;E:\Laboratory\Maven\repository\org\springframework\spring-tx\4.2.3.RELEASE\spring-tx-4.2.3.RELEASE.jar;E:\Laboratory\Maven\repository\org\springframework\spring-web\4.2.3.RELEASE\spring-web-4.2.3.RELEASE.jar;E:\Laboratory\Maven\repository\org\springframework\spring-webmvc\4.2.3.RELEASE\spring-webmvc-4.2.3.RELEASE.jar;E:\Laboratory\Maven\repository\org\springframework\spring-webmvc-portlet\4.2.3.RELEASE\spring-webmvc-portlet-4.2.3.RELEASE.jar;E:\Laboratory\Maven\repository\org\springframework\spring-test\4.2.3.RELEASE\spring-test-4.2.3.RELEASE.jar;E:\Laboratory\Maven\repository\org\springframework\ws\spring-ws-core\2.3.0.RELEASE\spring-ws-core-2.3.0.RELEASE.jar;E:\Laboratory\Maven\repository\commons-logging\commons-logging\1.1.3\commons-logging-1.1.3.jar;E:\Laboratory\Maven\repository\org\springframework\ws\spring-xml\2.3.0.RELEASE\spring-xml-2.3.0.RELEASE.jar;E:\Laboratory\Maven\repository\org\mybatis\mybatis\3.4.0\mybatis-3.4.0.jar;E:\Laboratory\Maven\repository\org\mybatis\mybatis-spring\1.3.0\mybatis-spring-1.3.0.jar;E:\Laboratory\Maven\repository\org\mybatis\generator\mybatis-generator-core\1.3.5\mybatis-generator-core-1.3.5.jar;E:\Laboratory\Maven\repository\mysql\mysql-connector-java\5.1.9\mysql-connector-java-5.1.9.jar;E:\Laboratory\Maven\repository\com\alibaba\druid\1.0.9\druid-1.0.9.jar;C:\Program Files\Java\jdk1.8.0_131\lib\jconsole.jar;C:\Program Files\Java\jdk1.8.0_131\lib\tools.jar;E:\Laboratory\Maven\repository\org\jboss\netty\netty\3.2.5.Final\netty-3.2.5.Final.jar;E:\Laboratory\Maven\repository\com\alibaba\dubbo\2.5.2\dubbo-2.5.2.jar;E:\Laboratory\Maven\repository\org\springframework\spring\2.5.6.SEC03\spring-2.5.6.SEC03.jar;E:\Laboratory\Maven\repository\org\javassist\javassist\3.15.0-GA\javassist-3.15.0-GA.jar;E:\Laboratory\Maven\repository\org\apache\zookeeper\zookeeper\3.5.3-beta\zookeeper-3.5.3-beta.jar;E:\Laboratory\Maven\repository\log4j\log4j\1.2.17\log4j-1.2.17.jar;E:\Laboratory\Maven\repository\io\netty\netty\3.10.5.Final\netty-3.10.5.Final.jar;E:\Laboratory\Maven\repository\com\101tec\zkclient\0.9\zkclient-0.9.jar;E:\Laboratory\Maven\repository\org\apache\activemq\activemq-all\5.8.0\activemq-all-5.8.0.jar;E:\Laboratory\Maven\repository\org\apache\activemq\activemq-amqp\5.8.0\activemq-amqp-5.8.0.jar;E:\Laboratory\Maven\repository\org\apache\activemq\activemq-broker\5.8.0\activemq-broker-5.8.0.jar;E:\Laboratory\Maven\repository\org\apache\activemq\activemq-openwire-legacy\5.8.0\activemq-openwire-legacy-5.8.0.jar;E:\Laboratory\Maven\repository\org\fusesource\hawtbuf\hawtbuf\1.9\hawtbuf-1.9.jar;E:\Laboratory\Maven\repository\org\apache\activemq\activemq-pool\5.8.0\activemq-pool-5.8.0.jar;E:\Laboratory\Maven\repository\org\apache\activemq\activemq-client\5.8.0\activemq-client-5.8.0.jar;E:\Laboratory\Maven\repository\org\apache\geronimo\specs\geronimo-jms_1.1_spec\1.1.1\geronimo-jms_1.1_spec-1.1.1.jar;E:\Laboratory\Maven\repository\org\apache\geronimo\specs\geronimo-j2ee-management_1.1_spec\1.0.1\geronimo-j2ee-management_1.1_spec-1.0.1.jar;E:\Laboratory\Maven\repository\org\apache\geronimo\specs\geronimo-jta_1.0.1B_spec\1.0.1\geronimo-jta_1.0.1B_spec-1.0.1.jar;E:\Laboratory\Maven\repository\commons-pool\commons-pool\1.6\commons-pool-1.6.jar;E:\Laboratory\Maven\repository\quartz\quartz\1.6.0\quartz-1.6.0.jar;E:\Laboratory\Maven\repository\org\elasticsearch\client\rest\5.0.0\rest-5.0.0.jar;E:\Laboratory\Maven\repository\org\apache\httpcomponents\httpclient\4.5.2\httpclient-4.5.2.jar;E:\Laboratory\Maven\repository\org\apache\httpcomponents\httpcore\4.4.5\httpcore-4.4.5.jar;E:\Laboratory\Maven\repository\org\apache\httpcomponents\httpasyncclient\4.1.2\httpasyncclient-4.1.2.jar;E:\Laboratory\Maven\repository\org\apache\httpcomponents\httpcore-nio\4.4.5\httpcore-nio-4.4.5.jar;E:\Laboratory\Maven\repository\org\aspectj\aspectjweaver\1.5.4\aspectjweaver-1.5.4.jar;E:\Laboratory\Maven\repository\org\aspectj\aspectjrt\1.5.4\aspectjrt-1.5.4.jar;E:\Laboratory\Maven\repository\junit\junit\4.12\junit-4.12.jar;E:\Laboratory\Maven\repository\org\hamcrest\hamcrest-core\1.3\hamcrest-core-1.3.jar;E:\Laboratory\Maven\repository\javax\servlet\javax.servlet-api\3.1.0\javax.servlet-api-3.1.0.jar;E:\Laboratory\Maven\repository\javax\servlet\jsp\jsp-api\2.2\jsp-api-2.2.jar;E:\Laboratory\Maven\repository\javax\servlet\jstl\1.2\jstl-1.2.jar;E:\Laboratory\Maven\repository\net\sf\jxls\jxls-core\1.0.6\jxls-core-1.0.6.jar;E:\Laboratory\Maven\repository\commons-collections\commons-collections\3.2.1\commons-collections-3.2.1.jar;E:\Laboratory\Maven\repository\org\apache\commons\commons-jexl\2.0.1\commons-jexl-2.0.1.jar;E:\Laboratory\Maven\repository\org\apache\logging\log4j\log4j-api\2.8.2\log4j-api-2.8.2.jar;E:\Laboratory\Maven\repository\org\apache\logging\log4j\log4j-core\2.8.2\log4j-core-2.8.2.jar;E:\Laboratory\Maven\repository\org\slf4j\slf4j-api\1.7.5\slf4j-api-1.7.5.jar;E:\Laboratory\Maven\repository\org\slf4j\slf4j-log4j12\1.7.5\slf4j-log4j12-1.7.5.jar;E:\Laboratory\Maven\repository\org\apache\logging\log4j\log4j-slf4j-impl\2.8.2\log4j-slf4j-impl-2.8.2.jar;E:\Laboratory\Maven\repository\com\google\zxing\core\3.0.0\core-3.0.0.jar;E:\Laboratory\Maven\repository\com\google\zxing\javase\3.0.0\javase-3.0.0.jar;E:\Laboratory\Maven\repository\com\alibaba\fastjson\1.2.6\fastjson-1.2.6.jar;E:\Laboratory\Maven\repository\org\codehaus\jackson\jackson-mapper-asl\1.9.13\jackson-mapper-asl-1.9.13.jar;E:\Laboratory\Maven\repository\org\codehaus\jackson\jackson-core-asl\1.9.13\jackson-core-asl-1.9.13.jar;E:\Laboratory\Maven\repository\org\apache\commons\commons-lang3\3.4\commons-lang3-3.4.jar;E:\Laboratory\Maven\repository\commons-fileupload\commons-fileupload\1.3.1\commons-fileupload-1.3.1.jar;E:\Laboratory\Maven\repository\commons-io\commons-io\2.4\commons-io-2.4.jar;E:\Laboratory\Maven\repository\commons-codec\commons-codec\1.10\commons-codec-1.10.jar;E:\Laboratory\Maven\repository\commons-beanutils\commons-beanutils\1.9.2\commons-beanutils-1.9.2.jar;E:\Laboratory\Maven\repository\org\apache\commons\commons-collections4\4.1\commons-collections4-4.1.jar;E:\Laboratory\Maven\repository\aopalliance\aopalliance\1.0\aopalliance-1.0.jar;E:\Laboratory\Maven\repository\commons-cli\commons-cli\1.2\commons-cli-1.2.jar;E:\Laboratory\Maven\repository\ognl\ognl\3.1.14\ognl-3.1.14.jar;E:\Laboratory\Maven\repository\commons-net\commons-net\3.2\commons-net-3.2.jar;E:\Laboratory\Maven\repository\org\apache\poi\poi\3.15\poi-3.15.jar;E:\Laboratory\Maven\repository\org\apache\poi\poi-ooxml\3.15\poi-ooxml-3.15.jar;E:\Laboratory\Maven\repository\org\apache\poi\poi-ooxml-schemas\3.15\poi-ooxml-schemas-3.15.jar;E:\Laboratory\Maven\repository\org\apache\xmlbeans\xmlbeans\2.6.0\xmlbeans-2.6.0.jar;E:\Laboratory\Maven\repository\stax\stax-api\1.0.1\stax-api-1.0.1.jar;E:\Laboratory\Maven\repository\com\github\virtuald\curvesapi\1.04\curvesapi-1.04.jar;E:\Laboratory\Maven\repository\javax\jms\jms\1.1\jms-1.1.jar
[INFO ][20171229 10:18:04,021][Environment:109] Client environment:java.library.path=C:\Program Files\Java\jdk1.8.0_131\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\ProgramData\Oracle\Java\javapath;C:\Program Files (x86)\Intel\iCLS Client\;C:\Program Files\Intel\iCLS Client\;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\Program Files\Java\jdk1.8.0_131\bin;D:\Git\Git\cmd;D:\Mysql\mysql-5.6.36-winx64\bin;D:\TortoiseGit\bin;D:\TortoiseSVN\bin;D:\Nodejs\;C:\Users\junlonlu\AppData\Local\Microsoft\WindowsApps;D:\Visual Studio Code\Microsoft VS Code\bin;C:\Users\junlonlu\AppData\Roaming\npm;E:\Laboratory\Maven\apache-maven-3.5.2\bin;.
[INFO ][20171229 10:18:04,022][Environment:109] Client environment:java.io.tmpdir=C:\Users\junlonlu\AppData\Local\Temp\
[INFO ][20171229 10:18:04,024][Environment:109] Client environment:java.compiler=<NA>
[INFO ][20171229 10:18:04,025][Environment:109] Client environment:os.name=Windows 10
[INFO ][20171229 10:18:04,026][Environment:109] Client environment:os.arch=amd64
[INFO ][20171229 10:18:04,027][Environment:109] Client environment:os.version=10.0
[INFO ][20171229 10:18:04,027][Environment:109] Client environment:user.name=junlonlu
[INFO ][20171229 10:18:04,029][Environment:109] Client environment:user.home=C:\Users\junlonlu
[INFO ][20171229 10:18:04,029][Environment:109] Client environment:user.dir=E:\Idea\gw_lulu\web\gw-web-portal
[INFO ][20171229 10:18:04,029][Environment:109] Client environment:os.memory.free=98MB
[INFO ][20171229 10:18:04,030][Environment:109] Client environment:os.memory.max=1799MB
[INFO ][20171229 10:18:04,033][Environment:109] Client environment:os.memory.total=123MB
[INFO ][20171229 10:18:04,042][ZooKeeper:865] Initiating client connection, connectString=127.0.0.1:2181 sessionTimeout=30000 watcher=org.I0Itec.zkclient.ZkClient@56db847e
[INFO ][20171229 10:18:04,383][ClientCnxnSocket:236] jute.maxbuffer value is 4194304 Bytes
[INFO ][20171229 10:18:04,389][ZkClient:935] Waiting for keeper state SyncConnected
[INFO ][20171229 10:18:04,395][ClientCnxn$SendThread:1113] Opening socket connection to server 127.0.0.1/127.0.0.1:2181. Will not attempt to authenticate using SASL (unknown error)
[WARN ][20171229 10:18:05,442][ClientCnxn$SendThread:1235] Session 0x0 for server null, unexpected error, closing socket connection and attempting reconnect
java.net.ConnectException: Connection refused: no further information
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:717)
	at org.apache.zookeeper.ClientCnxnSocketNIO.doTransport(ClientCnxnSocketNIO.java:357)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1214)
[INFO ][20171229 10:18:06,612][ClientCnxn$SendThread:1113] Opening socket connection to server 127.0.0.1/127.0.0.1:2181. Will not attempt to authenticate using SASL (unknown error)
[WARN ][20171229 10:18:07,616][ClientCnxn$SendThread:1235] Session 0x0 for server null, unexpected error, closing socket connection and attempting reconnect
java.net.ConnectException: Connection refused: no further information
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:717)
	at org.apache.zookeeper.ClientCnxnSocketNIO.doTransport(ClientCnxnSocketNIO.java:357)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1214)
[INFO ][20171229 10:18:08,719][ClientCnxn$SendThread:1113] Opening socket connection to server 127.0.0.1/127.0.0.1:2181. Will not attempt to authenticate using SASL (unknown error)
[WARN ][20171229 10:18:09,725][ClientCnxn$SendThread:1235] Session 0x0 for server null, unexpected error, closing socket connection and attempting reconnect
java.net.ConnectException: Connection refused: no further information
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:717)
	at org.apache.zookeeper.ClientCnxnSocketNIO.doTransport(ClientCnxnSocketNIO.java:357)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1214)
[INFO ][20171229 10:18:10,828][ClientCnxn$SendThread:1113] Opening socket connection to server 127.0.0.1/127.0.0.1:2181. Will not attempt to authenticate using SASL (unknown error)
[WARN ][20171229 10:18:11,830][ClientCnxn$SendThread:1235] Session 0x0 for server null, unexpected error, closing socket connection and attempting reconnect
java.net.ConnectException: Connection refused: no further information
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:717)
	at org.apache.zookeeper.ClientCnxnSocketNIO.doTransport(ClientCnxnSocketNIO.java:357)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1214)
[INFO ][20171229 10:18:12,931][ClientCnxn$SendThread:1113] Opening socket connection to server 127.0.0.1/127.0.0.1:2181. Will not attempt to authenticate using SASL (unknown error)
[WARN ][20171229 10:18:13,933][ClientCnxn$SendThread:1235] Session 0x0 for server null, unexpected error, closing socket connection and attempting reconnect
java.net.ConnectException: Connection refused: no further information
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:717)
	at org.apache.zookeeper.ClientCnxnSocketNIO.doTransport(ClientCnxnSocketNIO.java:357)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1214)
[INFO ][20171229 10:18:15,036][ClientCnxn$SendThread:1113] Opening socket connection to server 127.0.0.1/127.0.0.1:2181. Will not attempt to authenticate using SASL (unknown error)
[WARN ][20171229 10:18:16,038][ClientCnxn$SendThread:1235] Session 0x0 for server null, unexpected error, closing socket connection and attempting reconnect
java.net.ConnectException: Connection refused: no further information
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:717)
	at org.apache.zookeeper.ClientCnxnSocketNIO.doTransport(ClientCnxnSocketNIO.java:357)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1214)
[INFO ][20171229 10:18:17,140][ClientCnxn$SendThread:1113] Opening socket connection to server 127.0.0.1/127.0.0.1:2181. Will not attempt to authenticate using SASL (unknown error)
[WARN ][20171229 10:18:18,143][ClientCnxn$SendThread:1235] Session 0x0 for server null, unexpected error, closing socket connection and attempting reconnect
java.net.ConnectException: Connection refused: no further information
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:717)
	at org.apache.zookeeper.ClientCnxnSocketNIO.doTransport(ClientCnxnSocketNIO.java:357)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1214)
[INFO ][20171229 10:18:19,245][ClientCnxn$SendThread:1113] Opening socket connection to server 127.0.0.1/127.0.0.1:2181. Will not attempt to authenticate using SASL (unknown error)
[WARN ][20171229 10:18:20,249][ClientCnxn$SendThread:1235] Session 0x0 for server null, unexpected error, closing socket connection and attempting reconnect
java.net.ConnectException: Connection refused: no further information
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:717)
	at org.apache.zookeeper.ClientCnxnSocketNIO.doTransport(ClientCnxnSocketNIO.java:357)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1214)
[INFO ][20171229 10:18:21,351][ClientCnxn$SendThread:1113] Opening socket connection to server 127.0.0.1/127.0.0.1:2181. Will not attempt to authenticate using SASL (unknown error)
[WARN ][20171229 10:18:22,353][ClientCnxn$SendThread:1235] Session 0x0 for server null, unexpected error, closing socket connection and attempting reconnect
java.net.ConnectException: Connection refused: no further information
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:717)
	at org.apache.zookeeper.ClientCnxnSocketNIO.doTransport(ClientCnxnSocketNIO.java:357)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1214)
[INFO ][20171229 10:18:23,454][ClientCnxn$SendThread:1113] Opening socket connection to server 127.0.0.1/127.0.0.1:2181. Will not attempt to authenticate using SASL (unknown error)
[WARN ][20171229 10:18:24,458][ClientCnxn$SendThread:1235] Session 0x0 for server null, unexpected error, closing socket connection and attempting reconnect
java.net.ConnectException: Connection refused: no further information
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:717)
	at org.apache.zookeeper.ClientCnxnSocketNIO.doTransport(ClientCnxnSocketNIO.java:357)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1214)
[INFO ][20171229 10:18:25,561][ClientCnxn$SendThread:1113] Opening socket connection to server 127.0.0.1/127.0.0.1:2181. Will not attempt to authenticate using SASL (unknown error)
[WARN ][20171229 10:18:26,565][ClientCnxn$SendThread:1235] Session 0x0 for server null, unexpected error, closing socket connection and attempting reconnect
java.net.ConnectException: Connection refused: no further information
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:717)
	at org.apache.zookeeper.ClientCnxnSocketNIO.doTransport(ClientCnxnSocketNIO.java:357)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1214)
[INFO ][20171229 10:18:27,668][ClientCnxn$SendThread:1113] Opening socket connection to server 127.0.0.1/127.0.0.1:2181. Will not attempt to authenticate using SASL (unknown error)
[INFO ][20171229 10:18:28,675][ClientCnxn$SendThread:948] Socket connection established, initiating session, client: /127.0.0.1:51646, server: 127.0.0.1/127.0.0.1:2181
[INFO ][20171229 10:18:28,768][ClientCnxn$SendThread:1381] Session establishment complete on server 127.0.0.1/127.0.0.1:2181, sessionid = 0x100b800397c0000, negotiated timeout = 30000
[INFO ][20171229 10:18:28,780][ZkClient:712] zookeeper state changed (SyncConnected)
[DEBUG][20171229 10:18:28,792][ExtensionLoader:943]  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class RouterFactory$Adpative implements com.alibaba.dubbo.rpc.cluster.RouterFactory {
public com.alibaba.dubbo.rpc.cluster.Router getRouter(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getProtocol();
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.RouterFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.cluster.RouterFactory extension = (com.alibaba.dubbo.rpc.cluster.RouterFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.RouterFactory.class).getExtension(extName);
return extension.getRouter(arg0);
}
}, dubbo version: 2.5.2, current host: 127.0.0.1
[DEBUG][20171229 10:18:28,811][ExtensionLoader:943]  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ConfiguratorFactory$Adpative implements com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory {
public com.alibaba.dubbo.rpc.cluster.Configurator getConfigurator(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getProtocol();
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory extension = (com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory.class).getExtension(extName);
return extension.getConfigurator(arg0);
}
}, dubbo version: 2.5.2, current host: 127.0.0.1
[INFO ][20171229 10:18:28,822][AbstractRegistry:302]  [DUBBO] Register: consumer://192.168.103.21/com.junlon.facade.user.service.AdminQueryFacade?application=gw-web-portal&category=consumers&check=false&dubbo=2.5.2&interface=com.junlon.facade.user.service.AdminQueryFacade&methods=list&pid=10700&side=consumer&timestamp=1514513883693, dubbo version: 2.5.2, current host: 192.168.103.21
[INFO ][20171229 10:18:28,935][AbstractRegistry:325]  [DUBBO] Subscribe: consumer://192.168.103.21/com.junlon.facade.user.service.AdminQueryFacade?application=gw-web-portal&category=providers,configurators,routers&check=false&dubbo=2.5.2&interface=com.junlon.facade.user.service.AdminQueryFacade&methods=list&pid=10700&side=consumer&timestamp=1514513883693, dubbo version: 2.5.2, current host: 192.168.103.21
[INFO ][20171229 10:18:29,227][AbstractRegistry:422]  [DUBBO] Notify urls for subscribe url consumer://192.168.103.21/com.junlon.facade.user.service.AdminQueryFacade?application=gw-web-portal&category=providers,configurators,routers&check=false&dubbo=2.5.2&interface=com.junlon.facade.user.service.AdminQueryFacade&methods=list&pid=10700&side=consumer&timestamp=1514513883693, urls: [empty://192.168.103.21/com.junlon.facade.user.service.AdminQueryFacade?application=gw-web-portal&category=providers&check=false&dubbo=2.5.2&interface=com.junlon.facade.user.service.AdminQueryFacade&methods=list&pid=10700&side=consumer&timestamp=1514513883693, empty://192.168.103.21/com.junlon.facade.user.service.AdminQueryFacade?application=gw-web-portal&category=configurators&check=false&dubbo=2.5.2&interface=com.junlon.facade.user.service.AdminQueryFacade&methods=list&pid=10700&side=consumer&timestamp=1514513883693, empty://192.168.103.21/com.junlon.facade.user.service.AdminQueryFacade?application=gw-web-portal&category=routers&check=false&dubbo=2.5.2&interface=com.junlon.facade.user.service.AdminQueryFacade&methods=list&pid=10700&side=consumer&timestamp=1514513883693], dubbo version: 2.5.2, current host: 192.168.103.21
[INFO ][20171229 10:18:29,234][ReferenceConfig:423]  [DUBBO] Refer dubbo service com.junlon.facade.user.service.AdminQueryFacade from url zookeeper://127.0.0.1:2181/com.alibaba.dubbo.registry.RegistryService?application=gw-web-portal&check=false&dubbo=2.5.2&interface=com.junlon.facade.user.service.AdminQueryFacade&methods=list&pid=10700&side=consumer&timestamp=1514513883693, dubbo version: 2.5.2, current host: 192.168.103.21
[INFO ][20171229 10:18:29,262][AbstractApplicationContext:957] Closing org.springframework.context.support.GenericApplicationContext@6dc17b83: startup date [Fri Dec 29 10:18:02 CST 2017]; root of context hierarchy
[INFO ][20171229 10:18:29,262][AbstractConfig$1:450]  [DUBBO] Run shutdown hook now., dubbo version: 2.5.2, current host: 192.168.103.21
[INFO ][20171229 10:18:29,263][AbstractRegistryFactory:63]  [DUBBO] Close all registries [zookeeper://127.0.0.1:2181/com.alibaba.dubbo.registry.RegistryService?application=gw-web-portal&dubbo=2.5.2&interface=com.alibaba.dubbo.registry.RegistryService&pid=10700&timestamp=1514513883739], dubbo version: 2.5.2, current host: 192.168.103.21
[INFO ][20171229 10:18:29,264][AbstractRegistry:343]  [DUBBO] Unsubscribe: consumer://192.168.103.21/com.junlon.facade.user.service.AdminQueryFacade?application=gw-web-portal&category=providers,configurators,routers&check=false&dubbo=2.5.2&interface=com.junlon.facade.user.service.AdminQueryFacade&methods=list&pid=10700&side=consumer&timestamp=1514513883693, dubbo version: 2.5.2, current host: 192.168.103.21
[INFO ][20171229 10:18:29,264][AbstractRegistry:485]  [DUBBO] Destroy registry:zookeeper://127.0.0.1:2181/com.alibaba.dubbo.registry.RegistryService?application=gw-web-portal&dubbo=2.5.2&interface=com.alibaba.dubbo.registry.RegistryService&pid=10700&timestamp=1514513883739, dubbo version: 2.5.2, current host: 192.168.103.21
[INFO ][20171229 10:18:29,264][AbstractRegistry:312]  [DUBBO] Unregister: consumer://192.168.103.21/com.junlon.facade.user.service.AdminQueryFacade?application=gw-web-portal&category=consumers&check=false&dubbo=2.5.2&interface=com.junlon.facade.user.service.AdminQueryFacade&methods=list&pid=10700&side=consumer&timestamp=1514513883693, dubbo version: 2.5.2, current host: 192.168.103.21
[INFO ][20171229 10:18:29,289][AbstractRegistry:494]  [DUBBO] Destroy unregister url consumer://192.168.103.21/com.junlon.facade.user.service.AdminQueryFacade?application=gw-web-portal&category=consumers&check=false&dubbo=2.5.2&interface=com.junlon.facade.user.service.AdminQueryFacade&methods=list&pid=10700&side=consumer&timestamp=1514513883693, dubbo version: 2.5.2, current host: 192.168.103.21
[INFO ][20171229 10:18:29,289][ZkEventThread:82] Terminate ZkClient event thread.
[INFO ][20171229 10:18:29,310][ZooKeeper:1326] Session: 0x100b800397c0000 closed
[INFO ][20171229 10:18:29,310][ClientCnxn$EventThread:513] EventThread shut down for session: 0x100b800397c0000
[INFO ][20171229 10:24:03,250][AbstractTestContextBootstrapper:259] Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]
[INFO ][20171229 10:24:03,265][AbstractTestContextBootstrapper:185] Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@47d90b9e, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@1184ab05, org.springframework.test.context.support.DependencyInjectionTestExecutionListener@3aefe5e5, org.springframework.test.context.support.DirtiesContextTestExecutionListener@149e0f5d, org.springframework.test.context.transaction.TransactionalTestExecutionListener@1b1473ab, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@2f7c2f4f]
[INFO ][20171229 10:24:03,453][XmlBeanDefinitionReader:317] Loading XML bean definitions from class path resource [spring/spring-context.xml]
[INFO ][20171229 10:24:03,781][XmlBeanDefinitionReader:317] Loading XML bean definitions from class path resource [spring/dubbo/dubbo-consumer.xml]
[INFO ][20171229 10:24:03,984][?:?] using logger: com.alibaba.dubbo.common.logger.log4j.Log4jLoggerAdapter
[INFO ][20171229 10:24:04,062][XmlBeanDefinitionReader:317] Loading XML bean definitions from class path resource [spring/dubbo/dubbo-reference-user.xml]
[INFO ][20171229 10:24:04,250][XmlBeanDefinitionReader:317] Loading XML bean definitions from class path resource [spring/spring-amp.xml]
[INFO ][20171229 10:24:04,328][AbstractApplicationContext:577] Refreshing org.springframework.context.support.GenericApplicationContext@6dc17b83: startup date [Fri Dec 29 10:24:04 CST 2017]; root of context hierarchy
[INFO ][20171229 10:24:04,763][PropertiesLoaderSupport:172] Loading properties file from class path resource [public_system.properties]
[DEBUG][20171229 10:24:05,130][ExtensionLoader:943]  [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Protocol$Adpative implements com.alibaba.dubbo.rpc.Protocol {
public void destroy() {throw new UnsupportedOperationException("method public abstract void com.alibaba.dubbo.rpc.Protocol.destroy() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public int getDefaultPort() {throw new UnsupportedOperationException("method public abstract int com.alibaba.dubbo.rpc.Protocol.getDefaultPort() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public com.alibaba.dubbo.rpc.Invoker refer(java.lang.Class arg0, com.alibaba.dubbo.common.URL arg1) throws java.lang.Class {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.refer(arg0, arg1);
}
public com.alibaba.dubbo.rpc.Exporter export(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.Invoker {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.export(arg0);
}
}, dubbo version: 2.5.2, current host: 127.0.0.1
[DEBUG][20171229 10:24:05,369][ExtensionLoader:943]  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Cluster$Adpative implements com.alibaba.dubbo.rpc.cluster.Cluster {
public com.alibaba.dubbo.rpc.Invoker join(com.alibaba.dubbo.rpc.cluster.Directory arg0) throws com.alibaba.dubbo.rpc.cluster.Directory {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("cluster", "failover");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.Cluster) name from url(" + url.toString() + ") use keys([cluster])");
com.alibaba.dubbo.rpc.cluster.Cluster extension = (com.alibaba.dubbo.rpc.cluster.Cluster)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.Cluster.class).getExtension(extName);
return extension.join(arg0);
}
}, dubbo version: 2.5.2, current host: 127.0.0.1
[DEBUG][20171229 10:24:05,389][ExtensionLoader:943]  [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ProxyFactory$Adpative implements com.alibaba.dubbo.rpc.ProxyFactory {
public com.alibaba.dubbo.rpc.Invoker getInvoker(java.lang.Object arg0, java.lang.Class arg1, com.alibaba.dubbo.common.URL arg2) throws java.lang.Object {
if (arg2 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg2;
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getInvoker(arg0, arg1, arg2);
}
public java.lang.Object getProxy(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.Invoker {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getProxy(arg0);
}
}, dubbo version: 2.5.2, current host: 127.0.0.1
[DEBUG][20171229 10:24:05,690][ExtensionLoader:943]  [DUBBO] package com.alibaba.dubbo.registry;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class RegistryFactory$Adpative implements com.alibaba.dubbo.registry.RegistryFactory {
public com.alibaba.dubbo.registry.Registry getRegistry(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.registry.RegistryFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.registry.RegistryFactory extension = (com.alibaba.dubbo.registry.RegistryFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.registry.RegistryFactory.class).getExtension(extName);
return extension.getRegistry(arg0);
}
}, dubbo version: 2.5.2, current host: 127.0.0.1
[DEBUG][20171229 10:24:05,721][ExtensionLoader:943]  [DUBBO] package com.alibaba.dubbo.remoting.zookeeper;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ZookeeperTransporter$Adpative implements com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter {
public com.alibaba.dubbo.remoting.zookeeper.ZookeeperClient connect(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("client", url.getParameter("transporter", "zkclient"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter) name from url(" + url.toString() + ") use keys([client, transporter])");
com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter extension = (com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter.class).getExtension(extName);
return extension.connect(arg0);
}
}, dubbo version: 2.5.2, current host: 127.0.0.1
[INFO ][20171229 10:24:05,789][AbstractRegistry:232]  [DUBBO] Load registry store file C:\Users\junlonlu\.dubbo\dubbo-registry-127.0.0.1.cache, data: {com.junlon.facade.user.service.AdminQueryFacade=empty://192.168.103.21:20880/com.junlon.facade.user.service.AdminQueryFacade?anyhost=true&application=gw-serivce-user&category=configurators&check=false&default.accepts=1000&default.dispatcher=all&default.threadpool=fixed&default.threads=500&default.timeout=30000&dubbo=2.5.2&interface=com.junlon.facade.user.service.AdminQueryFacade&methods=list&pid=67904&retries=0&side=provider&timestamp=1514514217293, com.alibaba.dubbo.monitor.MonitorService=empty://192.168.19.1/com.alibaba.dubbo.monitor.MonitorService?category=configurators&dubbo=2.5.2&interface=com.alibaba.dubbo.monitor.MonitorService&pid=51500&timestamp=1512805752537 empty://192.168.19.1/com.alibaba.dubbo.monitor.MonitorService?category=routers&dubbo=2.5.2&interface=com.alibaba.dubbo.monitor.MonitorService&pid=51500&timestamp=1512805752537 empty://192.168.19.1/com.alibaba.dubbo.monitor.MonitorService?category=providers&dubbo=2.5.2&interface=com.alibaba.dubbo.monitor.MonitorService&pid=51500&timestamp=1512805752537}, dubbo version: 2.5.2, current host: 127.0.0.1
[INFO ][20171229 10:24:05,828][ZkEventThread:64] Starting ZkClient event thread.
[INFO ][20171229 10:24:05,854][Environment:109] Client environment:zookeeper.version=3.5.3-beta-8ce24f9e675cbefffb8f21a47e06b42864475a60, built on 04/03/2017 16:19 GMT
[INFO ][20171229 10:24:05,854][Environment:109] Client environment:host.name=192.168.103.21
[INFO ][20171229 10:24:05,854][Environment:109] Client environment:java.version=1.8.0_131
[INFO ][20171229 10:24:05,854][Environment:109] Client environment:java.vendor=Oracle Corporation
[INFO ][20171229 10:24:05,854][Environment:109] Client environment:java.home=C:\Program Files\Java\jdk1.8.0_131\jre
[INFO ][20171229 10:24:05,854][Environment:109] Client environment:java.class.path=D:\Idea\IntelliJ IDEA 2017.1.1\lib\idea_rt.jar;D:\Idea\IntelliJ IDEA 2017.1.1\plugins\junit\lib\junit-rt.jar;C:\Program Files\Java\jdk1.8.0_131\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.8.0_131\jre\lib\deploy.jar;C:\Program Files\Java\jdk1.8.0_131\jre\lib\ext\access-bridge-64.jar;C:\Program Files\Java\jdk1.8.0_131\jre\lib\ext\cldrdata.jar;C:\Program Files\Java\jdk1.8.0_131\jre\lib\ext\dnsns.jar;C:\Program Files\Java\jdk1.8.0_131\jre\lib\ext\jaccess.jar;C:\Program Files\Java\jdk1.8.0_131\jre\lib\ext\jfxrt.jar;C:\Program Files\Java\jdk1.8.0_131\jre\lib\ext\localedata.jar;C:\Program Files\Java\jdk1.8.0_131\jre\lib\ext\nashorn.jar;C:\Program Files\Java\jdk1.8.0_131\jre\lib\ext\sunec.jar;C:\Program Files\Java\jdk1.8.0_131\jre\lib\ext\sunjce_provider.jar;C:\Program Files\Java\jdk1.8.0_131\jre\lib\ext\sunmscapi.jar;C:\Program Files\Java\jdk1.8.0_131\jre\lib\ext\sunpkcs11.jar;C:\Program Files\Java\jdk1.8.0_131\jre\lib\ext\zipfs.jar;C:\Program Files\Java\jdk1.8.0_131\jre\lib\javaws.jar;C:\Program Files\Java\jdk1.8.0_131\jre\lib\jce.jar;C:\Program Files\Java\jdk1.8.0_131\jre\lib\jfr.jar;C:\Program Files\Java\jdk1.8.0_131\jre\lib\jfxswt.jar;C:\Program Files\Java\jdk1.8.0_131\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.8.0_131\jre\lib\management-agent.jar;C:\Program Files\Java\jdk1.8.0_131\jre\lib\plugin.jar;C:\Program Files\Java\jdk1.8.0_131\jre\lib\resources.jar;C:\Program Files\Java\jdk1.8.0_131\jre\lib\rt.jar;D:\Idea\IntelliJ IDEA 2017.1.1\lib\junit.jar;D:\Idea\IntelliJ IDEA 2017.1.1\lib\junit-4.12.jar;D:\Idea\IntelliJ IDEA 2017.1.1\lib\hamcrest-core-1.3.jar;E:\Idea\gw_lulu\web\gw-web-portal\target\test-classes;E:\Idea\gw_lulu\web\gw-web-portal\target\classes;E:\Idea\gw_lulu\common\gw-common-base\target\classes;E:\Idea\gw_lulu\facade\gw-facade-user\target\classes;E:\Laboratory\Maven\repository\org\springframework\spring-aop\4.2.3.RELEASE\spring-aop-4.2.3.RELEASE.jar;E:\Laboratory\Maven\repository\org\springframework\spring-aspects\4.2.3.RELEASE\spring-aspects-4.2.3.RELEASE.jar;E:\Laboratory\Maven\repository\org\springframework\spring-beans\4.2.3.RELEASE\spring-beans-4.2.3.RELEASE.jar;E:\Laboratory\Maven\repository\org\springframework\spring-context\4.2.3.RELEASE\spring-context-4.2.3.RELEASE.jar;E:\Laboratory\Maven\repository\org\springframework\spring-context-support\4.2.3.RELEASE\spring-context-support-4.2.3.RELEASE.jar;E:\Laboratory\Maven\repository\org\springframework\spring-core\4.2.3.RELEASE\spring-core-4.2.3.RELEASE.jar;E:\Laboratory\Maven\repository\org\springframework\spring-expression\4.2.3.RELEASE\spring-expression-4.2.3.RELEASE.jar;E:\Laboratory\Maven\repository\org\springframework\spring-instrument\4.2.3.RELEASE\spring-instrument-4.2.3.RELEASE.jar;E:\Laboratory\Maven\repository\org\springframework\spring-instrument-tomcat\4.2.3.RELEASE\spring-instrument-tomcat-4.2.3.RELEASE.jar;E:\Laboratory\Maven\repository\org\springframework\data\spring-data-jpa\1.9.4.RELEASE\spring-data-jpa-1.9.4.RELEASE.jar;E:\Laboratory\Maven\repository\org\springframework\data\spring-data-commons\1.11.4.RELEASE\spring-data-commons-1.11.4.RELEASE.jar;E:\Laboratory\Maven\repository\org\slf4j\jcl-over-slf4j\1.7.13\jcl-over-slf4j-1.7.13.jar;E:\Laboratory\Maven\repository\org\springframework\spring-jms\4.2.3.RELEASE\spring-jms-4.2.3.RELEASE.jar;E:\Laboratory\Maven\repository\org\springframework\spring-messaging\4.2.3.RELEASE\spring-messaging-4.2.3.RELEASE.jar;E:\Laboratory\Maven\repository\org\springframework\spring-orm\4.2.3.RELEASE\spring-orm-4.2.3.RELEASE.jar;E:\Laboratory\Maven\repository\org\springframework\spring-jdbc\4.2.3.RELEASE\spring-jdbc-4.2.3.RELEASE.jar;E:\Laboratory\Maven\repository\org\springframework\spring-oxm\4.2.3.RELEASE\spring-oxm-4.2.3.RELEASE.jar;E:\Laboratory\Maven\repository\org\springframework\spring-tx\4.2.3.RELEASE\spring-tx-4.2.3.RELEASE.jar;E:\Laboratory\Maven\repository\org\springframework\spring-web\4.2.3.RELEASE\spring-web-4.2.3.RELEASE.jar;E:\Laboratory\Maven\repository\org\springframework\spring-webmvc\4.2.3.RELEASE\spring-webmvc-4.2.3.RELEASE.jar;E:\Laboratory\Maven\repository\org\springframework\spring-webmvc-portlet\4.2.3.RELEASE\spring-webmvc-portlet-4.2.3.RELEASE.jar;E:\Laboratory\Maven\repository\org\springframework\spring-test\4.2.3.RELEASE\spring-test-4.2.3.RELEASE.jar;E:\Laboratory\Maven\repository\org\springframework\ws\spring-ws-core\2.3.0.RELEASE\spring-ws-core-2.3.0.RELEASE.jar;E:\Laboratory\Maven\repository\commons-logging\commons-logging\1.1.3\commons-logging-1.1.3.jar;E:\Laboratory\Maven\repository\org\springframework\ws\spring-xml\2.3.0.RELEASE\spring-xml-2.3.0.RELEASE.jar;E:\Laboratory\Maven\repository\org\mybatis\mybatis\3.4.0\mybatis-3.4.0.jar;E:\Laboratory\Maven\repository\org\mybatis\mybatis-spring\1.3.0\mybatis-spring-1.3.0.jar;E:\Laboratory\Maven\repository\org\mybatis\generator\mybatis-generator-core\1.3.5\mybatis-generator-core-1.3.5.jar;E:\Laboratory\Maven\repository\mysql\mysql-connector-java\5.1.9\mysql-connector-java-5.1.9.jar;E:\Laboratory\Maven\repository\com\alibaba\druid\1.0.9\druid-1.0.9.jar;C:\Program Files\Java\jdk1.8.0_131\lib\jconsole.jar;C:\Program Files\Java\jdk1.8.0_131\lib\tools.jar;E:\Laboratory\Maven\repository\org\jboss\netty\netty\3.2.5.Final\netty-3.2.5.Final.jar;E:\Laboratory\Maven\repository\com\alibaba\dubbo\2.5.2\dubbo-2.5.2.jar;E:\Laboratory\Maven\repository\org\springframework\spring\2.5.6.SEC03\spring-2.5.6.SEC03.jar;E:\Laboratory\Maven\repository\org\javassist\javassist\3.15.0-GA\javassist-3.15.0-GA.jar;E:\Laboratory\Maven\repository\org\apache\zookeeper\zookeeper\3.5.3-beta\zookeeper-3.5.3-beta.jar;E:\Laboratory\Maven\repository\log4j\log4j\1.2.17\log4j-1.2.17.jar;E:\Laboratory\Maven\repository\io\netty\netty\3.10.5.Final\netty-3.10.5.Final.jar;E:\Laboratory\Maven\repository\com\101tec\zkclient\0.9\zkclient-0.9.jar;E:\Laboratory\Maven\repository\org\apache\activemq\activemq-all\5.8.0\activemq-all-5.8.0.jar;E:\Laboratory\Maven\repository\org\apache\activemq\activemq-amqp\5.8.0\activemq-amqp-5.8.0.jar;E:\Laboratory\Maven\repository\org\apache\activemq\activemq-broker\5.8.0\activemq-broker-5.8.0.jar;E:\Laboratory\Maven\repository\org\apache\activemq\activemq-openwire-legacy\5.8.0\activemq-openwire-legacy-5.8.0.jar;E:\Laboratory\Maven\repository\org\fusesource\hawtbuf\hawtbuf\1.9\hawtbuf-1.9.jar;E:\Laboratory\Maven\repository\org\apache\activemq\activemq-pool\5.8.0\activemq-pool-5.8.0.jar;E:\Laboratory\Maven\repository\org\apache\activemq\activemq-client\5.8.0\activemq-client-5.8.0.jar;E:\Laboratory\Maven\repository\org\apache\geronimo\specs\geronimo-jms_1.1_spec\1.1.1\geronimo-jms_1.1_spec-1.1.1.jar;E:\Laboratory\Maven\repository\org\apache\geronimo\specs\geronimo-j2ee-management_1.1_spec\1.0.1\geronimo-j2ee-management_1.1_spec-1.0.1.jar;E:\Laboratory\Maven\repository\org\apache\geronimo\specs\geronimo-jta_1.0.1B_spec\1.0.1\geronimo-jta_1.0.1B_spec-1.0.1.jar;E:\Laboratory\Maven\repository\commons-pool\commons-pool\1.6\commons-pool-1.6.jar;E:\Laboratory\Maven\repository\quartz\quartz\1.6.0\quartz-1.6.0.jar;E:\Laboratory\Maven\repository\org\elasticsearch\client\rest\5.0.0\rest-5.0.0.jar;E:\Laboratory\Maven\repository\org\apache\httpcomponents\httpclient\4.5.2\httpclient-4.5.2.jar;E:\Laboratory\Maven\repository\org\apache\httpcomponents\httpcore\4.4.5\httpcore-4.4.5.jar;E:\Laboratory\Maven\repository\org\apache\httpcomponents\httpasyncclient\4.1.2\httpasyncclient-4.1.2.jar;E:\Laboratory\Maven\repository\org\apache\httpcomponents\httpcore-nio\4.4.5\httpcore-nio-4.4.5.jar;E:\Laboratory\Maven\repository\org\aspectj\aspectjweaver\1.5.4\aspectjweaver-1.5.4.jar;E:\Laboratory\Maven\repository\org\aspectj\aspectjrt\1.5.4\aspectjrt-1.5.4.jar;E:\Laboratory\Maven\repository\junit\junit\4.12\junit-4.12.jar;E:\Laboratory\Maven\repository\org\hamcrest\hamcrest-core\1.3\hamcrest-core-1.3.jar;E:\Laboratory\Maven\repository\javax\servlet\javax.servlet-api\3.1.0\javax.servlet-api-3.1.0.jar;E:\Laboratory\Maven\repository\javax\servlet\jsp\jsp-api\2.2\jsp-api-2.2.jar;E:\Laboratory\Maven\repository\javax\servlet\jstl\1.2\jstl-1.2.jar;E:\Laboratory\Maven\repository\net\sf\jxls\jxls-core\1.0.6\jxls-core-1.0.6.jar;E:\Laboratory\Maven\repository\commons-collections\commons-collections\3.2.1\commons-collections-3.2.1.jar;E:\Laboratory\Maven\repository\org\apache\commons\commons-jexl\2.0.1\commons-jexl-2.0.1.jar;E:\Laboratory\Maven\repository\org\apache\logging\log4j\log4j-api\2.8.2\log4j-api-2.8.2.jar;E:\Laboratory\Maven\repository\org\apache\logging\log4j\log4j-core\2.8.2\log4j-core-2.8.2.jar;E:\Laboratory\Maven\repository\org\slf4j\slf4j-api\1.7.5\slf4j-api-1.7.5.jar;E:\Laboratory\Maven\repository\org\slf4j\slf4j-log4j12\1.7.5\slf4j-log4j12-1.7.5.jar;E:\Laboratory\Maven\repository\org\apache\logging\log4j\log4j-slf4j-impl\2.8.2\log4j-slf4j-impl-2.8.2.jar;E:\Laboratory\Maven\repository\com\google\zxing\core\3.0.0\core-3.0.0.jar;E:\Laboratory\Maven\repository\com\google\zxing\javase\3.0.0\javase-3.0.0.jar;E:\Laboratory\Maven\repository\com\alibaba\fastjson\1.2.6\fastjson-1.2.6.jar;E:\Laboratory\Maven\repository\org\codehaus\jackson\jackson-mapper-asl\1.9.13\jackson-mapper-asl-1.9.13.jar;E:\Laboratory\Maven\repository\org\codehaus\jackson\jackson-core-asl\1.9.13\jackson-core-asl-1.9.13.jar;E:\Laboratory\Maven\repository\org\apache\commons\commons-lang3\3.4\commons-lang3-3.4.jar;E:\Laboratory\Maven\repository\commons-fileupload\commons-fileupload\1.3.1\commons-fileupload-1.3.1.jar;E:\Laboratory\Maven\repository\commons-io\commons-io\2.4\commons-io-2.4.jar;E:\Laboratory\Maven\repository\commons-codec\commons-codec\1.10\commons-codec-1.10.jar;E:\Laboratory\Maven\repository\commons-beanutils\commons-beanutils\1.9.2\commons-beanutils-1.9.2.jar;E:\Laboratory\Maven\repository\org\apache\commons\commons-collections4\4.1\commons-collections4-4.1.jar;E:\Laboratory\Maven\repository\aopalliance\aopalliance\1.0\aopalliance-1.0.jar;E:\Laboratory\Maven\repository\commons-cli\commons-cli\1.2\commons-cli-1.2.jar;E:\Laboratory\Maven\repository\ognl\ognl\3.1.14\ognl-3.1.14.jar;E:\Laboratory\Maven\repository\commons-net\commons-net\3.2\commons-net-3.2.jar;E:\Laboratory\Maven\repository\org\apache\poi\poi\3.15\poi-3.15.jar;E:\Laboratory\Maven\repository\org\apache\poi\poi-ooxml\3.15\poi-ooxml-3.15.jar;E:\Laboratory\Maven\repository\org\apache\poi\poi-ooxml-schemas\3.15\poi-ooxml-schemas-3.15.jar;E:\Laboratory\Maven\repository\org\apache\xmlbeans\xmlbeans\2.6.0\xmlbeans-2.6.0.jar;E:\Laboratory\Maven\repository\stax\stax-api\1.0.1\stax-api-1.0.1.jar;E:\Laboratory\Maven\repository\com\github\virtuald\curvesapi\1.04\curvesapi-1.04.jar;E:\Laboratory\Maven\repository\javax\jms\jms\1.1\jms-1.1.jar
[INFO ][20171229 10:24:05,870][Environment:109] Client environment:java.library.path=C:\Program Files\Java\jdk1.8.0_131\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\ProgramData\Oracle\Java\javapath;C:\Program Files (x86)\Intel\iCLS Client\;C:\Program Files\Intel\iCLS Client\;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\Program Files\Java\jdk1.8.0_131\bin;D:\Git\Git\cmd;D:\Mysql\mysql-5.6.36-winx64\bin;D:\TortoiseGit\bin;D:\TortoiseSVN\bin;D:\Nodejs\;C:\Users\junlonlu\AppData\Local\Microsoft\WindowsApps;D:\Visual Studio Code\Microsoft VS Code\bin;C:\Users\junlonlu\AppData\Roaming\npm;E:\Laboratory\Maven\apache-maven-3.5.2\bin;.
[INFO ][20171229 10:24:05,870][Environment:109] Client environment:java.io.tmpdir=C:\Users\junlonlu\AppData\Local\Temp\
[INFO ][20171229 10:24:05,870][Environment:109] Client environment:java.compiler=<NA>
[INFO ][20171229 10:24:05,870][Environment:109] Client environment:os.name=Windows 10
[INFO ][20171229 10:24:05,870][Environment:109] Client environment:os.arch=amd64
[INFO ][20171229 10:24:05,870][Environment:109] Client environment:os.version=10.0
[INFO ][20171229 10:24:05,870][Environment:109] Client environment:user.name=junlonlu
[INFO ][20171229 10:24:05,870][Environment:109] Client environment:user.home=C:\Users\junlonlu
[INFO ][20171229 10:24:05,870][Environment:109] Client environment:user.dir=E:\Idea\gw_lulu\web\gw-web-portal
[INFO ][20171229 10:24:05,870][Environment:109] Client environment:os.memory.free=97MB
[INFO ][20171229 10:24:05,870][Environment:109] Client environment:os.memory.max=1799MB
[INFO ][20171229 10:24:05,870][Environment:109] Client environment:os.memory.total=123MB
[INFO ][20171229 10:24:05,870][ZooKeeper:865] Initiating client connection, connectString=127.0.0.1:2181 sessionTimeout=30000 watcher=org.I0Itec.zkclient.ZkClient@560cbf1a
[INFO ][20171229 10:24:06,192][ClientCnxnSocket:236] jute.maxbuffer value is 4194304 Bytes
[INFO ][20171229 10:24:06,192][ZkClient:935] Waiting for keeper state SyncConnected
[INFO ][20171229 10:24:06,208][ClientCnxn$SendThread:1113] Opening socket connection to server 127.0.0.1/127.0.0.1:2181. Will not attempt to authenticate using SASL (unknown error)
[INFO ][20171229 10:24:06,208][ClientCnxn$SendThread:948] Socket connection established, initiating session, client: /127.0.0.1:51913, server: 127.0.0.1/127.0.0.1:2181
[INFO ][20171229 10:24:06,333][ClientCnxn$SendThread:1381] Session establishment complete on server 127.0.0.1/127.0.0.1:2181, sessionid = 0x100b800397c0002, negotiated timeout = 30000
[INFO ][20171229 10:24:06,348][ZkClient:712] zookeeper state changed (SyncConnected)
[DEBUG][20171229 10:24:06,364][ExtensionLoader:943]  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class RouterFactory$Adpative implements com.alibaba.dubbo.rpc.cluster.RouterFactory {
public com.alibaba.dubbo.rpc.cluster.Router getRouter(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getProtocol();
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.RouterFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.cluster.RouterFactory extension = (com.alibaba.dubbo.rpc.cluster.RouterFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.RouterFactory.class).getExtension(extName);
return extension.getRouter(arg0);
}
}, dubbo version: 2.5.2, current host: 127.0.0.1
[DEBUG][20171229 10:24:06,364][ExtensionLoader:943]  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ConfiguratorFactory$Adpative implements com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory {
public com.alibaba.dubbo.rpc.cluster.Configurator getConfigurator(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getProtocol();
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory extension = (com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory.class).getExtension(extName);
return extension.getConfigurator(arg0);
}
}, dubbo version: 2.5.2, current host: 127.0.0.1
[INFO ][20171229 10:24:06,380][AbstractRegistry:302]  [DUBBO] Register: consumer://192.168.103.21/com.junlon.facade.user.service.AdminQueryFacade?application=gw-web-portal&category=consumers&check=false&dubbo=2.5.2&interface=com.junlon.facade.user.service.AdminQueryFacade&methods=list&pid=47640&side=consumer&timestamp=1514514245627, dubbo version: 2.5.2, current host: 192.168.103.21
[INFO ][20171229 10:24:06,489][AbstractRegistry:325]  [DUBBO] Subscribe: consumer://192.168.103.21/com.junlon.facade.user.service.AdminQueryFacade?application=gw-web-portal&category=providers,configurators,routers&check=false&dubbo=2.5.2&interface=com.junlon.facade.user.service.AdminQueryFacade&methods=list&pid=47640&side=consumer&timestamp=1514514245627, dubbo version: 2.5.2, current host: 192.168.103.21
[INFO ][20171229 10:24:06,723][AbstractRegistry:422]  [DUBBO] Notify urls for subscribe url consumer://192.168.103.21/com.junlon.facade.user.service.AdminQueryFacade?application=gw-web-portal&category=providers,configurators,routers&check=false&dubbo=2.5.2&interface=com.junlon.facade.user.service.AdminQueryFacade&methods=list&pid=47640&side=consumer&timestamp=1514514245627, urls: [empty://192.168.103.21/com.junlon.facade.user.service.AdminQueryFacade?application=gw-web-portal&category=providers&check=false&dubbo=2.5.2&interface=com.junlon.facade.user.service.AdminQueryFacade&methods=list&pid=47640&side=consumer&timestamp=1514514245627, empty://192.168.103.21/com.junlon.facade.user.service.AdminQueryFacade?application=gw-web-portal&category=configurators&check=false&dubbo=2.5.2&interface=com.junlon.facade.user.service.AdminQueryFacade&methods=list&pid=47640&side=consumer&timestamp=1514514245627, empty://192.168.103.21/com.junlon.facade.user.service.AdminQueryFacade?application=gw-web-portal&category=routers&check=false&dubbo=2.5.2&interface=com.junlon.facade.user.service.AdminQueryFacade&methods=list&pid=47640&side=consumer&timestamp=1514514245627], dubbo version: 2.5.2, current host: 192.168.103.21
[INFO ][20171229 10:24:06,739][ReferenceConfig:423]  [DUBBO] Refer dubbo service com.junlon.facade.user.service.AdminQueryFacade from url zookeeper://127.0.0.1:2181/com.alibaba.dubbo.registry.RegistryService?application=gw-web-portal&check=false&dubbo=2.5.2&interface=com.junlon.facade.user.service.AdminQueryFacade&methods=list&pid=47640&side=consumer&timestamp=1514514245627, dubbo version: 2.5.2, current host: 192.168.103.21
[INFO ][20171229 10:24:06,785][AbstractApplicationContext:957] Closing org.springframework.context.support.GenericApplicationContext@6dc17b83: startup date [Fri Dec 29 10:24:04 CST 2017]; root of context hierarchy
[INFO ][20171229 10:24:06,794][AbstractConfig$1:450]  [DUBBO] Run shutdown hook now., dubbo version: 2.5.2, current host: 192.168.103.21
[INFO ][20171229 10:24:06,802][AbstractRegistry:343]  [DUBBO] Unsubscribe: consumer://192.168.103.21/com.junlon.facade.user.service.AdminQueryFacade?application=gw-web-portal&category=providers,configurators,routers&check=false&dubbo=2.5.2&interface=com.junlon.facade.user.service.AdminQueryFacade&methods=list&pid=47640&side=consumer&timestamp=1514514245627, dubbo version: 2.5.2, current host: 192.168.103.21
[INFO ][20171229 10:24:06,802][AbstractRegistryFactory:63]  [DUBBO] Close all registries [zookeeper://127.0.0.1:2181/com.alibaba.dubbo.registry.RegistryService?application=gw-web-portal&dubbo=2.5.2&interface=com.alibaba.dubbo.registry.RegistryService&pid=47640&timestamp=1514514245674], dubbo version: 2.5.2, current host: 192.168.103.21
[INFO ][20171229 10:24:06,803][AbstractRegistry:485]  [DUBBO] Destroy registry:zookeeper://127.0.0.1:2181/com.alibaba.dubbo.registry.RegistryService?application=gw-web-portal&dubbo=2.5.2&interface=com.alibaba.dubbo.registry.RegistryService&pid=47640&timestamp=1514514245674, dubbo version: 2.5.2, current host: 192.168.103.21
[INFO ][20171229 10:24:06,803][AbstractRegistry:312]  [DUBBO] Unregister: consumer://192.168.103.21/com.junlon.facade.user.service.AdminQueryFacade?application=gw-web-portal&category=consumers&check=false&dubbo=2.5.2&interface=com.junlon.facade.user.service.AdminQueryFacade&methods=list&pid=47640&side=consumer&timestamp=1514514245627, dubbo version: 2.5.2, current host: 192.168.103.21
[INFO ][20171229 10:24:06,830][AbstractRegistry:494]  [DUBBO] Destroy unregister url consumer://192.168.103.21/com.junlon.facade.user.service.AdminQueryFacade?application=gw-web-portal&category=consumers&check=false&dubbo=2.5.2&interface=com.junlon.facade.user.service.AdminQueryFacade&methods=list&pid=47640&side=consumer&timestamp=1514514245627, dubbo version: 2.5.2, current host: 192.168.103.21
[INFO ][20171229 10:24:06,830][ZkEventThread:82] Terminate ZkClient event thread.
[INFO ][20171229 10:24:06,861][ZooKeeper:1326] Session: 0x100b800397c0002 closed
[INFO ][20171229 10:24:06,861][ClientCnxn$EventThread:513] EventThread shut down for session: 0x100b800397c0002
[INFO ][20171229 10:29:20,711][AbstractTestContextBootstrapper:259] Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]
[INFO ][20171229 10:29:20,742][AbstractTestContextBootstrapper:185] Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@47d90b9e, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@1184ab05, org.springframework.test.context.support.DependencyInjectionTestExecutionListener@3aefe5e5, org.springframework.test.context.support.DirtiesContextTestExecutionListener@149e0f5d, org.springframework.test.context.transaction.TransactionalTestExecutionListener@1b1473ab, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@2f7c2f4f]
[INFO ][20171229 10:29:20,919][XmlBeanDefinitionReader:317] Loading XML bean definitions from class path resource [spring/spring-context.xml]
[INFO ][20171229 10:29:21,244][XmlBeanDefinitionReader:317] Loading XML bean definitions from class path resource [spring/dubbo/dubbo-consumer.xml]
[INFO ][20171229 10:29:21,291][?:?] using logger: com.alibaba.dubbo.common.logger.log4j.Log4jLoggerAdapter
[INFO ][20171229 10:29:21,338][XmlBeanDefinitionReader:317] Loading XML bean definitions from class path resource [spring/dubbo/dubbo-reference-user.xml]
[INFO ][20171229 10:29:21,416][XmlBeanDefinitionReader:317] Loading XML bean definitions from class path resource [spring/spring-amp.xml]
[INFO ][20171229 10:29:21,603][AbstractApplicationContext:577] Refreshing org.springframework.context.support.GenericApplicationContext@6dc17b83: startup date [Fri Dec 29 10:29:21 CST 2017]; root of context hierarchy
[INFO ][20171229 10:29:22,057][PropertiesLoaderSupport:172] Loading properties file from class path resource [public_system.properties]
[DEBUG][20171229 10:29:22,289][ExtensionLoader:943]  [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Protocol$Adpative implements com.alibaba.dubbo.rpc.Protocol {
public void destroy() {throw new UnsupportedOperationException("method public abstract void com.alibaba.dubbo.rpc.Protocol.destroy() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public int getDefaultPort() {throw new UnsupportedOperationException("method public abstract int com.alibaba.dubbo.rpc.Protocol.getDefaultPort() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public com.alibaba.dubbo.rpc.Invoker refer(java.lang.Class arg0, com.alibaba.dubbo.common.URL arg1) throws java.lang.Class {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.refer(arg0, arg1);
}
public com.alibaba.dubbo.rpc.Exporter export(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.Invoker {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.export(arg0);
}
}, dubbo version: 2.5.2, current host: 127.0.0.1
[DEBUG][20171229 10:29:22,617][ExtensionLoader:943]  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Cluster$Adpative implements com.alibaba.dubbo.rpc.cluster.Cluster {
public com.alibaba.dubbo.rpc.Invoker join(com.alibaba.dubbo.rpc.cluster.Directory arg0) throws com.alibaba.dubbo.rpc.cluster.Directory {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("cluster", "failover");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.Cluster) name from url(" + url.toString() + ") use keys([cluster])");
com.alibaba.dubbo.rpc.cluster.Cluster extension = (com.alibaba.dubbo.rpc.cluster.Cluster)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.Cluster.class).getExtension(extName);
return extension.join(arg0);
}
}, dubbo version: 2.5.2, current host: 127.0.0.1
[DEBUG][20171229 10:29:22,649][ExtensionLoader:943]  [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ProxyFactory$Adpative implements com.alibaba.dubbo.rpc.ProxyFactory {
public java.lang.Object getProxy(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.Invoker {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getProxy(arg0);
}
public com.alibaba.dubbo.rpc.Invoker getInvoker(java.lang.Object arg0, java.lang.Class arg1, com.alibaba.dubbo.common.URL arg2) throws java.lang.Object {
if (arg2 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg2;
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getInvoker(arg0, arg1, arg2);
}
}, dubbo version: 2.5.2, current host: 127.0.0.1
[DEBUG][20171229 10:29:22,914][ExtensionLoader:943]  [DUBBO] package com.alibaba.dubbo.registry;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class RegistryFactory$Adpative implements com.alibaba.dubbo.registry.RegistryFactory {
public com.alibaba.dubbo.registry.Registry getRegistry(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.registry.RegistryFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.registry.RegistryFactory extension = (com.alibaba.dubbo.registry.RegistryFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.registry.RegistryFactory.class).getExtension(extName);
return extension.getRegistry(arg0);
}
}, dubbo version: 2.5.2, current host: 127.0.0.1
[DEBUG][20171229 10:29:22,930][ExtensionLoader:943]  [DUBBO] package com.alibaba.dubbo.remoting.zookeeper;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ZookeeperTransporter$Adpative implements com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter {
public com.alibaba.dubbo.remoting.zookeeper.ZookeeperClient connect(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("client", url.getParameter("transporter", "zkclient"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter) name from url(" + url.toString() + ") use keys([client, transporter])");
com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter extension = (com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter.class).getExtension(extName);
return extension.connect(arg0);
}
}, dubbo version: 2.5.2, current host: 127.0.0.1
[INFO ][20171229 10:29:22,961][AbstractRegistry:232]  [DUBBO] Load registry store file C:\Users\junlonlu\.dubbo\dubbo-registry-127.0.0.1.cache, data: {com.junlon.facade.user.service.AdminQueryFacade=empty://192.168.103.21/com.junlon.facade.user.service.AdminQueryFacade?application=gw-web-portal&category=configurators&check=false&dubbo=2.5.2&interface=com.junlon.facade.user.service.AdminQueryFacade&methods=list&pid=47640&side=consumer&timestamp=1514514245627 empty://192.168.103.21/com.junlon.facade.user.service.AdminQueryFacade?application=gw-web-portal&category=routers&check=false&dubbo=2.5.2&interface=com.junlon.facade.user.service.AdminQueryFacade&methods=list&pid=47640&side=consumer&timestamp=1514514245627 empty://192.168.103.21/com.junlon.facade.user.service.AdminQueryFacade?application=gw-web-portal&category=providers&check=false&dubbo=2.5.2&interface=com.junlon.facade.user.service.AdminQueryFacade&methods=list&pid=47640&side=consumer&timestamp=1514514245627, com.alibaba.dubbo.monitor.MonitorService=empty://192.168.19.1/com.alibaba.dubbo.monitor.MonitorService?category=configurators&dubbo=2.5.2&interface=com.alibaba.dubbo.monitor.MonitorService&pid=51500&timestamp=1512805752537 empty://192.168.19.1/com.alibaba.dubbo.monitor.MonitorService?category=routers&dubbo=2.5.2&interface=com.alibaba.dubbo.monitor.MonitorService&pid=51500&timestamp=1512805752537 empty://192.168.19.1/com.alibaba.dubbo.monitor.MonitorService?category=providers&dubbo=2.5.2&interface=com.alibaba.dubbo.monitor.MonitorService&pid=51500&timestamp=1512805752537}, dubbo version: 2.5.2, current host: 127.0.0.1
[INFO ][20171229 10:29:22,977][ZkEventThread:64] Starting ZkClient event thread.
[INFO ][20171229 10:29:22,992][Environment:109] Client environment:zookeeper.version=3.5.3-beta-8ce24f9e675cbefffb8f21a47e06b42864475a60, built on 04/03/2017 16:19 GMT
[INFO ][20171229 10:29:22,992][Environment:109] Client environment:host.name=192.168.103.21
[INFO ][20171229 10:29:23,008][Environment:109] Client environment:java.version=1.8.0_131
[INFO ][20171229 10:29:23,008][Environment:109] Client environment:java.vendor=Oracle Corporation
[INFO ][20171229 10:29:23,008][Environment:109] Client environment:java.home=C:\Program Files\Java\jdk1.8.0_131\jre
[INFO ][20171229 10:29:23,008][Environment:109] Client environment:java.class.path=D:\Idea\IntelliJ IDEA 2017.1.1\lib\idea_rt.jar;D:\Idea\IntelliJ IDEA 2017.1.1\plugins\junit\lib\junit-rt.jar;C:\Program Files\Java\jdk1.8.0_131\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.8.0_131\jre\lib\deploy.jar;C:\Program Files\Java\jdk1.8.0_131\jre\lib\ext\access-bridge-64.jar;C:\Program Files\Java\jdk1.8.0_131\jre\lib\ext\cldrdata.jar;C:\Program Files\Java\jdk1.8.0_131\jre\lib\ext\dnsns.jar;C:\Program Files\Java\jdk1.8.0_131\jre\lib\ext\jaccess.jar;C:\Program Files\Java\jdk1.8.0_131\jre\lib\ext\jfxrt.jar;C:\Program Files\Java\jdk1.8.0_131\jre\lib\ext\localedata.jar;C:\Program Files\Java\jdk1.8.0_131\jre\lib\ext\nashorn.jar;C:\Program Files\Java\jdk1.8.0_131\jre\lib\ext\sunec.jar;C:\Program Files\Java\jdk1.8.0_131\jre\lib\ext\sunjce_provider.jar;C:\Program Files\Java\jdk1.8.0_131\jre\lib\ext\sunmscapi.jar;C:\Program Files\Java\jdk1.8.0_131\jre\lib\ext\sunpkcs11.jar;C:\Program Files\Java\jdk1.8.0_131\jre\lib\ext\zipfs.jar;C:\Program Files\Java\jdk1.8.0_131\jre\lib\javaws.jar;C:\Program Files\Java\jdk1.8.0_131\jre\lib\jce.jar;C:\Program Files\Java\jdk1.8.0_131\jre\lib\jfr.jar;C:\Program Files\Java\jdk1.8.0_131\jre\lib\jfxswt.jar;C:\Program Files\Java\jdk1.8.0_131\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.8.0_131\jre\lib\management-agent.jar;C:\Program Files\Java\jdk1.8.0_131\jre\lib\plugin.jar;C:\Program Files\Java\jdk1.8.0_131\jre\lib\resources.jar;C:\Program Files\Java\jdk1.8.0_131\jre\lib\rt.jar;D:\Idea\IntelliJ IDEA 2017.1.1\lib\junit.jar;D:\Idea\IntelliJ IDEA 2017.1.1\lib\junit-4.12.jar;D:\Idea\IntelliJ IDEA 2017.1.1\lib\hamcrest-core-1.3.jar;E:\Idea\gw_lulu\web\gw-web-portal\target\test-classes;E:\Idea\gw_lulu\web\gw-web-portal\target\classes;E:\Idea\gw_lulu\common\gw-common-base\target\classes;E:\Idea\gw_lulu\facade\gw-facade-user\target\classes;E:\Laboratory\Maven\repository\org\springframework\spring-aop\4.2.3.RELEASE\spring-aop-4.2.3.RELEASE.jar;E:\Laboratory\Maven\repository\org\springframework\spring-aspects\4.2.3.RELEASE\spring-aspects-4.2.3.RELEASE.jar;E:\Laboratory\Maven\repository\org\springframework\spring-beans\4.2.3.RELEASE\spring-beans-4.2.3.RELEASE.jar;E:\Laboratory\Maven\repository\org\springframework\spring-context\4.2.3.RELEASE\spring-context-4.2.3.RELEASE.jar;E:\Laboratory\Maven\repository\org\springframework\spring-context-support\4.2.3.RELEASE\spring-context-support-4.2.3.RELEASE.jar;E:\Laboratory\Maven\repository\org\springframework\spring-core\4.2.3.RELEASE\spring-core-4.2.3.RELEASE.jar;E:\Laboratory\Maven\repository\org\springframework\spring-expression\4.2.3.RELEASE\spring-expression-4.2.3.RELEASE.jar;E:\Laboratory\Maven\repository\org\springframework\spring-instrument\4.2.3.RELEASE\spring-instrument-4.2.3.RELEASE.jar;E:\Laboratory\Maven\repository\org\springframework\spring-instrument-tomcat\4.2.3.RELEASE\spring-instrument-tomcat-4.2.3.RELEASE.jar;E:\Laboratory\Maven\repository\org\springframework\data\spring-data-jpa\1.9.4.RELEASE\spring-data-jpa-1.9.4.RELEASE.jar;E:\Laboratory\Maven\repository\org\springframework\data\spring-data-commons\1.11.4.RELEASE\spring-data-commons-1.11.4.RELEASE.jar;E:\Laboratory\Maven\repository\org\slf4j\jcl-over-slf4j\1.7.13\jcl-over-slf4j-1.7.13.jar;E:\Laboratory\Maven\repository\org\springframework\spring-jms\4.2.3.RELEASE\spring-jms-4.2.3.RELEASE.jar;E:\Laboratory\Maven\repository\org\springframework\spring-messaging\4.2.3.RELEASE\spring-messaging-4.2.3.RELEASE.jar;E:\Laboratory\Maven\repository\org\springframework\spring-orm\4.2.3.RELEASE\spring-orm-4.2.3.RELEASE.jar;E:\Laboratory\Maven\repository\org\springframework\spring-jdbc\4.2.3.RELEASE\spring-jdbc-4.2.3.RELEASE.jar;E:\Laboratory\Maven\repository\org\springframework\spring-oxm\4.2.3.RELEASE\spring-oxm-4.2.3.RELEASE.jar;E:\Laboratory\Maven\repository\org\springframework\spring-tx\4.2.3.RELEASE\spring-tx-4.2.3.RELEASE.jar;E:\Laboratory\Maven\repository\org\springframework\spring-web\4.2.3.RELEASE\spring-web-4.2.3.RELEASE.jar;E:\Laboratory\Maven\repository\org\springframework\spring-webmvc\4.2.3.RELEASE\spring-webmvc-4.2.3.RELEASE.jar;E:\Laboratory\Maven\repository\org\springframework\spring-webmvc-portlet\4.2.3.RELEASE\spring-webmvc-portlet-4.2.3.RELEASE.jar;E:\Laboratory\Maven\repository\org\springframework\spring-test\4.2.3.RELEASE\spring-test-4.2.3.RELEASE.jar;E:\Laboratory\Maven\repository\org\springframework\ws\spring-ws-core\2.3.0.RELEASE\spring-ws-core-2.3.0.RELEASE.jar;E:\Laboratory\Maven\repository\commons-logging\commons-logging\1.1.3\commons-logging-1.1.3.jar;E:\Laboratory\Maven\repository\org\springframework\ws\spring-xml\2.3.0.RELEASE\spring-xml-2.3.0.RELEASE.jar;E:\Laboratory\Maven\repository\org\mybatis\mybatis\3.4.0\mybatis-3.4.0.jar;E:\Laboratory\Maven\repository\org\mybatis\mybatis-spring\1.3.0\mybatis-spring-1.3.0.jar;E:\Laboratory\Maven\repository\org\mybatis\generator\mybatis-generator-core\1.3.5\mybatis-generator-core-1.3.5.jar;E:\Laboratory\Maven\repository\mysql\mysql-connector-java\5.1.9\mysql-connector-java-5.1.9.jar;E:\Laboratory\Maven\repository\com\alibaba\druid\1.0.9\druid-1.0.9.jar;C:\Program Files\Java\jdk1.8.0_131\lib\jconsole.jar;C:\Program Files\Java\jdk1.8.0_131\lib\tools.jar;E:\Laboratory\Maven\repository\org\jboss\netty\netty\3.2.5.Final\netty-3.2.5.Final.jar;E:\Laboratory\Maven\repository\com\alibaba\dubbo\2.5.2\dubbo-2.5.2.jar;E:\Laboratory\Maven\repository\org\springframework\spring\2.5.6.SEC03\spring-2.5.6.SEC03.jar;E:\Laboratory\Maven\repository\org\javassist\javassist\3.15.0-GA\javassist-3.15.0-GA.jar;E:\Laboratory\Maven\repository\org\apache\zookeeper\zookeeper\3.5.3-beta\zookeeper-3.5.3-beta.jar;E:\Laboratory\Maven\repository\log4j\log4j\1.2.17\log4j-1.2.17.jar;E:\Laboratory\Maven\repository\io\netty\netty\3.10.5.Final\netty-3.10.5.Final.jar;E:\Laboratory\Maven\repository\com\101tec\zkclient\0.9\zkclient-0.9.jar;E:\Laboratory\Maven\repository\org\apache\activemq\activemq-all\5.8.0\activemq-all-5.8.0.jar;E:\Laboratory\Maven\repository\org\apache\activemq\activemq-amqp\5.8.0\activemq-amqp-5.8.0.jar;E:\Laboratory\Maven\repository\org\apache\activemq\activemq-broker\5.8.0\activemq-broker-5.8.0.jar;E:\Laboratory\Maven\repository\org\apache\activemq\activemq-openwire-legacy\5.8.0\activemq-openwire-legacy-5.8.0.jar;E:\Laboratory\Maven\repository\org\fusesource\hawtbuf\hawtbuf\1.9\hawtbuf-1.9.jar;E:\Laboratory\Maven\repository\org\apache\activemq\activemq-pool\5.8.0\activemq-pool-5.8.0.jar;E:\Laboratory\Maven\repository\org\apache\activemq\activemq-client\5.8.0\activemq-client-5.8.0.jar;E:\Laboratory\Maven\repository\org\apache\geronimo\specs\geronimo-jms_1.1_spec\1.1.1\geronimo-jms_1.1_spec-1.1.1.jar;E:\Laboratory\Maven\repository\org\apache\geronimo\specs\geronimo-j2ee-management_1.1_spec\1.0.1\geronimo-j2ee-management_1.1_spec-1.0.1.jar;E:\Laboratory\Maven\repository\org\apache\geronimo\specs\geronimo-jta_1.0.1B_spec\1.0.1\geronimo-jta_1.0.1B_spec-1.0.1.jar;E:\Laboratory\Maven\repository\commons-pool\commons-pool\1.6\commons-pool-1.6.jar;E:\Laboratory\Maven\repository\quartz\quartz\1.6.0\quartz-1.6.0.jar;E:\Laboratory\Maven\repository\org\elasticsearch\client\rest\5.0.0\rest-5.0.0.jar;E:\Laboratory\Maven\repository\org\apache\httpcomponents\httpclient\4.5.2\httpclient-4.5.2.jar;E:\Laboratory\Maven\repository\org\apache\httpcomponents\httpcore\4.4.5\httpcore-4.4.5.jar;E:\Laboratory\Maven\repository\org\apache\httpcomponents\httpasyncclient\4.1.2\httpasyncclient-4.1.2.jar;E:\Laboratory\Maven\repository\org\apache\httpcomponents\httpcore-nio\4.4.5\httpcore-nio-4.4.5.jar;E:\Laboratory\Maven\repository\org\aspectj\aspectjweaver\1.5.4\aspectjweaver-1.5.4.jar;E:\Laboratory\Maven\repository\org\aspectj\aspectjrt\1.5.4\aspectjrt-1.5.4.jar;E:\Laboratory\Maven\repository\junit\junit\4.12\junit-4.12.jar;E:\Laboratory\Maven\repository\org\hamcrest\hamcrest-core\1.3\hamcrest-core-1.3.jar;E:\Laboratory\Maven\repository\javax\servlet\javax.servlet-api\3.1.0\javax.servlet-api-3.1.0.jar;E:\Laboratory\Maven\repository\javax\servlet\jsp\jsp-api\2.2\jsp-api-2.2.jar;E:\Laboratory\Maven\repository\javax\servlet\jstl\1.2\jstl-1.2.jar;E:\Laboratory\Maven\repository\net\sf\jxls\jxls-core\1.0.6\jxls-core-1.0.6.jar;E:\Laboratory\Maven\repository\commons-collections\commons-collections\3.2.1\commons-collections-3.2.1.jar;E:\Laboratory\Maven\repository\org\apache\commons\commons-jexl\2.0.1\commons-jexl-2.0.1.jar;E:\Laboratory\Maven\repository\org\apache\logging\log4j\log4j-api\2.8.2\log4j-api-2.8.2.jar;E:\Laboratory\Maven\repository\org\apache\logging\log4j\log4j-core\2.8.2\log4j-core-2.8.2.jar;E:\Laboratory\Maven\repository\org\slf4j\slf4j-api\1.7.5\slf4j-api-1.7.5.jar;E:\Laboratory\Maven\repository\org\slf4j\slf4j-log4j12\1.7.5\slf4j-log4j12-1.7.5.jar;E:\Laboratory\Maven\repository\org\apache\logging\log4j\log4j-slf4j-impl\2.8.2\log4j-slf4j-impl-2.8.2.jar;E:\Laboratory\Maven\repository\com\google\zxing\core\3.0.0\core-3.0.0.jar;E:\Laboratory\Maven\repository\com\google\zxing\javase\3.0.0\javase-3.0.0.jar;E:\Laboratory\Maven\repository\com\alibaba\fastjson\1.2.6\fastjson-1.2.6.jar;E:\Laboratory\Maven\repository\org\codehaus\jackson\jackson-mapper-asl\1.9.13\jackson-mapper-asl-1.9.13.jar;E:\Laboratory\Maven\repository\org\codehaus\jackson\jackson-core-asl\1.9.13\jackson-core-asl-1.9.13.jar;E:\Laboratory\Maven\repository\org\apache\commons\commons-lang3\3.4\commons-lang3-3.4.jar;E:\Laboratory\Maven\repository\commons-fileupload\commons-fileupload\1.3.1\commons-fileupload-1.3.1.jar;E:\Laboratory\Maven\repository\commons-io\commons-io\2.4\commons-io-2.4.jar;E:\Laboratory\Maven\repository\commons-codec\commons-codec\1.10\commons-codec-1.10.jar;E:\Laboratory\Maven\repository\commons-beanutils\commons-beanutils\1.9.2\commons-beanutils-1.9.2.jar;E:\Laboratory\Maven\repository\org\apache\commons\commons-collections4\4.1\commons-collections4-4.1.jar;E:\Laboratory\Maven\repository\aopalliance\aopalliance\1.0\aopalliance-1.0.jar;E:\Laboratory\Maven\repository\commons-cli\commons-cli\1.2\commons-cli-1.2.jar;E:\Laboratory\Maven\repository\ognl\ognl\3.1.14\ognl-3.1.14.jar;E:\Laboratory\Maven\repository\commons-net\commons-net\3.2\commons-net-3.2.jar;E:\Laboratory\Maven\repository\org\apache\poi\poi\3.15\poi-3.15.jar;E:\Laboratory\Maven\repository\org\apache\poi\poi-ooxml\3.15\poi-ooxml-3.15.jar;E:\Laboratory\Maven\repository\org\apache\poi\poi-ooxml-schemas\3.15\poi-ooxml-schemas-3.15.jar;E:\Laboratory\Maven\repository\org\apache\xmlbeans\xmlbeans\2.6.0\xmlbeans-2.6.0.jar;E:\Laboratory\Maven\repository\stax\stax-api\1.0.1\stax-api-1.0.1.jar;E:\Laboratory\Maven\repository\com\github\virtuald\curvesapi\1.04\curvesapi-1.04.jar;E:\Laboratory\Maven\repository\javax\jms\jms\1.1\jms-1.1.jar
[INFO ][20171229 10:29:23,023][Environment:109] Client environment:java.library.path=C:\Program Files\Java\jdk1.8.0_131\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\ProgramData\Oracle\Java\javapath;C:\Program Files (x86)\Intel\iCLS Client\;C:\Program Files\Intel\iCLS Client\;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\Program Files\Java\jdk1.8.0_131\bin;D:\Git\Git\cmd;D:\Mysql\mysql-5.6.36-winx64\bin;D:\TortoiseGit\bin;D:\TortoiseSVN\bin;D:\Nodejs\;C:\Users\junlonlu\AppData\Local\Microsoft\WindowsApps;D:\Visual Studio Code\Microsoft VS Code\bin;C:\Users\junlonlu\AppData\Roaming\npm;E:\Laboratory\Maven\apache-maven-3.5.2\bin;.
[INFO ][20171229 10:29:23,023][Environment:109] Client environment:java.io.tmpdir=C:\Users\junlonlu\AppData\Local\Temp\
[INFO ][20171229 10:29:23,023][Environment:109] Client environment:java.compiler=<NA>
[INFO ][20171229 10:29:23,023][Environment:109] Client environment:os.name=Windows 10
[INFO ][20171229 10:29:23,023][Environment:109] Client environment:os.arch=amd64
[INFO ][20171229 10:29:23,023][Environment:109] Client environment:os.version=10.0
[INFO ][20171229 10:29:23,023][Environment:109] Client environment:user.name=junlonlu
[INFO ][20171229 10:29:23,023][Environment:109] Client environment:user.home=C:\Users\junlonlu
[INFO ][20171229 10:29:23,023][Environment:109] Client environment:user.dir=E:\Idea\gw_lulu\web\gw-web-portal
[INFO ][20171229 10:29:23,023][Environment:109] Client environment:os.memory.free=98MB
[INFO ][20171229 10:29:23,023][Environment:109] Client environment:os.memory.max=1799MB
[INFO ][20171229 10:29:23,023][Environment:109] Client environment:os.memory.total=123MB
[INFO ][20171229 10:29:23,023][ZooKeeper:865] Initiating client connection, connectString=127.0.0.1:2181 sessionTimeout=30000 watcher=org.I0Itec.zkclient.ZkClient@56db847e
[INFO ][20171229 10:29:23,305][ClientCnxnSocket:236] jute.maxbuffer value is 4194304 Bytes
[INFO ][20171229 10:29:23,305][ZkClient:935] Waiting for keeper state SyncConnected
[INFO ][20171229 10:29:23,320][ClientCnxn$SendThread:1113] Opening socket connection to server 127.0.0.1/127.0.0.1:2181. Will not attempt to authenticate using SASL (unknown error)
[INFO ][20171229 10:29:23,320][ClientCnxn$SendThread:948] Socket connection established, initiating session, client: /127.0.0.1:52282, server: 127.0.0.1/127.0.0.1:2181
[INFO ][20171229 10:29:23,399][ClientCnxn$SendThread:1381] Session establishment complete on server 127.0.0.1/127.0.0.1:2181, sessionid = 0x100b800397c0003, negotiated timeout = 30000
[INFO ][20171229 10:29:23,414][ZkClient:712] zookeeper state changed (SyncConnected)
[DEBUG][20171229 10:29:23,430][ExtensionLoader:943]  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class RouterFactory$Adpative implements com.alibaba.dubbo.rpc.cluster.RouterFactory {
public com.alibaba.dubbo.rpc.cluster.Router getRouter(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getProtocol();
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.RouterFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.cluster.RouterFactory extension = (com.alibaba.dubbo.rpc.cluster.RouterFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.RouterFactory.class).getExtension(extName);
return extension.getRouter(arg0);
}
}, dubbo version: 2.5.2, current host: 127.0.0.1
[DEBUG][20171229 10:29:23,461][ExtensionLoader:943]  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ConfiguratorFactory$Adpative implements com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory {
public com.alibaba.dubbo.rpc.cluster.Configurator getConfigurator(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getProtocol();
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory extension = (com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory.class).getExtension(extName);
return extension.getConfigurator(arg0);
}
}, dubbo version: 2.5.2, current host: 127.0.0.1
[INFO ][20171229 10:29:23,477][AbstractRegistry:302]  [DUBBO] Register: consumer://192.168.103.21/com.junlon.facade.user.service.AdminQueryFacade?application=gw-web-portal&category=consumers&check=false&dubbo=2.5.2&interface=com.junlon.facade.user.service.AdminQueryFacade&methods=list&pid=64384&side=consumer&timestamp=1514514562852, dubbo version: 2.5.2, current host: 192.168.103.21
[INFO ][20171229 10:29:23,570][AbstractRegistry:325]  [DUBBO] Subscribe: consumer://192.168.103.21/com.junlon.facade.user.service.AdminQueryFacade?application=gw-web-portal&category=providers,configurators,routers&check=false&dubbo=2.5.2&interface=com.junlon.facade.user.service.AdminQueryFacade&methods=list&pid=64384&side=consumer&timestamp=1514514562852, dubbo version: 2.5.2, current host: 192.168.103.21
[INFO ][20171229 10:29:23,813][AbstractRegistry:422]  [DUBBO] Notify urls for subscribe url consumer://192.168.103.21/com.junlon.facade.user.service.AdminQueryFacade?application=gw-web-portal&category=providers,configurators,routers&check=false&dubbo=2.5.2&interface=com.junlon.facade.user.service.AdminQueryFacade&methods=list&pid=64384&side=consumer&timestamp=1514514562852, urls: [empty://192.168.103.21/com.junlon.facade.user.service.AdminQueryFacade?application=gw-web-portal&category=providers&check=false&dubbo=2.5.2&interface=com.junlon.facade.user.service.AdminQueryFacade&methods=list&pid=64384&side=consumer&timestamp=1514514562852, empty://192.168.103.21/com.junlon.facade.user.service.AdminQueryFacade?application=gw-web-portal&category=configurators&check=false&dubbo=2.5.2&interface=com.junlon.facade.user.service.AdminQueryFacade&methods=list&pid=64384&side=consumer&timestamp=1514514562852, empty://192.168.103.21/com.junlon.facade.user.service.AdminQueryFacade?application=gw-web-portal&category=routers&check=false&dubbo=2.5.2&interface=com.junlon.facade.user.service.AdminQueryFacade&methods=list&pid=64384&side=consumer&timestamp=1514514562852], dubbo version: 2.5.2, current host: 192.168.103.21
[INFO ][20171229 10:29:23,829][ReferenceConfig:423]  [DUBBO] Refer dubbo service com.junlon.facade.user.service.AdminQueryFacade from url zookeeper://127.0.0.1:2181/com.alibaba.dubbo.registry.RegistryService?application=gw-web-portal&check=false&dubbo=2.5.2&interface=com.junlon.facade.user.service.AdminQueryFacade&methods=list&pid=64384&side=consumer&timestamp=1514514562852, dubbo version: 2.5.2, current host: 192.168.103.21
[INFO ][20171229 10:29:23,851][AbstractApplicationContext:957] Closing org.springframework.context.support.GenericApplicationContext@6dc17b83: startup date [Fri Dec 29 10:29:21 CST 2017]; root of context hierarchy
[INFO ][20171229 10:29:23,851][AbstractConfig$1:450]  [DUBBO] Run shutdown hook now., dubbo version: 2.5.2, current host: 192.168.103.21
[INFO ][20171229 10:29:23,867][AbstractRegistryFactory:63]  [DUBBO] Close all registries [zookeeper://127.0.0.1:2181/com.alibaba.dubbo.registry.RegistryService?application=gw-web-portal&dubbo=2.5.2&interface=com.alibaba.dubbo.registry.RegistryService&pid=64384&timestamp=1514514562898], dubbo version: 2.5.2, current host: 192.168.103.21
[INFO ][20171229 10:29:23,867][AbstractRegistry:485]  [DUBBO] Destroy registry:zookeeper://127.0.0.1:2181/com.alibaba.dubbo.registry.RegistryService?application=gw-web-portal&dubbo=2.5.2&interface=com.alibaba.dubbo.registry.RegistryService&pid=64384&timestamp=1514514562898, dubbo version: 2.5.2, current host: 192.168.103.21
[INFO ][20171229 10:29:23,867][AbstractRegistry:312]  [DUBBO] Unregister: consumer://192.168.103.21/com.junlon.facade.user.service.AdminQueryFacade?application=gw-web-portal&category=consumers&check=false&dubbo=2.5.2&interface=com.junlon.facade.user.service.AdminQueryFacade&methods=list&pid=64384&side=consumer&timestamp=1514514562852, dubbo version: 2.5.2, current host: 192.168.103.21
[INFO ][20171229 10:29:23,867][AbstractRegistry:343]  [DUBBO] Unsubscribe: consumer://192.168.103.21/com.junlon.facade.user.service.AdminQueryFacade?application=gw-web-portal&category=providers,configurators,routers&check=false&dubbo=2.5.2&interface=com.junlon.facade.user.service.AdminQueryFacade&methods=list&pid=64384&side=consumer&timestamp=1514514562852, dubbo version: 2.5.2, current host: 192.168.103.21
[INFO ][20171229 10:29:23,882][AbstractRegistry:494]  [DUBBO] Destroy unregister url consumer://192.168.103.21/com.junlon.facade.user.service.AdminQueryFacade?application=gw-web-portal&category=consumers&check=false&dubbo=2.5.2&interface=com.junlon.facade.user.service.AdminQueryFacade&methods=list&pid=64384&side=consumer&timestamp=1514514562852, dubbo version: 2.5.2, current host: 192.168.103.21
[INFO ][20171229 10:29:23,882][ZkEventThread:82] Terminate ZkClient event thread.
[INFO ][20171229 10:29:23,898][ZooKeeper:1326] Session: 0x100b800397c0003 closed
[INFO ][20171229 10:29:23,898][ClientCnxn$EventThread:513] EventThread shut down for session: 0x100b800397c0003
[INFO ][20171229 10:42:45,542][AbstractTestContextBootstrapper:259] Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]
[INFO ][20171229 10:42:45,573][AbstractTestContextBootstrapper:185] Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@47d90b9e, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@1184ab05, org.springframework.test.context.support.DependencyInjectionTestExecutionListener@3aefe5e5, org.springframework.test.context.support.DirtiesContextTestExecutionListener@149e0f5d, org.springframework.test.context.transaction.TransactionalTestExecutionListener@1b1473ab, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@2f7c2f4f]
[INFO ][20171229 10:42:45,802][XmlBeanDefinitionReader:317] Loading XML bean definitions from class path resource [spring/spring-context.xml]
[INFO ][20171229 10:42:46,349][XmlBeanDefinitionReader:317] Loading XML bean definitions from class path resource [spring/dubbo/dubbo-consumer.xml]
[INFO ][20171229 10:42:46,566][?:?] using logger: com.alibaba.dubbo.common.logger.log4j.Log4jLoggerAdapter
[INFO ][20171229 10:42:46,600][XmlBeanDefinitionReader:317] Loading XML bean definitions from class path resource [spring/dubbo/dubbo-reference-user.xml]
[INFO ][20171229 10:42:46,727][XmlBeanDefinitionReader:317] Loading XML bean definitions from class path resource [spring/spring-amp.xml]
[INFO ][20171229 10:42:46,759][AbstractApplicationContext:577] Refreshing org.springframework.context.support.GenericApplicationContext@6dc17b83: startup date [Fri Dec 29 10:42:46 CST 2017]; root of context hierarchy
[INFO ][20171229 10:42:47,106][PropertiesLoaderSupport:172] Loading properties file from class path resource [public_system.properties]
[DEBUG][20171229 10:42:47,556][ExtensionLoader:943]  [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Protocol$Adpative implements com.alibaba.dubbo.rpc.Protocol {
public void destroy() {throw new UnsupportedOperationException("method public abstract void com.alibaba.dubbo.rpc.Protocol.destroy() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public int getDefaultPort() {throw new UnsupportedOperationException("method public abstract int com.alibaba.dubbo.rpc.Protocol.getDefaultPort() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public com.alibaba.dubbo.rpc.Invoker refer(java.lang.Class arg0, com.alibaba.dubbo.common.URL arg1) throws java.lang.Class {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.refer(arg0, arg1);
}
public com.alibaba.dubbo.rpc.Exporter export(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.Invoker {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.export(arg0);
}
}, dubbo version: 2.5.2, current host: 127.0.0.1
[DEBUG][20171229 10:42:47,735][ExtensionLoader:943]  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Cluster$Adpative implements com.alibaba.dubbo.rpc.cluster.Cluster {
public com.alibaba.dubbo.rpc.Invoker join(com.alibaba.dubbo.rpc.cluster.Directory arg0) throws com.alibaba.dubbo.rpc.cluster.Directory {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("cluster", "failover");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.Cluster) name from url(" + url.toString() + ") use keys([cluster])");
com.alibaba.dubbo.rpc.cluster.Cluster extension = (com.alibaba.dubbo.rpc.cluster.Cluster)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.Cluster.class).getExtension(extName);
return extension.join(arg0);
}
}, dubbo version: 2.5.2, current host: 127.0.0.1
[DEBUG][20171229 10:42:47,788][ExtensionLoader:943]  [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ProxyFactory$Adpative implements com.alibaba.dubbo.rpc.ProxyFactory {
public java.lang.Object getProxy(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.Invoker {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getProxy(arg0);
}
public com.alibaba.dubbo.rpc.Invoker getInvoker(java.lang.Object arg0, java.lang.Class arg1, com.alibaba.dubbo.common.URL arg2) throws java.lang.Object {
if (arg2 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg2;
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getInvoker(arg0, arg1, arg2);
}
}, dubbo version: 2.5.2, current host: 127.0.0.1
[DEBUG][20171229 10:42:48,066][ExtensionLoader:943]  [DUBBO] package com.alibaba.dubbo.registry;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class RegistryFactory$Adpative implements com.alibaba.dubbo.registry.RegistryFactory {
public com.alibaba.dubbo.registry.Registry getRegistry(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.registry.RegistryFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.registry.RegistryFactory extension = (com.alibaba.dubbo.registry.RegistryFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.registry.RegistryFactory.class).getExtension(extName);
return extension.getRegistry(arg0);
}
}, dubbo version: 2.5.2, current host: 127.0.0.1
[DEBUG][20171229 10:42:48,082][ExtensionLoader:943]  [DUBBO] package com.alibaba.dubbo.remoting.zookeeper;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ZookeeperTransporter$Adpative implements com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter {
public com.alibaba.dubbo.remoting.zookeeper.ZookeeperClient connect(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("client", url.getParameter("transporter", "zkclient"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter) name from url(" + url.toString() + ") use keys([client, transporter])");
com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter extension = (com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter.class).getExtension(extName);
return extension.connect(arg0);
}
}, dubbo version: 2.5.2, current host: 127.0.0.1
[INFO ][20171229 10:42:48,113][AbstractRegistry:232]  [DUBBO] Load registry store file C:\Users\junlonlu\.dubbo\dubbo-registry-127.0.0.1.cache, data: {com.junlon.facade.user.service.AdminQueryFacade=empty://192.168.103.21:20880/com.junlon.facade.user.service.AdminQueryFacade?anyhost=true&application=gw-serivce-user&category=configurators&check=false&default.accepts=1000&default.dispatcher=all&default.threadpool=fixed&default.threads=500&default.timeout=30000&dubbo=2.5.2&interface=com.junlon.facade.user.service.AdminQueryFacade&methods=list&pid=62864&retries=0&side=provider&timestamp=1514515342151, com.alibaba.dubbo.monitor.MonitorService=empty://192.168.19.1/com.alibaba.dubbo.monitor.MonitorService?category=configurators&dubbo=2.5.2&interface=com.alibaba.dubbo.monitor.MonitorService&pid=51500&timestamp=1512805752537 empty://192.168.19.1/com.alibaba.dubbo.monitor.MonitorService?category=routers&dubbo=2.5.2&interface=com.alibaba.dubbo.monitor.MonitorService&pid=51500&timestamp=1512805752537 empty://192.168.19.1/com.alibaba.dubbo.monitor.MonitorService?category=providers&dubbo=2.5.2&interface=com.alibaba.dubbo.monitor.MonitorService&pid=51500&timestamp=1512805752537}, dubbo version: 2.5.2, current host: 127.0.0.1
[INFO ][20171229 10:42:48,129][ZkEventThread:64] Starting ZkClient event thread.
[INFO ][20171229 10:42:48,144][Environment:109] Client environment:zookeeper.version=3.5.3-beta-8ce24f9e675cbefffb8f21a47e06b42864475a60, built on 04/03/2017 16:19 GMT
[INFO ][20171229 10:42:48,144][Environment:109] Client environment:host.name=192.168.103.21
[INFO ][20171229 10:42:48,144][Environment:109] Client environment:java.version=1.8.0_131
[INFO ][20171229 10:42:48,144][Environment:109] Client environment:java.vendor=Oracle Corporation
[INFO ][20171229 10:42:48,144][Environment:109] Client environment:java.home=C:\Program Files\Java\jdk1.8.0_131\jre
[INFO ][20171229 10:42:48,144][Environment:109] Client environment:java.class.path=D:\Idea\IntelliJ IDEA 2017.1.1\lib\idea_rt.jar;D:\Idea\IntelliJ IDEA 2017.1.1\plugins\junit\lib\junit-rt.jar;C:\Program Files\Java\jdk1.8.0_131\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.8.0_131\jre\lib\deploy.jar;C:\Program Files\Java\jdk1.8.0_131\jre\lib\ext\access-bridge-64.jar;C:\Program Files\Java\jdk1.8.0_131\jre\lib\ext\cldrdata.jar;C:\Program Files\Java\jdk1.8.0_131\jre\lib\ext\dnsns.jar;C:\Program Files\Java\jdk1.8.0_131\jre\lib\ext\jaccess.jar;C:\Program Files\Java\jdk1.8.0_131\jre\lib\ext\jfxrt.jar;C:\Program Files\Java\jdk1.8.0_131\jre\lib\ext\localedata.jar;C:\Program Files\Java\jdk1.8.0_131\jre\lib\ext\nashorn.jar;C:\Program Files\Java\jdk1.8.0_131\jre\lib\ext\sunec.jar;C:\Program Files\Java\jdk1.8.0_131\jre\lib\ext\sunjce_provider.jar;C:\Program Files\Java\jdk1.8.0_131\jre\lib\ext\sunmscapi.jar;C:\Program Files\Java\jdk1.8.0_131\jre\lib\ext\sunpkcs11.jar;C:\Program Files\Java\jdk1.8.0_131\jre\lib\ext\zipfs.jar;C:\Program Files\Java\jdk1.8.0_131\jre\lib\javaws.jar;C:\Program Files\Java\jdk1.8.0_131\jre\lib\jce.jar;C:\Program Files\Java\jdk1.8.0_131\jre\lib\jfr.jar;C:\Program Files\Java\jdk1.8.0_131\jre\lib\jfxswt.jar;C:\Program Files\Java\jdk1.8.0_131\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.8.0_131\jre\lib\management-agent.jar;C:\Program Files\Java\jdk1.8.0_131\jre\lib\plugin.jar;C:\Program Files\Java\jdk1.8.0_131\jre\lib\resources.jar;C:\Program Files\Java\jdk1.8.0_131\jre\lib\rt.jar;D:\Idea\IntelliJ IDEA 2017.1.1\lib\junit.jar;D:\Idea\IntelliJ IDEA 2017.1.1\lib\junit-4.12.jar;D:\Idea\IntelliJ IDEA 2017.1.1\lib\hamcrest-core-1.3.jar;E:\Idea\gw_lulu\web\gw-web-portal\target\test-classes;E:\Idea\gw_lulu\web\gw-web-portal\target\classes;E:\Idea\gw_lulu\common\gw-common-base\target\classes;E:\Idea\gw_lulu\facade\gw-facade-user\target\classes;E:\Laboratory\Maven\repository\org\springframework\spring-aop\4.2.3.RELEASE\spring-aop-4.2.3.RELEASE.jar;E:\Laboratory\Maven\repository\org\springframework\spring-aspects\4.2.3.RELEASE\spring-aspects-4.2.3.RELEASE.jar;E:\Laboratory\Maven\repository\org\springframework\spring-beans\4.2.3.RELEASE\spring-beans-4.2.3.RELEASE.jar;E:\Laboratory\Maven\repository\org\springframework\spring-context\4.2.3.RELEASE\spring-context-4.2.3.RELEASE.jar;E:\Laboratory\Maven\repository\org\springframework\spring-context-support\4.2.3.RELEASE\spring-context-support-4.2.3.RELEASE.jar;E:\Laboratory\Maven\repository\org\springframework\spring-core\4.2.3.RELEASE\spring-core-4.2.3.RELEASE.jar;E:\Laboratory\Maven\repository\org\springframework\spring-expression\4.2.3.RELEASE\spring-expression-4.2.3.RELEASE.jar;E:\Laboratory\Maven\repository\org\springframework\spring-instrument\4.2.3.RELEASE\spring-instrument-4.2.3.RELEASE.jar;E:\Laboratory\Maven\repository\org\springframework\spring-instrument-tomcat\4.2.3.RELEASE\spring-instrument-tomcat-4.2.3.RELEASE.jar;E:\Laboratory\Maven\repository\org\springframework\data\spring-data-jpa\1.9.4.RELEASE\spring-data-jpa-1.9.4.RELEASE.jar;E:\Laboratory\Maven\repository\org\springframework\data\spring-data-commons\1.11.4.RELEASE\spring-data-commons-1.11.4.RELEASE.jar;E:\Laboratory\Maven\repository\org\slf4j\jcl-over-slf4j\1.7.13\jcl-over-slf4j-1.7.13.jar;E:\Laboratory\Maven\repository\org\springframework\spring-jms\4.2.3.RELEASE\spring-jms-4.2.3.RELEASE.jar;E:\Laboratory\Maven\repository\org\springframework\spring-messaging\4.2.3.RELEASE\spring-messaging-4.2.3.RELEASE.jar;E:\Laboratory\Maven\repository\org\springframework\spring-orm\4.2.3.RELEASE\spring-orm-4.2.3.RELEASE.jar;E:\Laboratory\Maven\repository\org\springframework\spring-jdbc\4.2.3.RELEASE\spring-jdbc-4.2.3.RELEASE.jar;E:\Laboratory\Maven\repository\org\springframework\spring-oxm\4.2.3.RELEASE\spring-oxm-4.2.3.RELEASE.jar;E:\Laboratory\Maven\repository\org\springframework\spring-tx\4.2.3.RELEASE\spring-tx-4.2.3.RELEASE.jar;E:\Laboratory\Maven\repository\org\springframework\spring-web\4.2.3.RELEASE\spring-web-4.2.3.RELEASE.jar;E:\Laboratory\Maven\repository\org\springframework\spring-webmvc\4.2.3.RELEASE\spring-webmvc-4.2.3.RELEASE.jar;E:\Laboratory\Maven\repository\org\springframework\spring-webmvc-portlet\4.2.3.RELEASE\spring-webmvc-portlet-4.2.3.RELEASE.jar;E:\Laboratory\Maven\repository\org\springframework\spring-test\4.2.3.RELEASE\spring-test-4.2.3.RELEASE.jar;E:\Laboratory\Maven\repository\org\springframework\ws\spring-ws-core\2.3.0.RELEASE\spring-ws-core-2.3.0.RELEASE.jar;E:\Laboratory\Maven\repository\commons-logging\commons-logging\1.1.3\commons-logging-1.1.3.jar;E:\Laboratory\Maven\repository\org\springframework\ws\spring-xml\2.3.0.RELEASE\spring-xml-2.3.0.RELEASE.jar;E:\Laboratory\Maven\repository\org\mybatis\mybatis\3.4.0\mybatis-3.4.0.jar;E:\Laboratory\Maven\repository\org\mybatis\mybatis-spring\1.3.0\mybatis-spring-1.3.0.jar;E:\Laboratory\Maven\repository\org\mybatis\generator\mybatis-generator-core\1.3.5\mybatis-generator-core-1.3.5.jar;E:\Laboratory\Maven\repository\mysql\mysql-connector-java\5.1.9\mysql-connector-java-5.1.9.jar;E:\Laboratory\Maven\repository\com\alibaba\druid\1.0.9\druid-1.0.9.jar;C:\Program Files\Java\jdk1.8.0_131\lib\jconsole.jar;C:\Program Files\Java\jdk1.8.0_131\lib\tools.jar;E:\Laboratory\Maven\repository\org\jboss\netty\netty\3.2.5.Final\netty-3.2.5.Final.jar;E:\Laboratory\Maven\repository\com\alibaba\dubbo\2.5.2\dubbo-2.5.2.jar;E:\Laboratory\Maven\repository\org\springframework\spring\2.5.6.SEC03\spring-2.5.6.SEC03.jar;E:\Laboratory\Maven\repository\org\javassist\javassist\3.15.0-GA\javassist-3.15.0-GA.jar;E:\Laboratory\Maven\repository\org\apache\zookeeper\zookeeper\3.5.3-beta\zookeeper-3.5.3-beta.jar;E:\Laboratory\Maven\repository\log4j\log4j\1.2.17\log4j-1.2.17.jar;E:\Laboratory\Maven\repository\io\netty\netty\3.10.5.Final\netty-3.10.5.Final.jar;E:\Laboratory\Maven\repository\com\101tec\zkclient\0.9\zkclient-0.9.jar;E:\Laboratory\Maven\repository\org\apache\activemq\activemq-all\5.8.0\activemq-all-5.8.0.jar;E:\Laboratory\Maven\repository\org\apache\activemq\activemq-amqp\5.8.0\activemq-amqp-5.8.0.jar;E:\Laboratory\Maven\repository\org\apache\activemq\activemq-broker\5.8.0\activemq-broker-5.8.0.jar;E:\Laboratory\Maven\repository\org\apache\activemq\activemq-openwire-legacy\5.8.0\activemq-openwire-legacy-5.8.0.jar;E:\Laboratory\Maven\repository\org\fusesource\hawtbuf\hawtbuf\1.9\hawtbuf-1.9.jar;E:\Laboratory\Maven\repository\org\apache\activemq\activemq-pool\5.8.0\activemq-pool-5.8.0.jar;E:\Laboratory\Maven\repository\org\apache\activemq\activemq-client\5.8.0\activemq-client-5.8.0.jar;E:\Laboratory\Maven\repository\org\apache\geronimo\specs\geronimo-jms_1.1_spec\1.1.1\geronimo-jms_1.1_spec-1.1.1.jar;E:\Laboratory\Maven\repository\org\apache\geronimo\specs\geronimo-j2ee-management_1.1_spec\1.0.1\geronimo-j2ee-management_1.1_spec-1.0.1.jar;E:\Laboratory\Maven\repository\org\apache\geronimo\specs\geronimo-jta_1.0.1B_spec\1.0.1\geronimo-jta_1.0.1B_spec-1.0.1.jar;E:\Laboratory\Maven\repository\commons-pool\commons-pool\1.6\commons-pool-1.6.jar;E:\Laboratory\Maven\repository\quartz\quartz\1.6.0\quartz-1.6.0.jar;E:\Laboratory\Maven\repository\org\elasticsearch\client\rest\5.0.0\rest-5.0.0.jar;E:\Laboratory\Maven\repository\org\apache\httpcomponents\httpclient\4.5.2\httpclient-4.5.2.jar;E:\Laboratory\Maven\repository\org\apache\httpcomponents\httpcore\4.4.5\httpcore-4.4.5.jar;E:\Laboratory\Maven\repository\org\apache\httpcomponents\httpasyncclient\4.1.2\httpasyncclient-4.1.2.jar;E:\Laboratory\Maven\repository\org\apache\httpcomponents\httpcore-nio\4.4.5\httpcore-nio-4.4.5.jar;E:\Laboratory\Maven\repository\org\aspectj\aspectjweaver\1.5.4\aspectjweaver-1.5.4.jar;E:\Laboratory\Maven\repository\org\aspectj\aspectjrt\1.5.4\aspectjrt-1.5.4.jar;E:\Laboratory\Maven\repository\junit\junit\4.12\junit-4.12.jar;E:\Laboratory\Maven\repository\org\hamcrest\hamcrest-core\1.3\hamcrest-core-1.3.jar;E:\Laboratory\Maven\repository\javax\servlet\javax.servlet-api\3.1.0\javax.servlet-api-3.1.0.jar;E:\Laboratory\Maven\repository\javax\servlet\jsp\jsp-api\2.2\jsp-api-2.2.jar;E:\Laboratory\Maven\repository\javax\servlet\jstl\1.2\jstl-1.2.jar;E:\Laboratory\Maven\repository\net\sf\jxls\jxls-core\1.0.6\jxls-core-1.0.6.jar;E:\Laboratory\Maven\repository\commons-collections\commons-collections\3.2.1\commons-collections-3.2.1.jar;E:\Laboratory\Maven\repository\org\apache\commons\commons-jexl\2.0.1\commons-jexl-2.0.1.jar;E:\Laboratory\Maven\repository\org\apache\logging\log4j\log4j-api\2.8.2\log4j-api-2.8.2.jar;E:\Laboratory\Maven\repository\org\apache\logging\log4j\log4j-core\2.8.2\log4j-core-2.8.2.jar;E:\Laboratory\Maven\repository\org\slf4j\slf4j-api\1.7.5\slf4j-api-1.7.5.jar;E:\Laboratory\Maven\repository\org\slf4j\slf4j-log4j12\1.7.5\slf4j-log4j12-1.7.5.jar;E:\Laboratory\Maven\repository\org\apache\logging\log4j\log4j-slf4j-impl\2.8.2\log4j-slf4j-impl-2.8.2.jar;E:\Laboratory\Maven\repository\com\google\zxing\core\3.0.0\core-3.0.0.jar;E:\Laboratory\Maven\repository\com\google\zxing\javase\3.0.0\javase-3.0.0.jar;E:\Laboratory\Maven\repository\com\alibaba\fastjson\1.2.6\fastjson-1.2.6.jar;E:\Laboratory\Maven\repository\org\codehaus\jackson\jackson-mapper-asl\1.9.13\jackson-mapper-asl-1.9.13.jar;E:\Laboratory\Maven\repository\org\codehaus\jackson\jackson-core-asl\1.9.13\jackson-core-asl-1.9.13.jar;E:\Laboratory\Maven\repository\org\apache\commons\commons-lang3\3.4\commons-lang3-3.4.jar;E:\Laboratory\Maven\repository\commons-fileupload\commons-fileupload\1.3.1\commons-fileupload-1.3.1.jar;E:\Laboratory\Maven\repository\commons-io\commons-io\2.4\commons-io-2.4.jar;E:\Laboratory\Maven\repository\commons-codec\commons-codec\1.10\commons-codec-1.10.jar;E:\Laboratory\Maven\repository\commons-beanutils\commons-beanutils\1.9.2\commons-beanutils-1.9.2.jar;E:\Laboratory\Maven\repository\org\apache\commons\commons-collections4\4.1\commons-collections4-4.1.jar;E:\Laboratory\Maven\repository\aopalliance\aopalliance\1.0\aopalliance-1.0.jar;E:\Laboratory\Maven\repository\commons-cli\commons-cli\1.2\commons-cli-1.2.jar;E:\Laboratory\Maven\repository\ognl\ognl\3.1.14\ognl-3.1.14.jar;E:\Laboratory\Maven\repository\commons-net\commons-net\3.2\commons-net-3.2.jar;E:\Laboratory\Maven\repository\org\apache\poi\poi\3.15\poi-3.15.jar;E:\Laboratory\Maven\repository\org\apache\poi\poi-ooxml\3.15\poi-ooxml-3.15.jar;E:\Laboratory\Maven\repository\org\apache\poi\poi-ooxml-schemas\3.15\poi-ooxml-schemas-3.15.jar;E:\Laboratory\Maven\repository\org\apache\xmlbeans\xmlbeans\2.6.0\xmlbeans-2.6.0.jar;E:\Laboratory\Maven\repository\stax\stax-api\1.0.1\stax-api-1.0.1.jar;E:\Laboratory\Maven\repository\com\github\virtuald\curvesapi\1.04\curvesapi-1.04.jar;E:\Laboratory\Maven\repository\javax\jms\jms\1.1\jms-1.1.jar
[INFO ][20171229 10:42:48,160][Environment:109] Client environment:java.library.path=C:\Program Files\Java\jdk1.8.0_131\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\ProgramData\Oracle\Java\javapath;C:\Program Files (x86)\Intel\iCLS Client\;C:\Program Files\Intel\iCLS Client\;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\Program Files\Java\jdk1.8.0_131\bin;D:\Git\Git\cmd;D:\Mysql\mysql-5.6.36-winx64\bin;D:\TortoiseGit\bin;D:\TortoiseSVN\bin;D:\Nodejs\;C:\Users\junlonlu\AppData\Local\Microsoft\WindowsApps;D:\Visual Studio Code\Microsoft VS Code\bin;C:\Users\junlonlu\AppData\Roaming\npm;E:\Laboratory\Maven\apache-maven-3.5.2\bin;.
[INFO ][20171229 10:42:48,160][Environment:109] Client environment:java.io.tmpdir=C:\Users\junlonlu\AppData\Local\Temp\
[INFO ][20171229 10:42:48,160][Environment:109] Client environment:java.compiler=<NA>
[INFO ][20171229 10:42:48,160][Environment:109] Client environment:os.name=Windows 10
[INFO ][20171229 10:42:48,160][Environment:109] Client environment:os.arch=amd64
[INFO ][20171229 10:42:48,160][Environment:109] Client environment:os.version=10.0
[INFO ][20171229 10:42:48,160][Environment:109] Client environment:user.name=junlonlu
[INFO ][20171229 10:42:48,160][Environment:109] Client environment:user.home=C:\Users\junlonlu
[INFO ][20171229 10:42:48,160][Environment:109] Client environment:user.dir=E:\Idea\gw_lulu\web\gw-web-portal
[INFO ][20171229 10:42:48,160][Environment:109] Client environment:os.memory.free=97MB
[INFO ][20171229 10:42:48,160][Environment:109] Client environment:os.memory.max=1799MB
[INFO ][20171229 10:42:48,160][Environment:109] Client environment:os.memory.total=123MB
[INFO ][20171229 10:42:48,160][ZooKeeper:865] Initiating client connection, connectString=127.0.0.1:2181 sessionTimeout=30000 watcher=org.I0Itec.zkclient.ZkClient@56db847e
[INFO ][20171229 10:42:48,457][ClientCnxnSocket:236] jute.maxbuffer value is 4194304 Bytes
[INFO ][20171229 10:42:48,457][ZkClient:935] Waiting for keeper state SyncConnected
[INFO ][20171229 10:42:48,472][ClientCnxn$SendThread:1113] Opening socket connection to server 127.0.0.1/127.0.0.1:2181. Will not attempt to authenticate using SASL (unknown error)
[INFO ][20171229 10:42:48,472][ClientCnxn$SendThread:948] Socket connection established, initiating session, client: /127.0.0.1:52897, server: 127.0.0.1/127.0.0.1:2181
[INFO ][20171229 10:42:48,519][ClientCnxn$SendThread:1381] Session establishment complete on server 127.0.0.1/127.0.0.1:2181, sessionid = 0x100b8130f670003, negotiated timeout = 30000
[INFO ][20171229 10:42:48,535][ZkClient:712] zookeeper state changed (SyncConnected)
[DEBUG][20171229 10:42:48,550][ExtensionLoader:943]  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class RouterFactory$Adpative implements com.alibaba.dubbo.rpc.cluster.RouterFactory {
public com.alibaba.dubbo.rpc.cluster.Router getRouter(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getProtocol();
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.RouterFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.cluster.RouterFactory extension = (com.alibaba.dubbo.rpc.cluster.RouterFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.RouterFactory.class).getExtension(extName);
return extension.getRouter(arg0);
}
}, dubbo version: 2.5.2, current host: 127.0.0.1
[DEBUG][20171229 10:42:48,582][ExtensionLoader:943]  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ConfiguratorFactory$Adpative implements com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory {
public com.alibaba.dubbo.rpc.cluster.Configurator getConfigurator(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getProtocol();
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory extension = (com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory.class).getExtension(extName);
return extension.getConfigurator(arg0);
}
}, dubbo version: 2.5.2, current host: 127.0.0.1
[INFO ][20171229 10:42:48,597][AbstractRegistry:302]  [DUBBO] Register: consumer://192.168.103.21/com.junlon.facade.user.service.AdminQueryFacade?application=gw-web-portal&category=consumers&check=false&dubbo=2.5.2&interface=com.junlon.facade.user.service.AdminQueryFacade&methods=list&pid=68984&side=consumer&timestamp=1514515368019, dubbo version: 2.5.2, current host: 192.168.103.21
[INFO ][20171229 10:42:48,738][AbstractRegistry:325]  [DUBBO] Subscribe: consumer://192.168.103.21/com.junlon.facade.user.service.AdminQueryFacade?application=gw-web-portal&category=providers,configurators,routers&check=false&dubbo=2.5.2&interface=com.junlon.facade.user.service.AdminQueryFacade&methods=list&pid=68984&side=consumer&timestamp=1514515368019, dubbo version: 2.5.2, current host: 192.168.103.21
[INFO ][20171229 10:42:49,025][AbstractRegistry:422]  [DUBBO] Notify urls for subscribe url consumer://192.168.103.21/com.junlon.facade.user.service.AdminQueryFacade?application=gw-web-portal&category=providers,configurators,routers&check=false&dubbo=2.5.2&interface=com.junlon.facade.user.service.AdminQueryFacade&methods=list&pid=68984&side=consumer&timestamp=1514515368019, urls: [empty://192.168.103.21/com.junlon.facade.user.service.AdminQueryFacade?application=gw-web-portal&category=providers&check=false&dubbo=2.5.2&interface=com.junlon.facade.user.service.AdminQueryFacade&methods=list&pid=68984&side=consumer&timestamp=1514515368019, empty://192.168.103.21/com.junlon.facade.user.service.AdminQueryFacade?application=gw-web-portal&category=configurators&check=false&dubbo=2.5.2&interface=com.junlon.facade.user.service.AdminQueryFacade&methods=list&pid=68984&side=consumer&timestamp=1514515368019, empty://192.168.103.21/com.junlon.facade.user.service.AdminQueryFacade?application=gw-web-portal&category=routers&check=false&dubbo=2.5.2&interface=com.junlon.facade.user.service.AdminQueryFacade&methods=list&pid=68984&side=consumer&timestamp=1514515368019], dubbo version: 2.5.2, current host: 192.168.103.21
[INFO ][20171229 10:42:49,040][ReferenceConfig:423]  [DUBBO] Refer dubbo service com.junlon.facade.user.service.AdminQueryFacade from url zookeeper://127.0.0.1:2181/com.alibaba.dubbo.registry.RegistryService?application=gw-web-portal&check=false&dubbo=2.5.2&interface=com.junlon.facade.user.service.AdminQueryFacade&methods=list&pid=68984&side=consumer&timestamp=1514515368019, dubbo version: 2.5.2, current host: 192.168.103.21
[INFO ][20171229 10:42:49,072][AbstractConfig$1:450]  [DUBBO] Run shutdown hook now., dubbo version: 2.5.2, current host: 192.168.103.21
[INFO ][20171229 10:42:49,087][AbstractApplicationContext:957] Closing org.springframework.context.support.GenericApplicationContext@6dc17b83: startup date [Fri Dec 29 10:42:46 CST 2017]; root of context hierarchy
[INFO ][20171229 10:42:49,087][AbstractRegistryFactory:63]  [DUBBO] Close all registries [zookeeper://127.0.0.1:2181/com.alibaba.dubbo.registry.RegistryService?application=gw-web-portal&dubbo=2.5.2&interface=com.alibaba.dubbo.registry.RegistryService&pid=68984&timestamp=1514515368050], dubbo version: 2.5.2, current host: 192.168.103.21
[INFO ][20171229 10:42:49,087][AbstractRegistry:485]  [DUBBO] Destroy registry:zookeeper://127.0.0.1:2181/com.alibaba.dubbo.registry.RegistryService?application=gw-web-portal&dubbo=2.5.2&interface=com.alibaba.dubbo.registry.RegistryService&pid=68984&timestamp=1514515368050, dubbo version: 2.5.2, current host: 192.168.103.21
[INFO ][20171229 10:42:49,087][AbstractRegistry:312]  [DUBBO] Unregister: consumer://192.168.103.21/com.junlon.facade.user.service.AdminQueryFacade?application=gw-web-portal&category=consumers&check=false&dubbo=2.5.2&interface=com.junlon.facade.user.service.AdminQueryFacade&methods=list&pid=68984&side=consumer&timestamp=1514515368019, dubbo version: 2.5.2, current host: 192.168.103.21
[INFO ][20171229 10:42:49,087][AbstractRegistry:343]  [DUBBO] Unsubscribe: consumer://192.168.103.21/com.junlon.facade.user.service.AdminQueryFacade?application=gw-web-portal&category=providers,configurators,routers&check=false&dubbo=2.5.2&interface=com.junlon.facade.user.service.AdminQueryFacade&methods=list&pid=68984&side=consumer&timestamp=1514515368019, dubbo version: 2.5.2, current host: 192.168.103.21
[INFO ][20171229 10:42:49,118][AbstractRegistry:494]  [DUBBO] Destroy unregister url consumer://192.168.103.21/com.junlon.facade.user.service.AdminQueryFacade?application=gw-web-portal&category=consumers&check=false&dubbo=2.5.2&interface=com.junlon.facade.user.service.AdminQueryFacade&methods=list&pid=68984&side=consumer&timestamp=1514515368019, dubbo version: 2.5.2, current host: 192.168.103.21
[INFO ][20171229 10:42:49,118][ZkEventThread:82] Terminate ZkClient event thread.
[INFO ][20171229 10:42:49,134][ZooKeeper:1326] Session: 0x100b8130f670003 closed
[INFO ][20171229 10:42:49,134][ClientCnxn$EventThread:513] EventThread shut down for session: 0x100b8130f670003
[INFO ][20171229 14:28:18,518][AbstractTestContextBootstrapper:259] Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]
[INFO ][20171229 14:28:18,549][AbstractTestContextBootstrapper:185] Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@5a8806ef, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@6c49835d, org.springframework.test.context.support.DependencyInjectionTestExecutionListener@5e853265, org.springframework.test.context.support.DirtiesContextTestExecutionListener@67205a84, org.springframework.test.context.transaction.TransactionalTestExecutionListener@7d0587f1, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@5d76b067]
[INFO ][20171229 14:28:18,674][XmlBeanDefinitionReader:317] Loading XML bean definitions from class path resource [spring/spring-context.xml]
[INFO ][20171229 14:28:18,962][XmlBeanDefinitionReader:317] Loading XML bean definitions from class path resource [spring/dubbo/dubbo-consumer.xml]
[INFO ][20171229 14:28:19,017][?:?] using logger: com.alibaba.dubbo.common.logger.log4j.Log4jLoggerAdapter
[INFO ][20171229 14:28:19,039][XmlBeanDefinitionReader:317] Loading XML bean definitions from class path resource [spring/dubbo/dubbo-reference-user.xml]
[INFO ][20171229 14:28:19,098][XmlBeanDefinitionReader:317] Loading XML bean definitions from class path resource [spring/spring-amp.xml]
[INFO ][20171229 14:28:19,123][AbstractApplicationContext:577] Refreshing org.springframework.context.support.GenericApplicationContext@4d50efb8: startup date [Fri Dec 29 14:28:19 CST 2017]; root of context hierarchy
[INFO ][20171229 14:28:19,285][PropertiesLoaderSupport:172] Loading properties file from class path resource [public_system.properties]
[DEBUG][20171229 14:28:19,398][ExtensionLoader:943]  [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Protocol$Adpative implements com.alibaba.dubbo.rpc.Protocol {
public void destroy() {throw new UnsupportedOperationException("method public abstract void com.alibaba.dubbo.rpc.Protocol.destroy() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public int getDefaultPort() {throw new UnsupportedOperationException("method public abstract int com.alibaba.dubbo.rpc.Protocol.getDefaultPort() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public com.alibaba.dubbo.rpc.Invoker refer(java.lang.Class arg0, com.alibaba.dubbo.common.URL arg1) throws java.lang.Class {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.refer(arg0, arg1);
}
public com.alibaba.dubbo.rpc.Exporter export(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.Invoker {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.export(arg0);
}
}, dubbo version: 2.5.2, current host: 127.0.0.1
[DEBUG][20171229 14:28:19,526][ExtensionLoader:943]  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Cluster$Adpative implements com.alibaba.dubbo.rpc.cluster.Cluster {
public com.alibaba.dubbo.rpc.Invoker join(com.alibaba.dubbo.rpc.cluster.Directory arg0) throws com.alibaba.dubbo.rpc.cluster.Directory {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("cluster", "failover");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.Cluster) name from url(" + url.toString() + ") use keys([cluster])");
com.alibaba.dubbo.rpc.cluster.Cluster extension = (com.alibaba.dubbo.rpc.cluster.Cluster)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.Cluster.class).getExtension(extName);
return extension.join(arg0);
}
}, dubbo version: 2.5.2, current host: 127.0.0.1
[DEBUG][20171229 14:28:19,560][ExtensionLoader:943]  [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ProxyFactory$Adpative implements com.alibaba.dubbo.rpc.ProxyFactory {
public java.lang.Object getProxy(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.Invoker {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getProxy(arg0);
}
public com.alibaba.dubbo.rpc.Invoker getInvoker(java.lang.Object arg0, java.lang.Class arg1, com.alibaba.dubbo.common.URL arg2) throws java.lang.Object {
if (arg2 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg2;
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getInvoker(arg0, arg1, arg2);
}
}, dubbo version: 2.5.2, current host: 127.0.0.1
[DEBUG][20171229 14:28:19,756][ExtensionLoader:943]  [DUBBO] package com.alibaba.dubbo.registry;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class RegistryFactory$Adpative implements com.alibaba.dubbo.registry.RegistryFactory {
public com.alibaba.dubbo.registry.Registry getRegistry(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.registry.RegistryFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.registry.RegistryFactory extension = (com.alibaba.dubbo.registry.RegistryFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.registry.RegistryFactory.class).getExtension(extName);
return extension.getRegistry(arg0);
}
}, dubbo version: 2.5.2, current host: 127.0.0.1
[DEBUG][20171229 14:28:19,763][ExtensionLoader:943]  [DUBBO] package com.alibaba.dubbo.remoting.zookeeper;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ZookeeperTransporter$Adpative implements com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter {
public com.alibaba.dubbo.remoting.zookeeper.ZookeeperClient connect(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("client", url.getParameter("transporter", "zkclient"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter) name from url(" + url.toString() + ") use keys([client, transporter])");
com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter extension = (com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter.class).getExtension(extName);
return extension.connect(arg0);
}
}, dubbo version: 2.5.2, current host: 127.0.0.1
[INFO ][20171229 14:28:19,794][AbstractRegistry:232]  [DUBBO] Load registry store file C:\Users\junlonlu\.dubbo\dubbo-registry-127.0.0.1.cache, data: {com.junlon.facade.user.service.AdminQueryFacade=empty://192.168.103.21:20880/com.junlon.facade.user.service.AdminQueryFacade?anyhost=true&application=gw-serivce-user&category=configurators&check=false&default.accepts=1000&default.dispatcher=all&default.threadpool=fixed&default.threads=500&default.timeout=30000&dubbo=2.5.2&interface=com.junlon.facade.user.service.AdminQueryFacade&methods=list&pid=62832&retries=0&side=provider&timestamp=1514515530031, com.alibaba.dubbo.monitor.MonitorService=empty://192.168.19.1/com.alibaba.dubbo.monitor.MonitorService?category=configurators&dubbo=2.5.2&interface=com.alibaba.dubbo.monitor.MonitorService&pid=51500&timestamp=1512805752537 empty://192.168.19.1/com.alibaba.dubbo.monitor.MonitorService?category=routers&dubbo=2.5.2&interface=com.alibaba.dubbo.monitor.MonitorService&pid=51500&timestamp=1512805752537 empty://192.168.19.1/com.alibaba.dubbo.monitor.MonitorService?category=providers&dubbo=2.5.2&interface=com.alibaba.dubbo.monitor.MonitorService&pid=51500&timestamp=1512805752537}, dubbo version: 2.5.2, current host: 127.0.0.1
[INFO ][20171229 14:28:19,810][ZkEventThread:64] Starting ZkClient event thread.
[INFO ][20171229 14:28:19,834][Environment:109] Client environment:zookeeper.version=3.5.3-beta-8ce24f9e675cbefffb8f21a47e06b42864475a60, built on 04/03/2017 16:19 GMT
[INFO ][20171229 14:28:19,836][Environment:109] Client environment:host.name=windows10.microdone.cn
[INFO ][20171229 14:28:19,836][Environment:109] Client environment:java.version=1.8.0_131
[INFO ][20171229 14:28:19,837][Environment:109] Client environment:java.vendor=Oracle Corporation
[INFO ][20171229 14:28:19,841][Environment:109] Client environment:java.home=C:\Program Files\Java\jdk1.8.0_131\jre
[INFO ][20171229 14:28:19,845][Environment:109] Client environment:java.class.path=E:\Idea\gw_lulu\web\gw-web-portal\target\test-classes;E:\Idea\gw_lulu\web\gw-web-portal\target\classes;E:\Laboratory\Maven\repository\com\gw\common\gw-common-base\1.0.0-SHAPSHOT\gw-common-base-1.0.0-SHAPSHOT.jar;E:\Laboratory\Maven\repository\com\gw\facade\gw-facade-user\1.0.0-SHAPSHOT\gw-facade-user-1.0.0-SHAPSHOT.jar;E:\Laboratory\Maven\repository\org\springframework\spring-aop\4.2.3.RELEASE\spring-aop-4.2.3.RELEASE.jar;E:\Laboratory\Maven\repository\org\springframework\spring-aspects\4.2.3.RELEASE\spring-aspects-4.2.3.RELEASE.jar;E:\Laboratory\Maven\repository\org\springframework\spring-beans\4.2.3.RELEASE\spring-beans-4.2.3.RELEASE.jar;E:\Laboratory\Maven\repository\org\springframework\spring-context\4.2.3.RELEASE\spring-context-4.2.3.RELEASE.jar;E:\Laboratory\Maven\repository\org\springframework\spring-context-support\4.2.3.RELEASE\spring-context-support-4.2.3.RELEASE.jar;E:\Laboratory\Maven\repository\org\springframework\spring-core\4.2.3.RELEASE\spring-core-4.2.3.RELEASE.jar;E:\Laboratory\Maven\repository\org\springframework\spring-expression\4.2.3.RELEASE\spring-expression-4.2.3.RELEASE.jar;E:\Laboratory\Maven\repository\org\springframework\spring-instrument\4.2.3.RELEASE\spring-instrument-4.2.3.RELEASE.jar;E:\Laboratory\Maven\repository\org\springframework\spring-instrument-tomcat\4.2.3.RELEASE\spring-instrument-tomcat-4.2.3.RELEASE.jar;E:\Laboratory\Maven\repository\org\springframework\data\spring-data-jpa\1.9.4.RELEASE\spring-data-jpa-1.9.4.RELEASE.jar;E:\Laboratory\Maven\repository\org\springframework\data\spring-data-commons\1.11.4.RELEASE\spring-data-commons-1.11.4.RELEASE.jar;E:\Laboratory\Maven\repository\org\slf4j\jcl-over-slf4j\1.7.13\jcl-over-slf4j-1.7.13.jar;E:\Laboratory\Maven\repository\org\springframework\spring-jms\4.2.3.RELEASE\spring-jms-4.2.3.RELEASE.jar;E:\Laboratory\Maven\repository\org\springframework\spring-messaging\4.2.3.RELEASE\spring-messaging-4.2.3.RELEASE.jar;E:\Laboratory\Maven\repository\org\springframework\spring-orm\4.2.3.RELEASE\spring-orm-4.2.3.RELEASE.jar;E:\Laboratory\Maven\repository\org\springframework\spring-jdbc\4.2.3.RELEASE\spring-jdbc-4.2.3.RELEASE.jar;E:\Laboratory\Maven\repository\org\springframework\spring-oxm\4.2.3.RELEASE\spring-oxm-4.2.3.RELEASE.jar;E:\Laboratory\Maven\repository\org\springframework\spring-tx\4.2.3.RELEASE\spring-tx-4.2.3.RELEASE.jar;E:\Laboratory\Maven\repository\org\springframework\spring-web\4.2.3.RELEASE\spring-web-4.2.3.RELEASE.jar;E:\Laboratory\Maven\repository\org\springframework\spring-webmvc\4.2.3.RELEASE\spring-webmvc-4.2.3.RELEASE.jar;E:\Laboratory\Maven\repository\org\springframework\spring-webmvc-portlet\4.2.3.RELEASE\spring-webmvc-portlet-4.2.3.RELEASE.jar;E:\Laboratory\Maven\repository\org\springframework\spring-test\4.2.3.RELEASE\spring-test-4.2.3.RELEASE.jar;E:\Laboratory\Maven\repository\org\springframework\ws\spring-ws-core\2.3.0.RELEASE\spring-ws-core-2.3.0.RELEASE.jar;E:\Laboratory\Maven\repository\commons-logging\commons-logging\1.1.3\commons-logging-1.1.3.jar;E:\Laboratory\Maven\repository\org\springframework\ws\spring-xml\2.3.0.RELEASE\spring-xml-2.3.0.RELEASE.jar;E:\Laboratory\Maven\repository\org\mybatis\mybatis\3.4.0\mybatis-3.4.0.jar;E:\Laboratory\Maven\repository\org\mybatis\mybatis-spring\1.3.0\mybatis-spring-1.3.0.jar;E:\Laboratory\Maven\repository\org\mybatis\generator\mybatis-generator-core\1.3.5\mybatis-generator-core-1.3.5.jar;E:\Laboratory\Maven\repository\mysql\mysql-connector-java\5.1.9\mysql-connector-java-5.1.9.jar;E:\Laboratory\Maven\repository\com\alibaba\druid\1.0.9\druid-1.0.9.jar;C:\Program Files\Java\jdk1.8.0_131\jre\..\lib\jconsole.jar;C:\Program Files\Java\jdk1.8.0_131\jre\..\lib\tools.jar;E:\Laboratory\Maven\repository\org\jboss\netty\netty\3.2.5.Final\netty-3.2.5.Final.jar;E:\Laboratory\Maven\repository\com\alibaba\dubbo\2.5.2\dubbo-2.5.2.jar;E:\Laboratory\Maven\repository\org\springframework\spring\2.5.6.SEC03\spring-2.5.6.SEC03.jar;E:\Laboratory\Maven\repository\org\javassist\javassist\3.15.0-GA\javassist-3.15.0-GA.jar;E:\Laboratory\Maven\repository\org\apache\zookeeper\zookeeper\3.5.3-beta\zookeeper-3.5.3-beta.jar;E:\Laboratory\Maven\repository\log4j\log4j\1.2.17\log4j-1.2.17.jar;E:\Laboratory\Maven\repository\io\netty\netty\3.10.5.Final\netty-3.10.5.Final.jar;E:\Laboratory\Maven\repository\com\101tec\zkclient\0.9\zkclient-0.9.jar;E:\Laboratory\Maven\repository\org\apache\activemq\activemq-all\5.8.0\activemq-all-5.8.0.jar;E:\Laboratory\Maven\repository\org\apache\activemq\activemq-amqp\5.8.0\activemq-amqp-5.8.0.jar;E:\Laboratory\Maven\repository\org\apache\activemq\activemq-broker\5.8.0\activemq-broker-5.8.0.jar;E:\Laboratory\Maven\repository\org\apache\activemq\activemq-openwire-legacy\5.8.0\activemq-openwire-legacy-5.8.0.jar;E:\Laboratory\Maven\repository\org\fusesource\hawtbuf\hawtbuf\1.9\hawtbuf-1.9.jar;E:\Laboratory\Maven\repository\org\apache\activemq\activemq-pool\5.8.0\activemq-pool-5.8.0.jar;E:\Laboratory\Maven\repository\org\apache\activemq\activemq-client\5.8.0\activemq-client-5.8.0.jar;E:\Laboratory\Maven\repository\org\apache\geronimo\specs\geronimo-jms_1.1_spec\1.1.1\geronimo-jms_1.1_spec-1.1.1.jar;E:\Laboratory\Maven\repository\org\apache\geronimo\specs\geronimo-j2ee-management_1.1_spec\1.0.1\geronimo-j2ee-management_1.1_spec-1.0.1.jar;E:\Laboratory\Maven\repository\org\apache\geronimo\specs\geronimo-jta_1.0.1B_spec\1.0.1\geronimo-jta_1.0.1B_spec-1.0.1.jar;E:\Laboratory\Maven\repository\commons-pool\commons-pool\1.6\commons-pool-1.6.jar;E:\Laboratory\Maven\repository\quartz\quartz\1.6.0\quartz-1.6.0.jar;E:\Laboratory\Maven\repository\org\elasticsearch\client\rest\5.0.0\rest-5.0.0.jar;E:\Laboratory\Maven\repository\org\apache\httpcomponents\httpclient\4.5.2\httpclient-4.5.2.jar;E:\Laboratory\Maven\repository\org\apache\httpcomponents\httpcore\4.4.5\httpcore-4.4.5.jar;E:\Laboratory\Maven\repository\org\apache\httpcomponents\httpasyncclient\4.1.2\httpasyncclient-4.1.2.jar;E:\Laboratory\Maven\repository\org\apache\httpcomponents\httpcore-nio\4.4.5\httpcore-nio-4.4.5.jar;E:\Laboratory\Maven\repository\org\aspectj\aspectjweaver\1.5.4\aspectjweaver-1.5.4.jar;E:\Laboratory\Maven\repository\org\aspectj\aspectjrt\1.5.4\aspectjrt-1.5.4.jar;E:\Laboratory\Maven\repository\junit\junit\4.12\junit-4.12.jar;E:\Laboratory\Maven\repository\org\hamcrest\hamcrest-core\1.3\hamcrest-core-1.3.jar;E:\Laboratory\Maven\repository\javax\servlet\javax.servlet-api\3.1.0\javax.servlet-api-3.1.0.jar;E:\Laboratory\Maven\repository\javax\servlet\jsp\jsp-api\2.2\jsp-api-2.2.jar;E:\Laboratory\Maven\repository\javax\servlet\jstl\1.2\jstl-1.2.jar;E:\Laboratory\Maven\repository\net\sf\jxls\jxls-core\1.0.6\jxls-core-1.0.6.jar;E:\Laboratory\Maven\repository\commons-collections\commons-collections\3.2.1\commons-collections-3.2.1.jar;E:\Laboratory\Maven\repository\org\apache\commons\commons-jexl\2.0.1\commons-jexl-2.0.1.jar;E:\Laboratory\Maven\repository\org\apache\logging\log4j\log4j-api\2.8.2\log4j-api-2.8.2.jar;E:\Laboratory\Maven\repository\org\apache\logging\log4j\log4j-core\2.8.2\log4j-core-2.8.2.jar;E:\Laboratory\Maven\repository\org\slf4j\slf4j-api\1.7.5\slf4j-api-1.7.5.jar;E:\Laboratory\Maven\repository\org\slf4j\slf4j-log4j12\1.7.5\slf4j-log4j12-1.7.5.jar;E:\Laboratory\Maven\repository\org\apache\logging\log4j\log4j-slf4j-impl\2.8.2\log4j-slf4j-impl-2.8.2.jar;E:\Laboratory\Maven\repository\com\google\zxing\core\3.0.0\core-3.0.0.jar;E:\Laboratory\Maven\repository\com\google\zxing\javase\3.0.0\javase-3.0.0.jar;E:\Laboratory\Maven\repository\com\alibaba\fastjson\1.2.6\fastjson-1.2.6.jar;E:\Laboratory\Maven\repository\org\codehaus\jackson\jackson-mapper-asl\1.9.13\jackson-mapper-asl-1.9.13.jar;E:\Laboratory\Maven\repository\org\codehaus\jackson\jackson-core-asl\1.9.13\jackson-core-asl-1.9.13.jar;E:\Laboratory\Maven\repository\org\apache\commons\commons-lang3\3.4\commons-lang3-3.4.jar;E:\Laboratory\Maven\repository\commons-fileupload\commons-fileupload\1.3.1\commons-fileupload-1.3.1.jar;E:\Laboratory\Maven\repository\commons-io\commons-io\2.4\commons-io-2.4.jar;E:\Laboratory\Maven\repository\commons-codec\commons-codec\1.10\commons-codec-1.10.jar;E:\Laboratory\Maven\repository\commons-beanutils\commons-beanutils\1.9.2\commons-beanutils-1.9.2.jar;E:\Laboratory\Maven\repository\org\apache\commons\commons-collections4\4.1\commons-collections4-4.1.jar;E:\Laboratory\Maven\repository\aopalliance\aopalliance\1.0\aopalliance-1.0.jar;E:\Laboratory\Maven\repository\commons-cli\commons-cli\1.2\commons-cli-1.2.jar;E:\Laboratory\Maven\repository\ognl\ognl\3.1.14\ognl-3.1.14.jar;E:\Laboratory\Maven\repository\commons-net\commons-net\3.2\commons-net-3.2.jar;E:\Laboratory\Maven\repository\org\apache\poi\poi\3.15\poi-3.15.jar;E:\Laboratory\Maven\repository\org\apache\poi\poi-ooxml\3.15\poi-ooxml-3.15.jar;E:\Laboratory\Maven\repository\org\apache\poi\poi-ooxml-schemas\3.15\poi-ooxml-schemas-3.15.jar;E:\Laboratory\Maven\repository\org\apache\xmlbeans\xmlbeans\2.6.0\xmlbeans-2.6.0.jar;E:\Laboratory\Maven\repository\stax\stax-api\1.0.1\stax-api-1.0.1.jar;E:\Laboratory\Maven\repository\com\github\virtuald\curvesapi\1.04\curvesapi-1.04.jar;E:\Laboratory\Maven\repository\javax\jms\jms\1.1\jms-1.1.jar;
[INFO ][20171229 14:28:19,847][Environment:109] Client environment:java.library.path=C:\Program Files\Java\jdk1.8.0_131\jre\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\ProgramData\Oracle\Java\javapath;C:\Program Files (x86)\Intel\iCLS Client\;C:\Program Files\Intel\iCLS Client\;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\Program Files\Java\jdk1.8.0_131\bin;D:\Git\Git\cmd;D:\Mysql\mysql-5.6.36-winx64\bin;D:\TortoiseGit\bin;D:\TortoiseSVN\bin;D:\Nodejs\;C:\Users\junlonlu\AppData\Local\Microsoft\WindowsApps;D:\Visual Studio Code\Microsoft VS Code\bin;C:\Users\junlonlu\AppData\Roaming\npm;E:\Laboratory\Maven\apache-maven-3.5.2\bin;.
[INFO ][20171229 14:28:19,848][Environment:109] Client environment:java.io.tmpdir=C:\Users\junlonlu\AppData\Local\Temp\
[INFO ][20171229 14:28:19,849][Environment:109] Client environment:java.compiler=<NA>
[INFO ][20171229 14:28:19,849][Environment:109] Client environment:os.name=Windows 10
[INFO ][20171229 14:28:19,850][Environment:109] Client environment:os.arch=amd64
[INFO ][20171229 14:28:19,850][Environment:109] Client environment:os.version=10.0
[INFO ][20171229 14:28:19,850][Environment:109] Client environment:user.name=junlonlu
[INFO ][20171229 14:28:19,850][Environment:109] Client environment:user.home=C:\Users\junlonlu
[INFO ][20171229 14:28:19,851][Environment:109] Client environment:user.dir=E:\Idea\gw_lulu\web\gw-web-portal
[INFO ][20171229 14:28:19,851][Environment:109] Client environment:os.memory.free=106MB
[INFO ][20171229 14:28:19,851][Environment:109] Client environment:os.memory.max=1799MB
[INFO ][20171229 14:28:19,851][Environment:109] Client environment:os.memory.total=123MB
[INFO ][20171229 14:28:19,854][ZooKeeper:865] Initiating client connection, connectString=127.0.0.1:2181 sessionTimeout=30000 watcher=org.I0Itec.zkclient.ZkClient@1cb346ea
[INFO ][20171229 14:28:20,459][ClientCnxnSocket:236] jute.maxbuffer value is 4194304 Bytes
[INFO ][20171229 14:28:20,463][ZkClient:935] Waiting for keeper state SyncConnected
[INFO ][20171229 14:28:20,478][ClientCnxn$SendThread:1113] Opening socket connection to server 127.0.0.1/127.0.0.1:2181. Will not attempt to authenticate using SASL (unknown error)
[INFO ][20171229 14:28:20,478][ClientCnxn$SendThread:948] Socket connection established, initiating session, client: /127.0.0.1:55942, server: 127.0.0.1/127.0.0.1:2181
[INFO ][20171229 14:28:20,619][ClientCnxn$SendThread:1381] Session establishment complete on server 127.0.0.1/127.0.0.1:2181, sessionid = 0x100b8204d570000, negotiated timeout = 30000
[INFO ][20171229 14:28:20,619][ZkClient:712] zookeeper state changed (SyncConnected)
[DEBUG][20171229 14:28:20,697][ExtensionLoader:943]  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class RouterFactory$Adpative implements com.alibaba.dubbo.rpc.cluster.RouterFactory {
public com.alibaba.dubbo.rpc.cluster.Router getRouter(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getProtocol();
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.RouterFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.cluster.RouterFactory extension = (com.alibaba.dubbo.rpc.cluster.RouterFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.RouterFactory.class).getExtension(extName);
return extension.getRouter(arg0);
}
}, dubbo version: 2.5.2, current host: 127.0.0.1
[DEBUG][20171229 14:28:20,744][ExtensionLoader:943]  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ConfiguratorFactory$Adpative implements com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory {
public com.alibaba.dubbo.rpc.cluster.Configurator getConfigurator(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getProtocol();
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory extension = (com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory.class).getExtension(extName);
return extension.getConfigurator(arg0);
}
}, dubbo version: 2.5.2, current host: 127.0.0.1
[INFO ][20171229 14:28:20,800][AbstractRegistry:302]  [DUBBO] Register: consumer://192.168.103.21/com.junlon.facade.user.service.AdminQueryFacade?application=gw-web-portal&category=consumers&check=false&dubbo=2.5.2&interface=com.junlon.facade.user.service.AdminQueryFacade&methods=list&pid=1432&revision=1.0.0-SHAPSHOT&side=consumer&timestamp=1514528899677, dubbo version: 2.5.2, current host: 192.168.103.21
[INFO ][20171229 14:28:21,114][AbstractRegistry:325]  [DUBBO] Subscribe: consumer://192.168.103.21/com.junlon.facade.user.service.AdminQueryFacade?application=gw-web-portal&category=providers,configurators,routers&check=false&dubbo=2.5.2&interface=com.junlon.facade.user.service.AdminQueryFacade&methods=list&pid=1432&revision=1.0.0-SHAPSHOT&side=consumer&timestamp=1514528899677, dubbo version: 2.5.2, current host: 192.168.103.21
[INFO ][20171229 14:28:21,379][AbstractRegistry:422]  [DUBBO] Notify urls for subscribe url consumer://192.168.103.21/com.junlon.facade.user.service.AdminQueryFacade?application=gw-web-portal&category=providers,configurators,routers&check=false&dubbo=2.5.2&interface=com.junlon.facade.user.service.AdminQueryFacade&methods=list&pid=1432&revision=1.0.0-SHAPSHOT&side=consumer&timestamp=1514528899677, urls: [empty://192.168.103.21/com.junlon.facade.user.service.AdminQueryFacade?application=gw-web-portal&category=providers&check=false&dubbo=2.5.2&interface=com.junlon.facade.user.service.AdminQueryFacade&methods=list&pid=1432&revision=1.0.0-SHAPSHOT&side=consumer&timestamp=1514528899677, empty://192.168.103.21/com.junlon.facade.user.service.AdminQueryFacade?application=gw-web-portal&category=configurators&check=false&dubbo=2.5.2&interface=com.junlon.facade.user.service.AdminQueryFacade&methods=list&pid=1432&revision=1.0.0-SHAPSHOT&side=consumer&timestamp=1514528899677, empty://192.168.103.21/com.junlon.facade.user.service.AdminQueryFacade?application=gw-web-portal&category=routers&check=false&dubbo=2.5.2&interface=com.junlon.facade.user.service.AdminQueryFacade&methods=list&pid=1432&revision=1.0.0-SHAPSHOT&side=consumer&timestamp=1514528899677], dubbo version: 2.5.2, current host: 192.168.103.21
[INFO ][20171229 14:28:21,379][ReferenceConfig:423]  [DUBBO] Refer dubbo service com.junlon.facade.user.service.AdminQueryFacade from url zookeeper://127.0.0.1:2181/com.alibaba.dubbo.registry.RegistryService?application=gw-web-portal&check=false&dubbo=2.5.2&interface=com.junlon.facade.user.service.AdminQueryFacade&methods=list&pid=1432&revision=1.0.0-SHAPSHOT&side=consumer&timestamp=1514528899677, dubbo version: 2.5.2, current host: 192.168.103.21
[INFO ][20171229 14:28:21,411][AbstractConfig$1:450]  [DUBBO] Run shutdown hook now., dubbo version: 2.5.2, current host: 192.168.103.21
[INFO ][20171229 14:28:21,411][AbstractApplicationContext:957] Closing org.springframework.context.support.GenericApplicationContext@4d50efb8: startup date [Fri Dec 29 14:28:19 CST 2017]; root of context hierarchy
[INFO ][20171229 14:28:21,411][AbstractRegistryFactory:63]  [DUBBO] Close all registries [zookeeper://127.0.0.1:2181/com.alibaba.dubbo.registry.RegistryService?application=gw-web-portal&dubbo=2.5.2&interface=com.alibaba.dubbo.registry.RegistryService&pid=1432&timestamp=1514528899746], dubbo version: 2.5.2, current host: 192.168.103.21
[INFO ][20171229 14:28:21,411][AbstractRegistry:343]  [DUBBO] Unsubscribe: consumer://192.168.103.21/com.junlon.facade.user.service.AdminQueryFacade?application=gw-web-portal&category=providers,configurators,routers&check=false&dubbo=2.5.2&interface=com.junlon.facade.user.service.AdminQueryFacade&methods=list&pid=1432&revision=1.0.0-SHAPSHOT&side=consumer&timestamp=1514528899677, dubbo version: 2.5.2, current host: 192.168.103.21
[INFO ][20171229 14:28:21,411][AbstractRegistry:485]  [DUBBO] Destroy registry:zookeeper://127.0.0.1:2181/com.alibaba.dubbo.registry.RegistryService?application=gw-web-portal&dubbo=2.5.2&interface=com.alibaba.dubbo.registry.RegistryService&pid=1432&timestamp=1514528899746, dubbo version: 2.5.2, current host: 192.168.103.21
[INFO ][20171229 14:28:21,411][AbstractRegistry:312]  [DUBBO] Unregister: consumer://192.168.103.21/com.junlon.facade.user.service.AdminQueryFacade?application=gw-web-portal&category=consumers&check=false&dubbo=2.5.2&interface=com.junlon.facade.user.service.AdminQueryFacade&methods=list&pid=1432&revision=1.0.0-SHAPSHOT&side=consumer&timestamp=1514528899677, dubbo version: 2.5.2, current host: 192.168.103.21
[INFO ][20171229 14:28:21,426][AbstractRegistry:494]  [DUBBO] Destroy unregister url consumer://192.168.103.21/com.junlon.facade.user.service.AdminQueryFacade?application=gw-web-portal&category=consumers&check=false&dubbo=2.5.2&interface=com.junlon.facade.user.service.AdminQueryFacade&methods=list&pid=1432&revision=1.0.0-SHAPSHOT&side=consumer&timestamp=1514528899677, dubbo version: 2.5.2, current host: 192.168.103.21
[INFO ][20171229 14:28:21,426][ZkEventThread:82] Terminate ZkClient event thread.
[INFO ][20171229 14:28:21,458][ZooKeeper:1326] Session: 0x100b8204d570000 closed
[INFO ][20171229 14:28:21,458][ClientCnxn$EventThread:513] EventThread shut down for session: 0x100b8204d570000
[INFO ][20171229 14:33:14,043][AbstractTestContextBootstrapper:259] Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]
[INFO ][20171229 14:33:14,066][AbstractTestContextBootstrapper:185] Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@47d90b9e, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@1184ab05, org.springframework.test.context.support.DependencyInjectionTestExecutionListener@3aefe5e5, org.springframework.test.context.support.DirtiesContextTestExecutionListener@149e0f5d, org.springframework.test.context.transaction.TransactionalTestExecutionListener@1b1473ab, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@2f7c2f4f]
[INFO ][20171229 14:33:14,262][XmlBeanDefinitionReader:317] Loading XML bean definitions from class path resource [spring/spring-context.xml]
[INFO ][20171229 14:33:14,754][XmlBeanDefinitionReader:317] Loading XML bean definitions from class path resource [spring/dubbo/dubbo-consumer.xml]
[INFO ][20171229 14:33:14,886][?:?] using logger: com.alibaba.dubbo.common.logger.log4j.Log4jLoggerAdapter
[INFO ][20171229 14:33:14,915][XmlBeanDefinitionReader:317] Loading XML bean definitions from class path resource [spring/dubbo/dubbo-reference-user.xml]
[INFO ][20171229 14:33:14,999][XmlBeanDefinitionReader:317] Loading XML bean definitions from class path resource [spring/spring-amp.xml]
[INFO ][20171229 14:33:15,045][AbstractApplicationContext:577] Refreshing org.springframework.context.support.GenericApplicationContext@6dc17b83: startup date [Fri Dec 29 14:33:15 CST 2017]; root of context hierarchy
[INFO ][20171229 14:33:15,460][PropertiesLoaderSupport:172] Loading properties file from class path resource [public_system.properties]
[DEBUG][20171229 14:33:15,739][ExtensionLoader:943]  [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Protocol$Adpative implements com.alibaba.dubbo.rpc.Protocol {
public void destroy() {throw new UnsupportedOperationException("method public abstract void com.alibaba.dubbo.rpc.Protocol.destroy() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public int getDefaultPort() {throw new UnsupportedOperationException("method public abstract int com.alibaba.dubbo.rpc.Protocol.getDefaultPort() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public com.alibaba.dubbo.rpc.Exporter export(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.Invoker {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.export(arg0);
}
public com.alibaba.dubbo.rpc.Invoker refer(java.lang.Class arg0, com.alibaba.dubbo.common.URL arg1) throws java.lang.Class {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.refer(arg0, arg1);
}
}, dubbo version: 2.5.2, current host: 127.0.0.1
[DEBUG][20171229 14:33:15,993][ExtensionLoader:943]  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Cluster$Adpative implements com.alibaba.dubbo.rpc.cluster.Cluster {
public com.alibaba.dubbo.rpc.Invoker join(com.alibaba.dubbo.rpc.cluster.Directory arg0) throws com.alibaba.dubbo.rpc.cluster.Directory {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("cluster", "failover");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.Cluster) name from url(" + url.toString() + ") use keys([cluster])");
com.alibaba.dubbo.rpc.cluster.Cluster extension = (com.alibaba.dubbo.rpc.cluster.Cluster)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.Cluster.class).getExtension(extName);
return extension.join(arg0);
}
}, dubbo version: 2.5.2, current host: 127.0.0.1
[DEBUG][20171229 14:33:16,004][ExtensionLoader:943]  [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ProxyFactory$Adpative implements com.alibaba.dubbo.rpc.ProxyFactory {
public java.lang.Object getProxy(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.Invoker {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getProxy(arg0);
}
public com.alibaba.dubbo.rpc.Invoker getInvoker(java.lang.Object arg0, java.lang.Class arg1, com.alibaba.dubbo.common.URL arg2) throws java.lang.Object {
if (arg2 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg2;
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getInvoker(arg0, arg1, arg2);
}
}, dubbo version: 2.5.2, current host: 127.0.0.1
[DEBUG][20171229 14:33:16,310][ExtensionLoader:943]  [DUBBO] package com.alibaba.dubbo.registry;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class RegistryFactory$Adpative implements com.alibaba.dubbo.registry.RegistryFactory {
public com.alibaba.dubbo.registry.Registry getRegistry(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.registry.RegistryFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.registry.RegistryFactory extension = (com.alibaba.dubbo.registry.RegistryFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.registry.RegistryFactory.class).getExtension(extName);
return extension.getRegistry(arg0);
}
}, dubbo version: 2.5.2, current host: 127.0.0.1
[DEBUG][20171229 14:33:16,333][ExtensionLoader:943]  [DUBBO] package com.alibaba.dubbo.remoting.zookeeper;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ZookeeperTransporter$Adpative implements com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter {
public com.alibaba.dubbo.remoting.zookeeper.ZookeeperClient connect(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("client", url.getParameter("transporter", "zkclient"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter) name from url(" + url.toString() + ") use keys([client, transporter])");
com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter extension = (com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter.class).getExtension(extName);
return extension.connect(arg0);
}
}, dubbo version: 2.5.2, current host: 127.0.0.1
[INFO ][20171229 14:33:16,344][AbstractRegistry:232]  [DUBBO] Load registry store file C:\Users\junlonlu\.dubbo\dubbo-registry-127.0.0.1.cache, data: {com.junlon.facade.user.service.AdminQueryFacade=empty://192.168.103.21/com.junlon.facade.user.service.AdminQueryFacade?application=gw-web-portal&category=configurators&check=false&dubbo=2.5.2&interface=com.junlon.facade.user.service.AdminQueryFacade&methods=list&pid=1432&revision=1.0.0-SHAPSHOT&side=consumer&timestamp=1514528899677 empty://192.168.103.21/com.junlon.facade.user.service.AdminQueryFacade?application=gw-web-portal&category=routers&check=false&dubbo=2.5.2&interface=com.junlon.facade.user.service.AdminQueryFacade&methods=list&pid=1432&revision=1.0.0-SHAPSHOT&side=consumer&timestamp=1514528899677 empty://192.168.103.21/com.junlon.facade.user.service.AdminQueryFacade?application=gw-web-portal&category=providers&check=false&dubbo=2.5.2&interface=com.junlon.facade.user.service.AdminQueryFacade&methods=list&pid=1432&revision=1.0.0-SHAPSHOT&side=consumer&timestamp=1514528899677, com.alibaba.dubbo.monitor.MonitorService=empty://192.168.19.1/com.alibaba.dubbo.monitor.MonitorService?category=configurators&dubbo=2.5.2&interface=com.alibaba.dubbo.monitor.MonitorService&pid=51500&timestamp=1512805752537 empty://192.168.19.1/com.alibaba.dubbo.monitor.MonitorService?category=routers&dubbo=2.5.2&interface=com.alibaba.dubbo.monitor.MonitorService&pid=51500&timestamp=1512805752537 empty://192.168.19.1/com.alibaba.dubbo.monitor.MonitorService?category=providers&dubbo=2.5.2&interface=com.alibaba.dubbo.monitor.MonitorService&pid=51500&timestamp=1512805752537}, dubbo version: 2.5.2, current host: 127.0.0.1
[INFO ][20171229 14:33:16,376][ZkEventThread:64] Starting ZkClient event thread.
[INFO ][20171229 14:33:16,376][Environment:109] Client environment:zookeeper.version=3.5.3-beta-8ce24f9e675cbefffb8f21a47e06b42864475a60, built on 04/03/2017 16:19 GMT
[INFO ][20171229 14:33:16,376][Environment:109] Client environment:host.name=windows10.microdone.cn
[INFO ][20171229 14:33:16,376][Environment:109] Client environment:java.version=1.8.0_131
[INFO ][20171229 14:33:16,391][Environment:109] Client environment:java.vendor=Oracle Corporation
[INFO ][20171229 14:33:16,391][Environment:109] Client environment:java.home=C:\Program Files\Java\jdk1.8.0_131\jre
[INFO ][20171229 14:33:16,391][Environment:109] Client environment:java.class.path=D:\Idea\IntelliJ IDEA 2017.1.1\lib\idea_rt.jar;D:\Idea\IntelliJ IDEA 2017.1.1\plugins\junit\lib\junit-rt.jar;C:\Program Files\Java\jdk1.8.0_131\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.8.0_131\jre\lib\deploy.jar;C:\Program Files\Java\jdk1.8.0_131\jre\lib\ext\access-bridge-64.jar;C:\Program Files\Java\jdk1.8.0_131\jre\lib\ext\cldrdata.jar;C:\Program Files\Java\jdk1.8.0_131\jre\lib\ext\dnsns.jar;C:\Program Files\Java\jdk1.8.0_131\jre\lib\ext\jaccess.jar;C:\Program Files\Java\jdk1.8.0_131\jre\lib\ext\jfxrt.jar;C:\Program Files\Java\jdk1.8.0_131\jre\lib\ext\localedata.jar;C:\Program Files\Java\jdk1.8.0_131\jre\lib\ext\nashorn.jar;C:\Program Files\Java\jdk1.8.0_131\jre\lib\ext\sunec.jar;C:\Program Files\Java\jdk1.8.0_131\jre\lib\ext\sunjce_provider.jar;C:\Program Files\Java\jdk1.8.0_131\jre\lib\ext\sunmscapi.jar;C:\Program Files\Java\jdk1.8.0_131\jre\lib\ext\sunpkcs11.jar;C:\Program Files\Java\jdk1.8.0_131\jre\lib\ext\zipfs.jar;C:\Program Files\Java\jdk1.8.0_131\jre\lib\javaws.jar;C:\Program Files\Java\jdk1.8.0_131\jre\lib\jce.jar;C:\Program Files\Java\jdk1.8.0_131\jre\lib\jfr.jar;C:\Program Files\Java\jdk1.8.0_131\jre\lib\jfxswt.jar;C:\Program Files\Java\jdk1.8.0_131\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.8.0_131\jre\lib\management-agent.jar;C:\Program Files\Java\jdk1.8.0_131\jre\lib\plugin.jar;C:\Program Files\Java\jdk1.8.0_131\jre\lib\resources.jar;C:\Program Files\Java\jdk1.8.0_131\jre\lib\rt.jar;D:\Idea\IntelliJ IDEA 2017.1.1\lib\junit.jar;D:\Idea\IntelliJ IDEA 2017.1.1\lib\junit-4.12.jar;D:\Idea\IntelliJ IDEA 2017.1.1\lib\hamcrest-core-1.3.jar;E:\Idea\gw_lulu\web\gw-web-portal\target\test-classes;E:\Idea\gw_lulu\web\gw-web-portal\target\classes;E:\Idea\gw_lulu\common\gw-common-base\target\classes;E:\Idea\gw_lulu\facade\gw-facade-user\target\classes;E:\Laboratory\Maven\repository\org\springframework\spring-aop\4.2.3.RELEASE\spring-aop-4.2.3.RELEASE.jar;E:\Laboratory\Maven\repository\org\springframework\spring-aspects\4.2.3.RELEASE\spring-aspects-4.2.3.RELEASE.jar;E:\Laboratory\Maven\repository\org\springframework\spring-beans\4.2.3.RELEASE\spring-beans-4.2.3.RELEASE.jar;E:\Laboratory\Maven\repository\org\springframework\spring-context\4.2.3.RELEASE\spring-context-4.2.3.RELEASE.jar;E:\Laboratory\Maven\repository\org\springframework\spring-context-support\4.2.3.RELEASE\spring-context-support-4.2.3.RELEASE.jar;E:\Laboratory\Maven\repository\org\springframework\spring-core\4.2.3.RELEASE\spring-core-4.2.3.RELEASE.jar;E:\Laboratory\Maven\repository\org\springframework\spring-expression\4.2.3.RELEASE\spring-expression-4.2.3.RELEASE.jar;E:\Laboratory\Maven\repository\org\springframework\spring-instrument\4.2.3.RELEASE\spring-instrument-4.2.3.RELEASE.jar;E:\Laboratory\Maven\repository\org\springframework\spring-instrument-tomcat\4.2.3.RELEASE\spring-instrument-tomcat-4.2.3.RELEASE.jar;E:\Laboratory\Maven\repository\org\springframework\data\spring-data-jpa\1.9.4.RELEASE\spring-data-jpa-1.9.4.RELEASE.jar;E:\Laboratory\Maven\repository\org\springframework\data\spring-data-commons\1.11.4.RELEASE\spring-data-commons-1.11.4.RELEASE.jar;E:\Laboratory\Maven\repository\org\slf4j\jcl-over-slf4j\1.7.13\jcl-over-slf4j-1.7.13.jar;E:\Laboratory\Maven\repository\org\springframework\spring-jms\4.2.3.RELEASE\spring-jms-4.2.3.RELEASE.jar;E:\Laboratory\Maven\repository\org\springframework\spring-messaging\4.2.3.RELEASE\spring-messaging-4.2.3.RELEASE.jar;E:\Laboratory\Maven\repository\org\springframework\spring-orm\4.2.3.RELEASE\spring-orm-4.2.3.RELEASE.jar;E:\Laboratory\Maven\repository\org\springframework\spring-jdbc\4.2.3.RELEASE\spring-jdbc-4.2.3.RELEASE.jar;E:\Laboratory\Maven\repository\org\springframework\spring-oxm\4.2.3.RELEASE\spring-oxm-4.2.3.RELEASE.jar;E:\Laboratory\Maven\repository\org\springframework\spring-tx\4.2.3.RELEASE\spring-tx-4.2.3.RELEASE.jar;E:\Laboratory\Maven\repository\org\springframework\spring-web\4.2.3.RELEASE\spring-web-4.2.3.RELEASE.jar;E:\Laboratory\Maven\repository\org\springframework\spring-webmvc\4.2.3.RELEASE\spring-webmvc-4.2.3.RELEASE.jar;E:\Laboratory\Maven\repository\org\springframework\spring-webmvc-portlet\4.2.3.RELEASE\spring-webmvc-portlet-4.2.3.RELEASE.jar;E:\Laboratory\Maven\repository\org\springframework\spring-test\4.2.3.RELEASE\spring-test-4.2.3.RELEASE.jar;E:\Laboratory\Maven\repository\org\springframework\ws\spring-ws-core\2.3.0.RELEASE\spring-ws-core-2.3.0.RELEASE.jar;E:\Laboratory\Maven\repository\commons-logging\commons-logging\1.1.3\commons-logging-1.1.3.jar;E:\Laboratory\Maven\repository\org\springframework\ws\spring-xml\2.3.0.RELEASE\spring-xml-2.3.0.RELEASE.jar;E:\Laboratory\Maven\repository\org\mybatis\mybatis\3.4.0\mybatis-3.4.0.jar;E:\Laboratory\Maven\repository\org\mybatis\mybatis-spring\1.3.0\mybatis-spring-1.3.0.jar;E:\Laboratory\Maven\repository\org\mybatis\generator\mybatis-generator-core\1.3.5\mybatis-generator-core-1.3.5.jar;E:\Laboratory\Maven\repository\mysql\mysql-connector-java\5.1.9\mysql-connector-java-5.1.9.jar;E:\Laboratory\Maven\repository\com\alibaba\druid\1.0.9\druid-1.0.9.jar;C:\Program Files\Java\jdk1.8.0_131\lib\jconsole.jar;C:\Program Files\Java\jdk1.8.0_131\lib\tools.jar;E:\Laboratory\Maven\repository\org\jboss\netty\netty\3.2.5.Final\netty-3.2.5.Final.jar;E:\Laboratory\Maven\repository\com\alibaba\dubbo\2.5.2\dubbo-2.5.2.jar;E:\Laboratory\Maven\repository\org\springframework\spring\2.5.6.SEC03\spring-2.5.6.SEC03.jar;E:\Laboratory\Maven\repository\org\javassist\javassist\3.15.0-GA\javassist-3.15.0-GA.jar;E:\Laboratory\Maven\repository\org\apache\zookeeper\zookeeper\3.5.3-beta\zookeeper-3.5.3-beta.jar;E:\Laboratory\Maven\repository\log4j\log4j\1.2.17\log4j-1.2.17.jar;E:\Laboratory\Maven\repository\io\netty\netty\3.10.5.Final\netty-3.10.5.Final.jar;E:\Laboratory\Maven\repository\com\101tec\zkclient\0.9\zkclient-0.9.jar;E:\Laboratory\Maven\repository\org\apache\activemq\activemq-all\5.8.0\activemq-all-5.8.0.jar;E:\Laboratory\Maven\repository\org\apache\activemq\activemq-amqp\5.8.0\activemq-amqp-5.8.0.jar;E:\Laboratory\Maven\repository\org\apache\activemq\activemq-broker\5.8.0\activemq-broker-5.8.0.jar;E:\Laboratory\Maven\repository\org\apache\activemq\activemq-openwire-legacy\5.8.0\activemq-openwire-legacy-5.8.0.jar;E:\Laboratory\Maven\repository\org\fusesource\hawtbuf\hawtbuf\1.9\hawtbuf-1.9.jar;E:\Laboratory\Maven\repository\org\apache\activemq\activemq-pool\5.8.0\activemq-pool-5.8.0.jar;E:\Laboratory\Maven\repository\org\apache\activemq\activemq-client\5.8.0\activemq-client-5.8.0.jar;E:\Laboratory\Maven\repository\org\apache\geronimo\specs\geronimo-jms_1.1_spec\1.1.1\geronimo-jms_1.1_spec-1.1.1.jar;E:\Laboratory\Maven\repository\org\apache\geronimo\specs\geronimo-j2ee-management_1.1_spec\1.0.1\geronimo-j2ee-management_1.1_spec-1.0.1.jar;E:\Laboratory\Maven\repository\org\apache\geronimo\specs\geronimo-jta_1.0.1B_spec\1.0.1\geronimo-jta_1.0.1B_spec-1.0.1.jar;E:\Laboratory\Maven\repository\commons-pool\commons-pool\1.6\commons-pool-1.6.jar;E:\Laboratory\Maven\repository\quartz\quartz\1.6.0\quartz-1.6.0.jar;E:\Laboratory\Maven\repository\org\elasticsearch\client\rest\5.0.0\rest-5.0.0.jar;E:\Laboratory\Maven\repository\org\apache\httpcomponents\httpclient\4.5.2\httpclient-4.5.2.jar;E:\Laboratory\Maven\repository\org\apache\httpcomponents\httpcore\4.4.5\httpcore-4.4.5.jar;E:\Laboratory\Maven\repository\org\apache\httpcomponents\httpasyncclient\4.1.2\httpasyncclient-4.1.2.jar;E:\Laboratory\Maven\repository\org\apache\httpcomponents\httpcore-nio\4.4.5\httpcore-nio-4.4.5.jar;E:\Laboratory\Maven\repository\org\aspectj\aspectjweaver\1.5.4\aspectjweaver-1.5.4.jar;E:\Laboratory\Maven\repository\org\aspectj\aspectjrt\1.5.4\aspectjrt-1.5.4.jar;E:\Laboratory\Maven\repository\junit\junit\4.12\junit-4.12.jar;E:\Laboratory\Maven\repository\org\hamcrest\hamcrest-core\1.3\hamcrest-core-1.3.jar;E:\Laboratory\Maven\repository\javax\servlet\javax.servlet-api\3.1.0\javax.servlet-api-3.1.0.jar;E:\Laboratory\Maven\repository\javax\servlet\jsp\jsp-api\2.2\jsp-api-2.2.jar;E:\Laboratory\Maven\repository\javax\servlet\jstl\1.2\jstl-1.2.jar;E:\Laboratory\Maven\repository\net\sf\jxls\jxls-core\1.0.6\jxls-core-1.0.6.jar;E:\Laboratory\Maven\repository\commons-collections\commons-collections\3.2.1\commons-collections-3.2.1.jar;E:\Laboratory\Maven\repository\org\apache\commons\commons-jexl\2.0.1\commons-jexl-2.0.1.jar;E:\Laboratory\Maven\repository\org\apache\logging\log4j\log4j-api\2.8.2\log4j-api-2.8.2.jar;E:\Laboratory\Maven\repository\org\apache\logging\log4j\log4j-core\2.8.2\log4j-core-2.8.2.jar;E:\Laboratory\Maven\repository\org\slf4j\slf4j-api\1.7.5\slf4j-api-1.7.5.jar;E:\Laboratory\Maven\repository\org\slf4j\slf4j-log4j12\1.7.5\slf4j-log4j12-1.7.5.jar;E:\Laboratory\Maven\repository\org\apache\logging\log4j\log4j-slf4j-impl\2.8.2\log4j-slf4j-impl-2.8.2.jar;E:\Laboratory\Maven\repository\com\google\zxing\core\3.0.0\core-3.0.0.jar;E:\Laboratory\Maven\repository\com\google\zxing\javase\3.0.0\javase-3.0.0.jar;E:\Laboratory\Maven\repository\com\alibaba\fastjson\1.2.6\fastjson-1.2.6.jar;E:\Laboratory\Maven\repository\org\codehaus\jackson\jackson-mapper-asl\1.9.13\jackson-mapper-asl-1.9.13.jar;E:\Laboratory\Maven\repository\org\codehaus\jackson\jackson-core-asl\1.9.13\jackson-core-asl-1.9.13.jar;E:\Laboratory\Maven\repository\org\apache\commons\commons-lang3\3.4\commons-lang3-3.4.jar;E:\Laboratory\Maven\repository\commons-fileupload\commons-fileupload\1.3.1\commons-fileupload-1.3.1.jar;E:\Laboratory\Maven\repository\commons-io\commons-io\2.4\commons-io-2.4.jar;E:\Laboratory\Maven\repository\commons-codec\commons-codec\1.10\commons-codec-1.10.jar;E:\Laboratory\Maven\repository\commons-beanutils\commons-beanutils\1.9.2\commons-beanutils-1.9.2.jar;E:\Laboratory\Maven\repository\org\apache\commons\commons-collections4\4.1\commons-collections4-4.1.jar;E:\Laboratory\Maven\repository\aopalliance\aopalliance\1.0\aopalliance-1.0.jar;E:\Laboratory\Maven\repository\commons-cli\commons-cli\1.2\commons-cli-1.2.jar;E:\Laboratory\Maven\repository\ognl\ognl\3.1.14\ognl-3.1.14.jar;E:\Laboratory\Maven\repository\commons-net\commons-net\3.2\commons-net-3.2.jar;E:\Laboratory\Maven\repository\org\apache\poi\poi\3.15\poi-3.15.jar;E:\Laboratory\Maven\repository\org\apache\poi\poi-ooxml\3.15\poi-ooxml-3.15.jar;E:\Laboratory\Maven\repository\org\apache\poi\poi-ooxml-schemas\3.15\poi-ooxml-schemas-3.15.jar;E:\Laboratory\Maven\repository\org\apache\xmlbeans\xmlbeans\2.6.0\xmlbeans-2.6.0.jar;E:\Laboratory\Maven\repository\stax\stax-api\1.0.1\stax-api-1.0.1.jar;E:\Laboratory\Maven\repository\com\github\virtuald\curvesapi\1.04\curvesapi-1.04.jar;E:\Laboratory\Maven\repository\javax\jms\jms\1.1\jms-1.1.jar
[INFO ][20171229 14:33:16,407][Environment:109] Client environment:java.library.path=C:\Program Files\Java\jdk1.8.0_131\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\ProgramData\Oracle\Java\javapath;C:\Program Files (x86)\Intel\iCLS Client\;C:\Program Files\Intel\iCLS Client\;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\Program Files\Java\jdk1.8.0_131\bin;D:\Git\Git\cmd;D:\Mysql\mysql-5.6.36-winx64\bin;D:\TortoiseGit\bin;D:\TortoiseSVN\bin;D:\Nodejs\;C:\Users\junlonlu\AppData\Local\Microsoft\WindowsApps;D:\Visual Studio Code\Microsoft VS Code\bin;C:\Users\junlonlu\AppData\Roaming\npm;E:\Laboratory\Maven\apache-maven-3.5.2\bin;.
[INFO ][20171229 14:33:16,407][Environment:109] Client environment:java.io.tmpdir=C:\Users\junlonlu\AppData\Local\Temp\
[INFO ][20171229 14:33:16,407][Environment:109] Client environment:java.compiler=<NA>
[INFO ][20171229 14:33:16,407][Environment:109] Client environment:os.name=Windows 10
[INFO ][20171229 14:33:16,407][Environment:109] Client environment:os.arch=amd64
[INFO ][20171229 14:33:16,407][Environment:109] Client environment:os.version=10.0
[INFO ][20171229 14:33:16,407][Environment:109] Client environment:user.name=junlonlu
[INFO ][20171229 14:33:16,407][Environment:109] Client environment:user.home=C:\Users\junlonlu
[INFO ][20171229 14:33:16,407][Environment:109] Client environment:user.dir=E:\Idea\gw_lulu\web\gw-web-portal
[INFO ][20171229 14:33:16,407][Environment:109] Client environment:os.memory.free=97MB
[INFO ][20171229 14:33:16,407][Environment:109] Client environment:os.memory.max=1799MB
[INFO ][20171229 14:33:16,407][Environment:109] Client environment:os.memory.total=123MB
[INFO ][20171229 14:33:16,407][ZooKeeper:865] Initiating client connection, connectString=127.0.0.1:2181 sessionTimeout=30000 watcher=org.I0Itec.zkclient.ZkClient@56db847e
[INFO ][20171229 14:33:16,724][ClientCnxnSocket:236] jute.maxbuffer value is 4194304 Bytes
[INFO ][20171229 14:33:16,724][ZkClient:935] Waiting for keeper state SyncConnected
[INFO ][20171229 14:33:16,741][ClientCnxn$SendThread:1113] Opening socket connection to server 127.0.0.1/127.0.0.1:2181. Will not attempt to authenticate using SASL (unknown error)
[INFO ][20171229 14:33:16,742][ClientCnxn$SendThread:948] Socket connection established, initiating session, client: /127.0.0.1:56053, server: 127.0.0.1/127.0.0.1:2181
[INFO ][20171229 14:33:16,787][ClientCnxn$SendThread:1381] Session establishment complete on server 127.0.0.1/127.0.0.1:2181, sessionid = 0x100b8204d570001, negotiated timeout = 30000
[INFO ][20171229 14:33:16,791][ZkClient:712] zookeeper state changed (SyncConnected)
[DEBUG][20171229 14:33:16,803][ExtensionLoader:943]  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class RouterFactory$Adpative implements com.alibaba.dubbo.rpc.cluster.RouterFactory {
public com.alibaba.dubbo.rpc.cluster.Router getRouter(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getProtocol();
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.RouterFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.cluster.RouterFactory extension = (com.alibaba.dubbo.rpc.cluster.RouterFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.RouterFactory.class).getExtension(extName);
return extension.getRouter(arg0);
}
}, dubbo version: 2.5.2, current host: 127.0.0.1
[DEBUG][20171229 14:33:16,823][ExtensionLoader:943]  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ConfiguratorFactory$Adpative implements com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory {
public com.alibaba.dubbo.rpc.cluster.Configurator getConfigurator(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getProtocol();
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory extension = (com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory.class).getExtension(extName);
return extension.getConfigurator(arg0);
}
}, dubbo version: 2.5.2, current host: 127.0.0.1
[INFO ][20171229 14:33:16,839][AbstractRegistry:302]  [DUBBO] Register: consumer://192.168.103.21/com.junlon.facade.user.service.AdminQueryFacade?application=gw-web-portal&category=consumers&check=false&dubbo=2.5.2&interface=com.junlon.facade.user.service.AdminQueryFacade&methods=list&pid=57220&side=consumer&timestamp=1514529196222, dubbo version: 2.5.2, current host: 192.168.103.21
[INFO ][20171229 14:33:16,939][AbstractRegistry:325]  [DUBBO] Subscribe: consumer://192.168.103.21/com.junlon.facade.user.service.AdminQueryFacade?application=gw-web-portal&category=providers,configurators,routers&check=false&dubbo=2.5.2&interface=com.junlon.facade.user.service.AdminQueryFacade&methods=list&pid=57220&side=consumer&timestamp=1514529196222, dubbo version: 2.5.2, current host: 192.168.103.21
[INFO ][20171229 14:33:17,159][AbstractRegistry:422]  [DUBBO] Notify urls for subscribe url consumer://192.168.103.21/com.junlon.facade.user.service.AdminQueryFacade?application=gw-web-portal&category=providers,configurators,routers&check=false&dubbo=2.5.2&interface=com.junlon.facade.user.service.AdminQueryFacade&methods=list&pid=57220&side=consumer&timestamp=1514529196222, urls: [empty://192.168.103.21/com.junlon.facade.user.service.AdminQueryFacade?application=gw-web-portal&category=providers&check=false&dubbo=2.5.2&interface=com.junlon.facade.user.service.AdminQueryFacade&methods=list&pid=57220&side=consumer&timestamp=1514529196222, empty://192.168.103.21/com.junlon.facade.user.service.AdminQueryFacade?application=gw-web-portal&category=configurators&check=false&dubbo=2.5.2&interface=com.junlon.facade.user.service.AdminQueryFacade&methods=list&pid=57220&side=consumer&timestamp=1514529196222, empty://192.168.103.21/com.junlon.facade.user.service.AdminQueryFacade?application=gw-web-portal&category=routers&check=false&dubbo=2.5.2&interface=com.junlon.facade.user.service.AdminQueryFacade&methods=list&pid=57220&side=consumer&timestamp=1514529196222], dubbo version: 2.5.2, current host: 192.168.103.21
[INFO ][20171229 14:33:17,175][ReferenceConfig:423]  [DUBBO] Refer dubbo service com.junlon.facade.user.service.AdminQueryFacade from url zookeeper://127.0.0.1:2181/com.alibaba.dubbo.registry.RegistryService?application=gw-web-portal&check=false&dubbo=2.5.2&interface=com.junlon.facade.user.service.AdminQueryFacade&methods=list&pid=57220&side=consumer&timestamp=1514529196222, dubbo version: 2.5.2, current host: 192.168.103.21
[INFO ][20171229 14:33:17,206][AbstractApplicationContext:957] Closing org.springframework.context.support.GenericApplicationContext@6dc17b83: startup date [Fri Dec 29 14:33:15 CST 2017]; root of context hierarchy
[INFO ][20171229 14:33:17,206][AbstractConfig$1:450]  [DUBBO] Run shutdown hook now., dubbo version: 2.5.2, current host: 192.168.103.21
[INFO ][20171229 14:33:17,222][AbstractRegistryFactory:63]  [DUBBO] Close all registries [zookeeper://127.0.0.1:2181/com.alibaba.dubbo.registry.RegistryService?application=gw-web-portal&dubbo=2.5.2&interface=com.alibaba.dubbo.registry.RegistryService&pid=57220&timestamp=1514529196285], dubbo version: 2.5.2, current host: 192.168.103.21
[INFO ][20171229 14:33:17,222][AbstractRegistry:343]  [DUBBO] Unsubscribe: consumer://192.168.103.21/com.junlon.facade.user.service.AdminQueryFacade?application=gw-web-portal&category=providers,configurators,routers&check=false&dubbo=2.5.2&interface=com.junlon.facade.user.service.AdminQueryFacade&methods=list&pid=57220&side=consumer&timestamp=1514529196222, dubbo version: 2.5.2, current host: 192.168.103.21
[INFO ][20171229 14:33:17,222][AbstractRegistry:485]  [DUBBO] Destroy registry:zookeeper://127.0.0.1:2181/com.alibaba.dubbo.registry.RegistryService?application=gw-web-portal&dubbo=2.5.2&interface=com.alibaba.dubbo.registry.RegistryService&pid=57220&timestamp=1514529196285, dubbo version: 2.5.2, current host: 192.168.103.21
[INFO ][20171229 14:33:17,222][AbstractRegistry:312]  [DUBBO] Unregister: consumer://192.168.103.21/com.junlon.facade.user.service.AdminQueryFacade?application=gw-web-portal&category=consumers&check=false&dubbo=2.5.2&interface=com.junlon.facade.user.service.AdminQueryFacade&methods=list&pid=57220&side=consumer&timestamp=1514529196222, dubbo version: 2.5.2, current host: 192.168.103.21
[INFO ][20171229 14:33:17,253][AbstractRegistry:494]  [DUBBO] Destroy unregister url consumer://192.168.103.21/com.junlon.facade.user.service.AdminQueryFacade?application=gw-web-portal&category=consumers&check=false&dubbo=2.5.2&interface=com.junlon.facade.user.service.AdminQueryFacade&methods=list&pid=57220&side=consumer&timestamp=1514529196222, dubbo version: 2.5.2, current host: 192.168.103.21
[INFO ][20171229 14:33:17,253][ZkEventThread:82] Terminate ZkClient event thread.
[INFO ][20171229 14:33:17,302][ZooKeeper:1326] Session: 0x100b8204d570001 closed
[INFO ][20171229 14:33:17,302][ClientCnxn$EventThread:513] EventThread shut down for session: 0x100b8204d570001
[INFO ][20171229 15:21:10,943][AbstractTestContextBootstrapper:259] Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]
[INFO ][20171229 15:21:10,978][AbstractTestContextBootstrapper:185] Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@47d90b9e, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@1184ab05, org.springframework.test.context.support.DependencyInjectionTestExecutionListener@3aefe5e5, org.springframework.test.context.support.DirtiesContextTestExecutionListener@149e0f5d, org.springframework.test.context.transaction.TransactionalTestExecutionListener@1b1473ab, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@2f7c2f4f]
[INFO ][20171229 15:21:11,295][XmlBeanDefinitionReader:317] Loading XML bean definitions from class path resource [spring/spring-context.xml]
[INFO ][20171229 15:21:11,853][XmlBeanDefinitionReader:317] Loading XML bean definitions from class path resource [spring/dubbo/dubbo-consumer.xml]
[INFO ][20171229 15:21:11,966][?:?] using logger: com.alibaba.dubbo.common.logger.log4j.Log4jLoggerAdapter
[INFO ][20171229 15:21:12,080][XmlBeanDefinitionReader:317] Loading XML bean definitions from class path resource [spring/dubbo/dubbo-reference-user.xml]
[INFO ][20171229 15:21:12,327][XmlBeanDefinitionReader:317] Loading XML bean definitions from class path resource [spring/spring-amp.xml]
[INFO ][20171229 15:21:12,446][AbstractApplicationContext:577] Refreshing org.springframework.context.support.GenericApplicationContext@6dc17b83: startup date [Fri Dec 29 15:21:12 CST 2017]; root of context hierarchy
[INFO ][20171229 15:21:13,092][PropertiesLoaderSupport:172] Loading properties file from class path resource [public_system.properties]
[DEBUG][20171229 15:21:13,430][ExtensionLoader:943]  [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Protocol$Adpative implements com.alibaba.dubbo.rpc.Protocol {
public void destroy() {throw new UnsupportedOperationException("method public abstract void com.alibaba.dubbo.rpc.Protocol.destroy() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public int getDefaultPort() {throw new UnsupportedOperationException("method public abstract int com.alibaba.dubbo.rpc.Protocol.getDefaultPort() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public com.alibaba.dubbo.rpc.Invoker refer(java.lang.Class arg0, com.alibaba.dubbo.common.URL arg1) throws java.lang.Class {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.refer(arg0, arg1);
}
public com.alibaba.dubbo.rpc.Exporter export(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.Invoker {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.export(arg0);
}
}, dubbo version: 2.5.2, current host: 127.0.0.1
[DEBUG][20171229 15:21:13,765][ExtensionLoader:943]  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Cluster$Adpative implements com.alibaba.dubbo.rpc.cluster.Cluster {
public com.alibaba.dubbo.rpc.Invoker join(com.alibaba.dubbo.rpc.cluster.Directory arg0) throws com.alibaba.dubbo.rpc.cluster.Directory {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("cluster", "failover");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.Cluster) name from url(" + url.toString() + ") use keys([cluster])");
com.alibaba.dubbo.rpc.cluster.Cluster extension = (com.alibaba.dubbo.rpc.cluster.Cluster)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.Cluster.class).getExtension(extName);
return extension.join(arg0);
}
}, dubbo version: 2.5.2, current host: 127.0.0.1
[DEBUG][20171229 15:21:13,798][ExtensionLoader:943]  [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ProxyFactory$Adpative implements com.alibaba.dubbo.rpc.ProxyFactory {
public java.lang.Object getProxy(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.Invoker {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getProxy(arg0);
}
public com.alibaba.dubbo.rpc.Invoker getInvoker(java.lang.Object arg0, java.lang.Class arg1, com.alibaba.dubbo.common.URL arg2) throws java.lang.Object {
if (arg2 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg2;
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getInvoker(arg0, arg1, arg2);
}
}, dubbo version: 2.5.2, current host: 127.0.0.1
[DEBUG][20171229 15:21:14,122][ExtensionLoader:943]  [DUBBO] package com.alibaba.dubbo.registry;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class RegistryFactory$Adpative implements com.alibaba.dubbo.registry.RegistryFactory {
public com.alibaba.dubbo.registry.Registry getRegistry(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.registry.RegistryFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.registry.RegistryFactory extension = (com.alibaba.dubbo.registry.RegistryFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.registry.RegistryFactory.class).getExtension(extName);
return extension.getRegistry(arg0);
}
}, dubbo version: 2.5.2, current host: 127.0.0.1
[DEBUG][20171229 15:21:14,139][ExtensionLoader:943]  [DUBBO] package com.alibaba.dubbo.remoting.zookeeper;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ZookeeperTransporter$Adpative implements com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter {
public com.alibaba.dubbo.remoting.zookeeper.ZookeeperClient connect(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("client", url.getParameter("transporter", "zkclient"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter) name from url(" + url.toString() + ") use keys([client, transporter])");
com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter extension = (com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter.class).getExtension(extName);
return extension.connect(arg0);
}
}, dubbo version: 2.5.2, current host: 127.0.0.1
[INFO ][20171229 15:21:14,160][AbstractRegistry:232]  [DUBBO] Load registry store file C:\Users\junlonlu\.dubbo\dubbo-registry-127.0.0.1.cache, data: {com.junlon.facade.user.service.AdminQueryFacade=empty://192.168.103.21/com.junlon.facade.user.service.AdminQueryFacade?application=gw-web-portal&category=configurators&check=false&dubbo=2.5.2&interface=com.junlon.facade.user.service.AdminQueryFacade&methods=list&pid=57220&side=consumer&timestamp=1514529196222 empty://192.168.103.21/com.junlon.facade.user.service.AdminQueryFacade?application=gw-web-portal&category=routers&check=false&dubbo=2.5.2&interface=com.junlon.facade.user.service.AdminQueryFacade&methods=list&pid=57220&side=consumer&timestamp=1514529196222 empty://192.168.103.21/com.junlon.facade.user.service.AdminQueryFacade?application=gw-web-portal&category=providers&check=false&dubbo=2.5.2&interface=com.junlon.facade.user.service.AdminQueryFacade&methods=list&pid=57220&side=consumer&timestamp=1514529196222, com.alibaba.dubbo.monitor.MonitorService=empty://192.168.19.1/com.alibaba.dubbo.monitor.MonitorService?category=configurators&dubbo=2.5.2&interface=com.alibaba.dubbo.monitor.MonitorService&pid=51500&timestamp=1512805752537 empty://192.168.19.1/com.alibaba.dubbo.monitor.MonitorService?category=routers&dubbo=2.5.2&interface=com.alibaba.dubbo.monitor.MonitorService&pid=51500&timestamp=1512805752537 empty://192.168.19.1/com.alibaba.dubbo.monitor.MonitorService?category=providers&dubbo=2.5.2&interface=com.alibaba.dubbo.monitor.MonitorService&pid=51500&timestamp=1512805752537}, dubbo version: 2.5.2, current host: 127.0.0.1
[INFO ][20171229 15:21:14,184][ZkEventThread:64] Starting ZkClient event thread.
[INFO ][20171229 15:21:14,197][Environment:109] Client environment:zookeeper.version=3.5.3-beta-8ce24f9e675cbefffb8f21a47e06b42864475a60, built on 04/03/2017 16:19 GMT
[INFO ][20171229 15:21:14,198][Environment:109] Client environment:host.name=windows10.microdone.cn
[INFO ][20171229 15:21:14,199][Environment:109] Client environment:java.version=1.8.0_131
[INFO ][20171229 15:21:14,199][Environment:109] Client environment:java.vendor=Oracle Corporation
[INFO ][20171229 15:21:14,199][Environment:109] Client environment:java.home=C:\Program Files\Java\jdk1.8.0_131\jre
[INFO ][20171229 15:21:14,200][Environment:109] Client environment:java.class.path=D:\Idea\IntelliJ IDEA 2017.1.1\lib\idea_rt.jar;D:\Idea\IntelliJ IDEA 2017.1.1\plugins\junit\lib\junit-rt.jar;C:\Program Files\Java\jdk1.8.0_131\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.8.0_131\jre\lib\deploy.jar;C:\Program Files\Java\jdk1.8.0_131\jre\lib\ext\access-bridge-64.jar;C:\Program Files\Java\jdk1.8.0_131\jre\lib\ext\cldrdata.jar;C:\Program Files\Java\jdk1.8.0_131\jre\lib\ext\dnsns.jar;C:\Program Files\Java\jdk1.8.0_131\jre\lib\ext\jaccess.jar;C:\Program Files\Java\jdk1.8.0_131\jre\lib\ext\jfxrt.jar;C:\Program Files\Java\jdk1.8.0_131\jre\lib\ext\localedata.jar;C:\Program Files\Java\jdk1.8.0_131\jre\lib\ext\nashorn.jar;C:\Program Files\Java\jdk1.8.0_131\jre\lib\ext\sunec.jar;C:\Program Files\Java\jdk1.8.0_131\jre\lib\ext\sunjce_provider.jar;C:\Program Files\Java\jdk1.8.0_131\jre\lib\ext\sunmscapi.jar;C:\Program Files\Java\jdk1.8.0_131\jre\lib\ext\sunpkcs11.jar;C:\Program Files\Java\jdk1.8.0_131\jre\lib\ext\zipfs.jar;C:\Program Files\Java\jdk1.8.0_131\jre\lib\javaws.jar;C:\Program Files\Java\jdk1.8.0_131\jre\lib\jce.jar;C:\Program Files\Java\jdk1.8.0_131\jre\lib\jfr.jar;C:\Program Files\Java\jdk1.8.0_131\jre\lib\jfxswt.jar;C:\Program Files\Java\jdk1.8.0_131\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.8.0_131\jre\lib\management-agent.jar;C:\Program Files\Java\jdk1.8.0_131\jre\lib\plugin.jar;C:\Program Files\Java\jdk1.8.0_131\jre\lib\resources.jar;C:\Program Files\Java\jdk1.8.0_131\jre\lib\rt.jar;D:\Idea\IntelliJ IDEA 2017.1.1\lib\junit.jar;D:\Idea\IntelliJ IDEA 2017.1.1\lib\junit-4.12.jar;D:\Idea\IntelliJ IDEA 2017.1.1\lib\hamcrest-core-1.3.jar;E:\Idea\gw_lulu\web\gw-web-portal\target\test-classes;E:\Idea\gw_lulu\web\gw-web-portal\target\classes;E:\Idea\gw_lulu\common\gw-common-base\target\classes;E:\Idea\gw_lulu\facade\gw-facade-user\target\classes;E:\Laboratory\Maven\repository\org\springframework\spring-aop\4.2.3.RELEASE\spring-aop-4.2.3.RELEASE.jar;E:\Laboratory\Maven\repository\org\springframework\spring-aspects\4.2.3.RELEASE\spring-aspects-4.2.3.RELEASE.jar;E:\Laboratory\Maven\repository\org\springframework\spring-beans\4.2.3.RELEASE\spring-beans-4.2.3.RELEASE.jar;E:\Laboratory\Maven\repository\org\springframework\spring-context\4.2.3.RELEASE\spring-context-4.2.3.RELEASE.jar;E:\Laboratory\Maven\repository\org\springframework\spring-context-support\4.2.3.RELEASE\spring-context-support-4.2.3.RELEASE.jar;E:\Laboratory\Maven\repository\org\springframework\spring-core\4.2.3.RELEASE\spring-core-4.2.3.RELEASE.jar;E:\Laboratory\Maven\repository\org\springframework\spring-expression\4.2.3.RELEASE\spring-expression-4.2.3.RELEASE.jar;E:\Laboratory\Maven\repository\org\springframework\spring-instrument\4.2.3.RELEASE\spring-instrument-4.2.3.RELEASE.jar;E:\Laboratory\Maven\repository\org\springframework\spring-instrument-tomcat\4.2.3.RELEASE\spring-instrument-tomcat-4.2.3.RELEASE.jar;E:\Laboratory\Maven\repository\org\springframework\data\spring-data-jpa\1.9.4.RELEASE\spring-data-jpa-1.9.4.RELEASE.jar;E:\Laboratory\Maven\repository\org\springframework\data\spring-data-commons\1.11.4.RELEASE\spring-data-commons-1.11.4.RELEASE.jar;E:\Laboratory\Maven\repository\org\slf4j\jcl-over-slf4j\1.7.13\jcl-over-slf4j-1.7.13.jar;E:\Laboratory\Maven\repository\org\springframework\spring-jms\4.2.3.RELEASE\spring-jms-4.2.3.RELEASE.jar;E:\Laboratory\Maven\repository\org\springframework\spring-messaging\4.2.3.RELEASE\spring-messaging-4.2.3.RELEASE.jar;E:\Laboratory\Maven\repository\org\springframework\spring-orm\4.2.3.RELEASE\spring-orm-4.2.3.RELEASE.jar;E:\Laboratory\Maven\repository\org\springframework\spring-jdbc\4.2.3.RELEASE\spring-jdbc-4.2.3.RELEASE.jar;E:\Laboratory\Maven\repository\org\springframework\spring-oxm\4.2.3.RELEASE\spring-oxm-4.2.3.RELEASE.jar;E:\Laboratory\Maven\repository\org\springframework\spring-tx\4.2.3.RELEASE\spring-tx-4.2.3.RELEASE.jar;E:\Laboratory\Maven\repository\org\springframework\spring-web\4.2.3.RELEASE\spring-web-4.2.3.RELEASE.jar;E:\Laboratory\Maven\repository\org\springframework\spring-webmvc\4.2.3.RELEASE\spring-webmvc-4.2.3.RELEASE.jar;E:\Laboratory\Maven\repository\org\springframework\spring-webmvc-portlet\4.2.3.RELEASE\spring-webmvc-portlet-4.2.3.RELEASE.jar;E:\Laboratory\Maven\repository\org\springframework\spring-test\4.2.3.RELEASE\spring-test-4.2.3.RELEASE.jar;E:\Laboratory\Maven\repository\org\springframework\ws\spring-ws-core\2.3.0.RELEASE\spring-ws-core-2.3.0.RELEASE.jar;E:\Laboratory\Maven\repository\commons-logging\commons-logging\1.1.3\commons-logging-1.1.3.jar;E:\Laboratory\Maven\repository\org\springframework\ws\spring-xml\2.3.0.RELEASE\spring-xml-2.3.0.RELEASE.jar;E:\Laboratory\Maven\repository\org\mybatis\mybatis\3.4.0\mybatis-3.4.0.jar;E:\Laboratory\Maven\repository\org\mybatis\mybatis-spring\1.3.0\mybatis-spring-1.3.0.jar;E:\Laboratory\Maven\repository\org\mybatis\generator\mybatis-generator-core\1.3.5\mybatis-generator-core-1.3.5.jar;E:\Laboratory\Maven\repository\mysql\mysql-connector-java\5.1.9\mysql-connector-java-5.1.9.jar;E:\Laboratory\Maven\repository\com\alibaba\druid\1.0.9\druid-1.0.9.jar;C:\Program Files\Java\jdk1.8.0_131\lib\jconsole.jar;C:\Program Files\Java\jdk1.8.0_131\lib\tools.jar;E:\Laboratory\Maven\repository\org\jboss\netty\netty\3.2.5.Final\netty-3.2.5.Final.jar;E:\Laboratory\Maven\repository\com\alibaba\dubbo\2.5.2\dubbo-2.5.2.jar;E:\Laboratory\Maven\repository\org\springframework\spring\2.5.6.SEC03\spring-2.5.6.SEC03.jar;E:\Laboratory\Maven\repository\org\javassist\javassist\3.15.0-GA\javassist-3.15.0-GA.jar;E:\Laboratory\Maven\repository\org\apache\zookeeper\zookeeper\3.5.3-beta\zookeeper-3.5.3-beta.jar;E:\Laboratory\Maven\repository\log4j\log4j\1.2.17\log4j-1.2.17.jar;E:\Laboratory\Maven\repository\io\netty\netty\3.10.5.Final\netty-3.10.5.Final.jar;E:\Laboratory\Maven\repository\com\101tec\zkclient\0.9\zkclient-0.9.jar;E:\Laboratory\Maven\repository\org\apache\activemq\activemq-all\5.8.0\activemq-all-5.8.0.jar;E:\Laboratory\Maven\repository\org\apache\activemq\activemq-amqp\5.8.0\activemq-amqp-5.8.0.jar;E:\Laboratory\Maven\repository\org\apache\activemq\activemq-broker\5.8.0\activemq-broker-5.8.0.jar;E:\Laboratory\Maven\repository\org\apache\activemq\activemq-openwire-legacy\5.8.0\activemq-openwire-legacy-5.8.0.jar;E:\Laboratory\Maven\repository\org\fusesource\hawtbuf\hawtbuf\1.9\hawtbuf-1.9.jar;E:\Laboratory\Maven\repository\org\apache\activemq\activemq-pool\5.8.0\activemq-pool-5.8.0.jar;E:\Laboratory\Maven\repository\org\apache\activemq\activemq-client\5.8.0\activemq-client-5.8.0.jar;E:\Laboratory\Maven\repository\org\apache\geronimo\specs\geronimo-jms_1.1_spec\1.1.1\geronimo-jms_1.1_spec-1.1.1.jar;E:\Laboratory\Maven\repository\org\apache\geronimo\specs\geronimo-j2ee-management_1.1_spec\1.0.1\geronimo-j2ee-management_1.1_spec-1.0.1.jar;E:\Laboratory\Maven\repository\org\apache\geronimo\specs\geronimo-jta_1.0.1B_spec\1.0.1\geronimo-jta_1.0.1B_spec-1.0.1.jar;E:\Laboratory\Maven\repository\commons-pool\commons-pool\1.6\commons-pool-1.6.jar;E:\Laboratory\Maven\repository\quartz\quartz\1.6.0\quartz-1.6.0.jar;E:\Laboratory\Maven\repository\org\elasticsearch\client\rest\5.0.0\rest-5.0.0.jar;E:\Laboratory\Maven\repository\org\apache\httpcomponents\httpclient\4.5.2\httpclient-4.5.2.jar;E:\Laboratory\Maven\repository\org\apache\httpcomponents\httpcore\4.4.5\httpcore-4.4.5.jar;E:\Laboratory\Maven\repository\org\apache\httpcomponents\httpasyncclient\4.1.2\httpasyncclient-4.1.2.jar;E:\Laboratory\Maven\repository\org\apache\httpcomponents\httpcore-nio\4.4.5\httpcore-nio-4.4.5.jar;E:\Laboratory\Maven\repository\org\aspectj\aspectjweaver\1.5.4\aspectjweaver-1.5.4.jar;E:\Laboratory\Maven\repository\org\aspectj\aspectjrt\1.5.4\aspectjrt-1.5.4.jar;E:\Laboratory\Maven\repository\junit\junit\4.12\junit-4.12.jar;E:\Laboratory\Maven\repository\org\hamcrest\hamcrest-core\1.3\hamcrest-core-1.3.jar;E:\Laboratory\Maven\repository\javax\servlet\javax.servlet-api\3.1.0\javax.servlet-api-3.1.0.jar;E:\Laboratory\Maven\repository\javax\servlet\jsp\jsp-api\2.2\jsp-api-2.2.jar;E:\Laboratory\Maven\repository\javax\servlet\jstl\1.2\jstl-1.2.jar;E:\Laboratory\Maven\repository\net\sf\jxls\jxls-core\1.0.6\jxls-core-1.0.6.jar;E:\Laboratory\Maven\repository\commons-collections\commons-collections\3.2.1\commons-collections-3.2.1.jar;E:\Laboratory\Maven\repository\org\apache\commons\commons-jexl\2.0.1\commons-jexl-2.0.1.jar;E:\Laboratory\Maven\repository\org\apache\logging\log4j\log4j-api\2.8.2\log4j-api-2.8.2.jar;E:\Laboratory\Maven\repository\org\apache\logging\log4j\log4j-core\2.8.2\log4j-core-2.8.2.jar;E:\Laboratory\Maven\repository\org\slf4j\slf4j-api\1.7.5\slf4j-api-1.7.5.jar;E:\Laboratory\Maven\repository\org\slf4j\slf4j-log4j12\1.7.5\slf4j-log4j12-1.7.5.jar;E:\Laboratory\Maven\repository\org\apache\logging\log4j\log4j-slf4j-impl\2.8.2\log4j-slf4j-impl-2.8.2.jar;E:\Laboratory\Maven\repository\com\google\zxing\core\3.0.0\core-3.0.0.jar;E:\Laboratory\Maven\repository\com\google\zxing\javase\3.0.0\javase-3.0.0.jar;E:\Laboratory\Maven\repository\com\alibaba\fastjson\1.2.6\fastjson-1.2.6.jar;E:\Laboratory\Maven\repository\org\codehaus\jackson\jackson-mapper-asl\1.9.13\jackson-mapper-asl-1.9.13.jar;E:\Laboratory\Maven\repository\org\codehaus\jackson\jackson-core-asl\1.9.13\jackson-core-asl-1.9.13.jar;E:\Laboratory\Maven\repository\org\apache\commons\commons-lang3\3.4\commons-lang3-3.4.jar;E:\Laboratory\Maven\repository\commons-fileupload\commons-fileupload\1.3.1\commons-fileupload-1.3.1.jar;E:\Laboratory\Maven\repository\commons-io\commons-io\2.4\commons-io-2.4.jar;E:\Laboratory\Maven\repository\commons-codec\commons-codec\1.10\commons-codec-1.10.jar;E:\Laboratory\Maven\repository\commons-beanutils\commons-beanutils\1.9.2\commons-beanutils-1.9.2.jar;E:\Laboratory\Maven\repository\org\apache\commons\commons-collections4\4.1\commons-collections4-4.1.jar;E:\Laboratory\Maven\repository\aopalliance\aopalliance\1.0\aopalliance-1.0.jar;E:\Laboratory\Maven\repository\commons-cli\commons-cli\1.2\commons-cli-1.2.jar;E:\Laboratory\Maven\repository\ognl\ognl\3.1.14\ognl-3.1.14.jar;E:\Laboratory\Maven\repository\commons-net\commons-net\3.2\commons-net-3.2.jar;E:\Laboratory\Maven\repository\org\apache\poi\poi\3.15\poi-3.15.jar;E:\Laboratory\Maven\repository\org\apache\poi\poi-ooxml\3.15\poi-ooxml-3.15.jar;E:\Laboratory\Maven\repository\org\apache\poi\poi-ooxml-schemas\3.15\poi-ooxml-schemas-3.15.jar;E:\Laboratory\Maven\repository\org\apache\xmlbeans\xmlbeans\2.6.0\xmlbeans-2.6.0.jar;E:\Laboratory\Maven\repository\stax\stax-api\1.0.1\stax-api-1.0.1.jar;E:\Laboratory\Maven\repository\com\github\virtuald\curvesapi\1.04\curvesapi-1.04.jar;E:\Laboratory\Maven\repository\javax\jms\jms\1.1\jms-1.1.jar
[INFO ][20171229 15:21:14,201][Environment:109] Client environment:java.library.path=C:\Program Files\Java\jdk1.8.0_131\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\ProgramData\Oracle\Java\javapath;C:\Program Files (x86)\Intel\iCLS Client\;C:\Program Files\Intel\iCLS Client\;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\Program Files\Java\jdk1.8.0_131\bin;D:\Git\Git\cmd;D:\Mysql\mysql-5.6.36-winx64\bin;D:\TortoiseGit\bin;D:\TortoiseSVN\bin;D:\Nodejs\;C:\Users\junlonlu\AppData\Local\Microsoft\WindowsApps;D:\Visual Studio Code\Microsoft VS Code\bin;C:\Users\junlonlu\AppData\Roaming\npm;E:\Laboratory\Maven\apache-maven-3.5.2\bin;.
[INFO ][20171229 15:21:14,201][Environment:109] Client environment:java.io.tmpdir=C:\Users\junlonlu\AppData\Local\Temp\
[INFO ][20171229 15:21:14,201][Environment:109] Client environment:java.compiler=<NA>
[INFO ][20171229 15:21:14,202][Environment:109] Client environment:os.name=Windows 10
[INFO ][20171229 15:21:14,202][Environment:109] Client environment:os.arch=amd64
[INFO ][20171229 15:21:14,202][Environment:109] Client environment:os.version=10.0
[INFO ][20171229 15:21:14,202][Environment:109] Client environment:user.name=junlonlu
[INFO ][20171229 15:21:14,204][Environment:109] Client environment:user.home=C:\Users\junlonlu
[INFO ][20171229 15:21:14,205][Environment:109] Client environment:user.dir=E:\Idea\gw_lulu\web\gw-web-portal
[INFO ][20171229 15:21:14,205][Environment:109] Client environment:os.memory.free=97MB
[INFO ][20171229 15:21:14,205][Environment:109] Client environment:os.memory.max=1799MB
[INFO ][20171229 15:21:14,205][Environment:109] Client environment:os.memory.total=123MB
[INFO ][20171229 15:21:14,209][ZooKeeper:865] Initiating client connection, connectString=127.0.0.1:2181 sessionTimeout=30000 watcher=org.I0Itec.zkclient.ZkClient@740abb5
[INFO ][20171229 15:21:14,730][ClientCnxnSocket:236] jute.maxbuffer value is 4194304 Bytes
[INFO ][20171229 15:21:14,735][ZkClient:935] Waiting for keeper state SyncConnected
[INFO ][20171229 15:21:14,744][ClientCnxn$SendThread:1113] Opening socket connection to server 127.0.0.1/127.0.0.1:2181. Will not attempt to authenticate using SASL (unknown error)
[INFO ][20171229 15:21:14,746][ClientCnxn$SendThread:948] Socket connection established, initiating session, client: /127.0.0.1:58445, server: 127.0.0.1/127.0.0.1:2181
[INFO ][20171229 15:21:14,781][ClientCnxn$SendThread:1381] Session establishment complete on server 127.0.0.1/127.0.0.1:2181, sessionid = 0x100b91156730001, negotiated timeout = 30000
[INFO ][20171229 15:21:14,784][ZkClient:712] zookeeper state changed (SyncConnected)
[DEBUG][20171229 15:21:14,792][ExtensionLoader:943]  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class RouterFactory$Adpative implements com.alibaba.dubbo.rpc.cluster.RouterFactory {
public com.alibaba.dubbo.rpc.cluster.Router getRouter(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getProtocol();
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.RouterFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.cluster.RouterFactory extension = (com.alibaba.dubbo.rpc.cluster.RouterFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.RouterFactory.class).getExtension(extName);
return extension.getRouter(arg0);
}
}, dubbo version: 2.5.2, current host: 127.0.0.1
[DEBUG][20171229 15:21:14,808][ExtensionLoader:943]  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ConfiguratorFactory$Adpative implements com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory {
public com.alibaba.dubbo.rpc.cluster.Configurator getConfigurator(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getProtocol();
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory extension = (com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory.class).getExtension(extName);
return extension.getConfigurator(arg0);
}
}, dubbo version: 2.5.2, current host: 127.0.0.1
[INFO ][20171229 15:21:14,819][AbstractRegistry:302]  [DUBBO] Register: consumer://192.168.103.21/com.junlon.facade.user.service.AdminQueryFacade?application=gw-web-portal&category=consumers&check=false&dubbo=2.5.2&interface=com.junlon.facade.user.service.AdminQueryFacade&methods=list&pid=67420&side=consumer&timestamp=1514532074073, dubbo version: 2.5.2, current host: 192.168.103.21
[INFO ][20171229 15:21:14,952][AbstractRegistry:325]  [DUBBO] Subscribe: consumer://192.168.103.21/com.junlon.facade.user.service.AdminQueryFacade?application=gw-web-portal&category=providers,configurators,routers&check=false&dubbo=2.5.2&interface=com.junlon.facade.user.service.AdminQueryFacade&methods=list&pid=67420&side=consumer&timestamp=1514532074073, dubbo version: 2.5.2, current host: 192.168.103.21
[INFO ][20171229 15:21:15,193][AbstractRegistry:422]  [DUBBO] Notify urls for subscribe url consumer://192.168.103.21/com.junlon.facade.user.service.AdminQueryFacade?application=gw-web-portal&category=providers,configurators,routers&check=false&dubbo=2.5.2&interface=com.junlon.facade.user.service.AdminQueryFacade&methods=list&pid=67420&side=consumer&timestamp=1514532074073, urls: [empty://192.168.103.21/com.junlon.facade.user.service.AdminQueryFacade?application=gw-web-portal&category=providers&check=false&dubbo=2.5.2&interface=com.junlon.facade.user.service.AdminQueryFacade&methods=list&pid=67420&side=consumer&timestamp=1514532074073, empty://192.168.103.21/com.junlon.facade.user.service.AdminQueryFacade?application=gw-web-portal&category=configurators&check=false&dubbo=2.5.2&interface=com.junlon.facade.user.service.AdminQueryFacade&methods=list&pid=67420&side=consumer&timestamp=1514532074073, empty://192.168.103.21/com.junlon.facade.user.service.AdminQueryFacade?application=gw-web-portal&category=routers&check=false&dubbo=2.5.2&interface=com.junlon.facade.user.service.AdminQueryFacade&methods=list&pid=67420&side=consumer&timestamp=1514532074073], dubbo version: 2.5.2, current host: 192.168.103.21
[INFO ][20171229 15:21:15,202][ReferenceConfig:423]  [DUBBO] Refer dubbo service com.junlon.facade.user.service.AdminQueryFacade from url zookeeper://127.0.0.1:2181/com.alibaba.dubbo.registry.RegistryService?application=gw-web-portal&check=false&dubbo=2.5.2&interface=com.junlon.facade.user.service.AdminQueryFacade&methods=list&pid=67420&side=consumer&timestamp=1514532074073, dubbo version: 2.5.2, current host: 192.168.103.21
[INFO ][20171229 15:21:15,247][AbstractApplicationContext:957] Closing org.springframework.context.support.GenericApplicationContext@6dc17b83: startup date [Fri Dec 29 15:21:12 CST 2017]; root of context hierarchy
[INFO ][20171229 15:21:15,247][AbstractConfig$1:450]  [DUBBO] Run shutdown hook now., dubbo version: 2.5.2, current host: 192.168.103.21
[INFO ][20171229 15:21:15,248][AbstractRegistryFactory:63]  [DUBBO] Close all registries [zookeeper://127.0.0.1:2181/com.alibaba.dubbo.registry.RegistryService?application=gw-web-portal&dubbo=2.5.2&interface=com.alibaba.dubbo.registry.RegistryService&pid=67420&timestamp=1514532074112], dubbo version: 2.5.2, current host: 192.168.103.21
[INFO ][20171229 15:21:15,248][AbstractRegistry:343]  [DUBBO] Unsubscribe: consumer://192.168.103.21/com.junlon.facade.user.service.AdminQueryFacade?application=gw-web-portal&category=providers,configurators,routers&check=false&dubbo=2.5.2&interface=com.junlon.facade.user.service.AdminQueryFacade&methods=list&pid=67420&side=consumer&timestamp=1514532074073, dubbo version: 2.5.2, current host: 192.168.103.21
[INFO ][20171229 15:21:15,249][AbstractRegistry:485]  [DUBBO] Destroy registry:zookeeper://127.0.0.1:2181/com.alibaba.dubbo.registry.RegistryService?application=gw-web-portal&dubbo=2.5.2&interface=com.alibaba.dubbo.registry.RegistryService&pid=67420&timestamp=1514532074112, dubbo version: 2.5.2, current host: 192.168.103.21
[INFO ][20171229 15:21:15,249][AbstractRegistry:312]  [DUBBO] Unregister: consumer://192.168.103.21/com.junlon.facade.user.service.AdminQueryFacade?application=gw-web-portal&category=consumers&check=false&dubbo=2.5.2&interface=com.junlon.facade.user.service.AdminQueryFacade&methods=list&pid=67420&side=consumer&timestamp=1514532074073, dubbo version: 2.5.2, current host: 192.168.103.21
[INFO ][20171229 15:21:15,298][AbstractRegistry:494]  [DUBBO] Destroy unregister url consumer://192.168.103.21/com.junlon.facade.user.service.AdminQueryFacade?application=gw-web-portal&category=consumers&check=false&dubbo=2.5.2&interface=com.junlon.facade.user.service.AdminQueryFacade&methods=list&pid=67420&side=consumer&timestamp=1514532074073, dubbo version: 2.5.2, current host: 192.168.103.21
[INFO ][20171229 15:21:15,299][ZkEventThread:82] Terminate ZkClient event thread.
[INFO ][20171229 15:21:15,318][ZooKeeper:1326] Session: 0x100b91156730001 closed
[INFO ][20171229 15:21:15,318][ClientCnxn$EventThread:513] EventThread shut down for session: 0x100b91156730001
[INFO ][20171229 15:54:22,248][AbstractTestContextBootstrapper:259] Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]
[INFO ][20171229 15:54:22,346][AbstractTestContextBootstrapper:185] Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@5a8806ef, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@6c49835d, org.springframework.test.context.support.DependencyInjectionTestExecutionListener@5e853265, org.springframework.test.context.support.DirtiesContextTestExecutionListener@67205a84, org.springframework.test.context.transaction.TransactionalTestExecutionListener@7d0587f1, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@5d76b067]
[INFO ][20171229 15:54:22,730][XmlBeanDefinitionReader:317] Loading XML bean definitions from class path resource [spring/spring-context.xml]
[INFO ][20171229 15:54:23,126][XmlBeanDefinitionReader:317] Loading XML bean definitions from class path resource [spring/dubbo/dubbo-consumer.xml]
[INFO ][20171229 15:54:23,175][?:?] using logger: com.alibaba.dubbo.common.logger.log4j.Log4jLoggerAdapter
[INFO ][20171229 15:54:23,198][XmlBeanDefinitionReader:317] Loading XML bean definitions from class path resource [spring/dubbo/dubbo-reference-user.xml]
[INFO ][20171229 15:54:23,243][XmlBeanDefinitionReader:317] Loading XML bean definitions from class path resource [spring/spring-amp.xml]
[INFO ][20171229 15:54:23,290][AbstractApplicationContext:577] Refreshing org.springframework.context.support.GenericApplicationContext@4d50efb8: startup date [Fri Dec 29 15:54:23 CST 2017]; root of context hierarchy
[INFO ][20171229 15:54:23,411][PropertiesLoaderSupport:172] Loading properties file from class path resource [public_system.properties]
[DEBUG][20171229 15:54:23,541][ExtensionLoader:943]  [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Protocol$Adpative implements com.alibaba.dubbo.rpc.Protocol {
public void destroy() {throw new UnsupportedOperationException("method public abstract void com.alibaba.dubbo.rpc.Protocol.destroy() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public int getDefaultPort() {throw new UnsupportedOperationException("method public abstract int com.alibaba.dubbo.rpc.Protocol.getDefaultPort() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public com.alibaba.dubbo.rpc.Invoker refer(java.lang.Class arg0, com.alibaba.dubbo.common.URL arg1) throws java.lang.Class {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.refer(arg0, arg1);
}
public com.alibaba.dubbo.rpc.Exporter export(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.Invoker {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.export(arg0);
}
}, dubbo version: 2.5.2, current host: 127.0.0.1
[DEBUG][20171229 15:54:23,669][ExtensionLoader:943]  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Cluster$Adpative implements com.alibaba.dubbo.rpc.cluster.Cluster {
public com.alibaba.dubbo.rpc.Invoker join(com.alibaba.dubbo.rpc.cluster.Directory arg0) throws com.alibaba.dubbo.rpc.cluster.Directory {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("cluster", "failover");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.Cluster) name from url(" + url.toString() + ") use keys([cluster])");
com.alibaba.dubbo.rpc.cluster.Cluster extension = (com.alibaba.dubbo.rpc.cluster.Cluster)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.Cluster.class).getExtension(extName);
return extension.join(arg0);
}
}, dubbo version: 2.5.2, current host: 127.0.0.1
[DEBUG][20171229 15:54:23,693][ExtensionLoader:943]  [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ProxyFactory$Adpative implements com.alibaba.dubbo.rpc.ProxyFactory {
public java.lang.Object getProxy(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.Invoker {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getProxy(arg0);
}
public com.alibaba.dubbo.rpc.Invoker getInvoker(java.lang.Object arg0, java.lang.Class arg1, com.alibaba.dubbo.common.URL arg2) throws java.lang.Object {
if (arg2 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg2;
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getInvoker(arg0, arg1, arg2);
}
}, dubbo version: 2.5.2, current host: 127.0.0.1
[DEBUG][20171229 15:54:23,871][ExtensionLoader:943]  [DUBBO] package com.alibaba.dubbo.registry;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class RegistryFactory$Adpative implements com.alibaba.dubbo.registry.RegistryFactory {
public com.alibaba.dubbo.registry.Registry getRegistry(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.registry.RegistryFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.registry.RegistryFactory extension = (com.alibaba.dubbo.registry.RegistryFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.registry.RegistryFactory.class).getExtension(extName);
return extension.getRegistry(arg0);
}
}, dubbo version: 2.5.2, current host: 127.0.0.1
[DEBUG][20171229 15:54:23,886][ExtensionLoader:943]  [DUBBO] package com.alibaba.dubbo.remoting.zookeeper;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ZookeeperTransporter$Adpative implements com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter {
public com.alibaba.dubbo.remoting.zookeeper.ZookeeperClient connect(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("client", url.getParameter("transporter", "zkclient"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter) name from url(" + url.toString() + ") use keys([client, transporter])");
com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter extension = (com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter.class).getExtension(extName);
return extension.connect(arg0);
}
}, dubbo version: 2.5.2, current host: 127.0.0.1
[INFO ][20171229 15:54:23,903][AbstractRegistry:232]  [DUBBO] Load registry store file C:\Users\junlonlu\.dubbo\dubbo-registry-127.0.0.1.cache, data: {com.junlon.facade.user.service.AdminQueryFacade=empty://192.168.103.21:20880/com.junlon.facade.user.service.AdminQueryFacade?anyhost=true&application=gw-serivce-user&category=configurators&check=false&default.accepts=1000&default.dispatcher=all&default.retries=0&default.threadpool=fixed&default.threads=1000&default.timeout=30000&dubbo=2.5.2&interface=com.junlon.facade.user.service.AdminQueryFacade&methods=list&pid=63584&retries=0&revision=1.0.0-SHAPSHOT&side=provider&timestamp=1514533997490, com.alibaba.dubbo.monitor.MonitorService=empty://192.168.19.1/com.alibaba.dubbo.monitor.MonitorService?category=configurators&dubbo=2.5.2&interface=com.alibaba.dubbo.monitor.MonitorService&pid=51500&timestamp=1512805752537 empty://192.168.19.1/com.alibaba.dubbo.monitor.MonitorService?category=routers&dubbo=2.5.2&interface=com.alibaba.dubbo.monitor.MonitorService&pid=51500&timestamp=1512805752537 empty://192.168.19.1/com.alibaba.dubbo.monitor.MonitorService?category=providers&dubbo=2.5.2&interface=com.alibaba.dubbo.monitor.MonitorService&pid=51500&timestamp=1512805752537}, dubbo version: 2.5.2, current host: 127.0.0.1
[INFO ][20171229 15:54:23,919][ZkEventThread:64] Starting ZkClient event thread.
[INFO ][20171229 15:54:23,930][Environment:109] Client environment:zookeeper.version=3.5.3-beta-8ce24f9e675cbefffb8f21a47e06b42864475a60, built on 04/03/2017 16:19 GMT
[INFO ][20171229 15:54:23,932][Environment:109] Client environment:host.name=windows10.microdone.cn
[INFO ][20171229 15:54:23,932][Environment:109] Client environment:java.version=1.8.0_131
[INFO ][20171229 15:54:23,933][Environment:109] Client environment:java.vendor=Oracle Corporation
[INFO ][20171229 15:54:23,934][Environment:109] Client environment:java.home=C:\Program Files\Java\jdk1.8.0_131\jre
[INFO ][20171229 15:54:23,936][Environment:109] Client environment:java.class.path=E:\Idea\gw_lulu\web\gw-web-portal\target\test-classes;E:\Idea\gw_lulu\web\gw-web-portal\target\classes;E:\Laboratory\Maven\repository\com\gw\common\gw-common-base\1.0.0-SHAPSHOT\gw-common-base-1.0.0-SHAPSHOT.jar;E:\Laboratory\Maven\repository\com\gw\facade\gw-facade-user\1.0.0-SHAPSHOT\gw-facade-user-1.0.0-SHAPSHOT.jar;E:\Laboratory\Maven\repository\org\springframework\spring-aop\4.2.3.RELEASE\spring-aop-4.2.3.RELEASE.jar;E:\Laboratory\Maven\repository\org\springframework\spring-aspects\4.2.3.RELEASE\spring-aspects-4.2.3.RELEASE.jar;E:\Laboratory\Maven\repository\org\springframework\spring-beans\4.2.3.RELEASE\spring-beans-4.2.3.RELEASE.jar;E:\Laboratory\Maven\repository\org\springframework\spring-context\4.2.3.RELEASE\spring-context-4.2.3.RELEASE.jar;E:\Laboratory\Maven\repository\org\springframework\spring-context-support\4.2.3.RELEASE\spring-context-support-4.2.3.RELEASE.jar;E:\Laboratory\Maven\repository\org\springframework\spring-core\4.2.3.RELEASE\spring-core-4.2.3.RELEASE.jar;E:\Laboratory\Maven\repository\org\springframework\spring-expression\4.2.3.RELEASE\spring-expression-4.2.3.RELEASE.jar;E:\Laboratory\Maven\repository\org\springframework\spring-instrument\4.2.3.RELEASE\spring-instrument-4.2.3.RELEASE.jar;E:\Laboratory\Maven\repository\org\springframework\spring-instrument-tomcat\4.2.3.RELEASE\spring-instrument-tomcat-4.2.3.RELEASE.jar;E:\Laboratory\Maven\repository\org\springframework\data\spring-data-jpa\1.9.4.RELEASE\spring-data-jpa-1.9.4.RELEASE.jar;E:\Laboratory\Maven\repository\org\springframework\data\spring-data-commons\1.11.4.RELEASE\spring-data-commons-1.11.4.RELEASE.jar;E:\Laboratory\Maven\repository\org\slf4j\jcl-over-slf4j\1.7.13\jcl-over-slf4j-1.7.13.jar;E:\Laboratory\Maven\repository\org\springframework\spring-jms\4.2.3.RELEASE\spring-jms-4.2.3.RELEASE.jar;E:\Laboratory\Maven\repository\org\springframework\spring-messaging\4.2.3.RELEASE\spring-messaging-4.2.3.RELEASE.jar;E:\Laboratory\Maven\repository\org\springframework\spring-orm\4.2.3.RELEASE\spring-orm-4.2.3.RELEASE.jar;E:\Laboratory\Maven\repository\org\springframework\spring-jdbc\4.2.3.RELEASE\spring-jdbc-4.2.3.RELEASE.jar;E:\Laboratory\Maven\repository\org\springframework\spring-oxm\4.2.3.RELEASE\spring-oxm-4.2.3.RELEASE.jar;E:\Laboratory\Maven\repository\org\springframework\spring-tx\4.2.3.RELEASE\spring-tx-4.2.3.RELEASE.jar;E:\Laboratory\Maven\repository\org\springframework\spring-web\4.2.3.RELEASE\spring-web-4.2.3.RELEASE.jar;E:\Laboratory\Maven\repository\org\springframework\spring-webmvc\4.2.3.RELEASE\spring-webmvc-4.2.3.RELEASE.jar;E:\Laboratory\Maven\repository\org\springframework\spring-webmvc-portlet\4.2.3.RELEASE\spring-webmvc-portlet-4.2.3.RELEASE.jar;E:\Laboratory\Maven\repository\org\springframework\spring-test\4.2.3.RELEASE\spring-test-4.2.3.RELEASE.jar;E:\Laboratory\Maven\repository\org\springframework\ws\spring-ws-core\2.3.0.RELEASE\spring-ws-core-2.3.0.RELEASE.jar;E:\Laboratory\Maven\repository\commons-logging\commons-logging\1.1.3\commons-logging-1.1.3.jar;E:\Laboratory\Maven\repository\org\springframework\ws\spring-xml\2.3.0.RELEASE\spring-xml-2.3.0.RELEASE.jar;E:\Laboratory\Maven\repository\org\mybatis\mybatis\3.4.0\mybatis-3.4.0.jar;E:\Laboratory\Maven\repository\org\mybatis\mybatis-spring\1.3.0\mybatis-spring-1.3.0.jar;E:\Laboratory\Maven\repository\org\mybatis\generator\mybatis-generator-core\1.3.5\mybatis-generator-core-1.3.5.jar;E:\Laboratory\Maven\repository\mysql\mysql-connector-java\5.1.9\mysql-connector-java-5.1.9.jar;E:\Laboratory\Maven\repository\com\alibaba\druid\1.0.9\druid-1.0.9.jar;C:\Program Files\Java\jdk1.8.0_131\jre\..\lib\jconsole.jar;C:\Program Files\Java\jdk1.8.0_131\jre\..\lib\tools.jar;E:\Laboratory\Maven\repository\org\jboss\netty\netty\3.2.5.Final\netty-3.2.5.Final.jar;E:\Laboratory\Maven\repository\com\alibaba\dubbo\2.5.2\dubbo-2.5.2.jar;E:\Laboratory\Maven\repository\org\springframework\spring\2.5.6.SEC03\spring-2.5.6.SEC03.jar;E:\Laboratory\Maven\repository\org\javassist\javassist\3.15.0-GA\javassist-3.15.0-GA.jar;E:\Laboratory\Maven\repository\org\apache\zookeeper\zookeeper\3.5.3-beta\zookeeper-3.5.3-beta.jar;E:\Laboratory\Maven\repository\log4j\log4j\1.2.17\log4j-1.2.17.jar;E:\Laboratory\Maven\repository\io\netty\netty\3.10.5.Final\netty-3.10.5.Final.jar;E:\Laboratory\Maven\repository\com\101tec\zkclient\0.9\zkclient-0.9.jar;E:\Laboratory\Maven\repository\org\apache\activemq\activemq-all\5.8.0\activemq-all-5.8.0.jar;E:\Laboratory\Maven\repository\org\apache\activemq\activemq-amqp\5.8.0\activemq-amqp-5.8.0.jar;E:\Laboratory\Maven\repository\org\apache\activemq\activemq-broker\5.8.0\activemq-broker-5.8.0.jar;E:\Laboratory\Maven\repository\org\apache\activemq\activemq-openwire-legacy\5.8.0\activemq-openwire-legacy-5.8.0.jar;E:\Laboratory\Maven\repository\org\fusesource\hawtbuf\hawtbuf\1.9\hawtbuf-1.9.jar;E:\Laboratory\Maven\repository\org\apache\activemq\activemq-pool\5.8.0\activemq-pool-5.8.0.jar;E:\Laboratory\Maven\repository\org\apache\activemq\activemq-client\5.8.0\activemq-client-5.8.0.jar;E:\Laboratory\Maven\repository\org\apache\geronimo\specs\geronimo-jms_1.1_spec\1.1.1\geronimo-jms_1.1_spec-1.1.1.jar;E:\Laboratory\Maven\repository\org\apache\geronimo\specs\geronimo-j2ee-management_1.1_spec\1.0.1\geronimo-j2ee-management_1.1_spec-1.0.1.jar;E:\Laboratory\Maven\repository\org\apache\geronimo\specs\geronimo-jta_1.0.1B_spec\1.0.1\geronimo-jta_1.0.1B_spec-1.0.1.jar;E:\Laboratory\Maven\repository\commons-pool\commons-pool\1.6\commons-pool-1.6.jar;E:\Laboratory\Maven\repository\quartz\quartz\1.6.0\quartz-1.6.0.jar;E:\Laboratory\Maven\repository\org\elasticsearch\client\rest\5.0.0\rest-5.0.0.jar;E:\Laboratory\Maven\repository\org\apache\httpcomponents\httpclient\4.5.2\httpclient-4.5.2.jar;E:\Laboratory\Maven\repository\org\apache\httpcomponents\httpcore\4.4.5\httpcore-4.4.5.jar;E:\Laboratory\Maven\repository\org\apache\httpcomponents\httpasyncclient\4.1.2\httpasyncclient-4.1.2.jar;E:\Laboratory\Maven\repository\org\apache\httpcomponents\httpcore-nio\4.4.5\httpcore-nio-4.4.5.jar;E:\Laboratory\Maven\repository\org\aspectj\aspectjweaver\1.5.4\aspectjweaver-1.5.4.jar;E:\Laboratory\Maven\repository\org\aspectj\aspectjrt\1.5.4\aspectjrt-1.5.4.jar;E:\Laboratory\Maven\repository\junit\junit\4.12\junit-4.12.jar;E:\Laboratory\Maven\repository\org\hamcrest\hamcrest-core\1.3\hamcrest-core-1.3.jar;E:\Laboratory\Maven\repository\javax\servlet\javax.servlet-api\3.1.0\javax.servlet-api-3.1.0.jar;E:\Laboratory\Maven\repository\javax\servlet\jsp\jsp-api\2.2\jsp-api-2.2.jar;E:\Laboratory\Maven\repository\javax\servlet\jstl\1.2\jstl-1.2.jar;E:\Laboratory\Maven\repository\net\sf\jxls\jxls-core\1.0.6\jxls-core-1.0.6.jar;E:\Laboratory\Maven\repository\commons-collections\commons-collections\3.2.1\commons-collections-3.2.1.jar;E:\Laboratory\Maven\repository\org\apache\commons\commons-jexl\2.0.1\commons-jexl-2.0.1.jar;E:\Laboratory\Maven\repository\org\apache\logging\log4j\log4j-api\2.8.2\log4j-api-2.8.2.jar;E:\Laboratory\Maven\repository\org\apache\logging\log4j\log4j-core\2.8.2\log4j-core-2.8.2.jar;E:\Laboratory\Maven\repository\org\slf4j\slf4j-api\1.7.5\slf4j-api-1.7.5.jar;E:\Laboratory\Maven\repository\org\slf4j\slf4j-log4j12\1.7.5\slf4j-log4j12-1.7.5.jar;E:\Laboratory\Maven\repository\org\apache\logging\log4j\log4j-slf4j-impl\2.8.2\log4j-slf4j-impl-2.8.2.jar;E:\Laboratory\Maven\repository\com\google\zxing\core\3.0.0\core-3.0.0.jar;E:\Laboratory\Maven\repository\com\google\zxing\javase\3.0.0\javase-3.0.0.jar;E:\Laboratory\Maven\repository\com\alibaba\fastjson\1.2.6\fastjson-1.2.6.jar;E:\Laboratory\Maven\repository\org\codehaus\jackson\jackson-mapper-asl\1.9.13\jackson-mapper-asl-1.9.13.jar;E:\Laboratory\Maven\repository\org\codehaus\jackson\jackson-core-asl\1.9.13\jackson-core-asl-1.9.13.jar;E:\Laboratory\Maven\repository\org\apache\commons\commons-lang3\3.4\commons-lang3-3.4.jar;E:\Laboratory\Maven\repository\commons-fileupload\commons-fileupload\1.3.1\commons-fileupload-1.3.1.jar;E:\Laboratory\Maven\repository\commons-io\commons-io\2.4\commons-io-2.4.jar;E:\Laboratory\Maven\repository\commons-codec\commons-codec\1.10\commons-codec-1.10.jar;E:\Laboratory\Maven\repository\commons-beanutils\commons-beanutils\1.9.2\commons-beanutils-1.9.2.jar;E:\Laboratory\Maven\repository\org\apache\commons\commons-collections4\4.1\commons-collections4-4.1.jar;E:\Laboratory\Maven\repository\aopalliance\aopalliance\1.0\aopalliance-1.0.jar;E:\Laboratory\Maven\repository\commons-cli\commons-cli\1.2\commons-cli-1.2.jar;E:\Laboratory\Maven\repository\ognl\ognl\3.1.14\ognl-3.1.14.jar;E:\Laboratory\Maven\repository\commons-net\commons-net\3.2\commons-net-3.2.jar;E:\Laboratory\Maven\repository\org\apache\poi\poi\3.15\poi-3.15.jar;E:\Laboratory\Maven\repository\org\apache\poi\poi-ooxml\3.15\poi-ooxml-3.15.jar;E:\Laboratory\Maven\repository\org\apache\poi\poi-ooxml-schemas\3.15\poi-ooxml-schemas-3.15.jar;E:\Laboratory\Maven\repository\org\apache\xmlbeans\xmlbeans\2.6.0\xmlbeans-2.6.0.jar;E:\Laboratory\Maven\repository\stax\stax-api\1.0.1\stax-api-1.0.1.jar;E:\Laboratory\Maven\repository\com\github\virtuald\curvesapi\1.04\curvesapi-1.04.jar;E:\Laboratory\Maven\repository\javax\jms\jms\1.1\jms-1.1.jar;
[INFO ][20171229 15:54:23,939][Environment:109] Client environment:java.library.path=C:\Program Files\Java\jdk1.8.0_131\jre\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\ProgramData\Oracle\Java\javapath;C:\Program Files (x86)\Intel\iCLS Client\;C:\Program Files\Intel\iCLS Client\;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\Program Files\Java\jdk1.8.0_131\bin;D:\Git\Git\cmd;D:\Mysql\mysql-5.6.36-winx64\bin;D:\TortoiseGit\bin;D:\TortoiseSVN\bin;D:\Nodejs\;C:\Users\junlonlu\AppData\Local\Microsoft\WindowsApps;D:\Visual Studio Code\Microsoft VS Code\bin;C:\Users\junlonlu\AppData\Roaming\npm;E:\Laboratory\Maven\apache-maven-3.5.2\bin;.
[INFO ][20171229 15:54:23,939][Environment:109] Client environment:java.io.tmpdir=C:\Users\junlonlu\AppData\Local\Temp\
[INFO ][20171229 15:54:23,939][Environment:109] Client environment:java.compiler=<NA>
[INFO ][20171229 15:54:23,940][Environment:109] Client environment:os.name=Windows 10
[INFO ][20171229 15:54:23,940][Environment:109] Client environment:os.arch=amd64
[INFO ][20171229 15:54:23,940][Environment:109] Client environment:os.version=10.0
[INFO ][20171229 15:54:23,941][Environment:109] Client environment:user.name=junlonlu
[INFO ][20171229 15:54:23,941][Environment:109] Client environment:user.home=C:\Users\junlonlu
[INFO ][20171229 15:54:23,941][Environment:109] Client environment:user.dir=E:\Idea\gw_lulu\web\gw-web-portal
[INFO ][20171229 15:54:23,941][Environment:109] Client environment:os.memory.free=106MB
[INFO ][20171229 15:54:23,942][Environment:109] Client environment:os.memory.max=1799MB
[INFO ][20171229 15:54:23,942][Environment:109] Client environment:os.memory.total=123MB
[INFO ][20171229 15:54:23,946][ZooKeeper:865] Initiating client connection, connectString=127.0.0.1:2181 sessionTimeout=30000 watcher=org.I0Itec.zkclient.ZkClient@1cb346ea
[INFO ][20171229 15:54:24,480][ClientCnxnSocket:236] jute.maxbuffer value is 4194304 Bytes
[INFO ][20171229 15:54:24,485][ZkClient:935] Waiting for keeper state SyncConnected
[INFO ][20171229 15:54:24,490][ClientCnxn$SendThread:1113] Opening socket connection to server 127.0.0.1/127.0.0.1:2181. Will not attempt to authenticate using SASL (unknown error)
[INFO ][20171229 15:54:24,492][ClientCnxn$SendThread:948] Socket connection established, initiating session, client: /127.0.0.1:59383, server: 127.0.0.1/127.0.0.1:2181
[INFO ][20171229 15:54:24,527][ClientCnxn$SendThread:1381] Session establishment complete on server 127.0.0.1/127.0.0.1:2181, sessionid = 0x100b91156730003, negotiated timeout = 30000
[INFO ][20171229 15:54:24,530][ZkClient:712] zookeeper state changed (SyncConnected)
[DEBUG][20171229 15:54:24,537][ExtensionLoader:943]  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class RouterFactory$Adpative implements com.alibaba.dubbo.rpc.cluster.RouterFactory {
public com.alibaba.dubbo.rpc.cluster.Router getRouter(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getProtocol();
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.RouterFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.cluster.RouterFactory extension = (com.alibaba.dubbo.rpc.cluster.RouterFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.RouterFactory.class).getExtension(extName);
return extension.getRouter(arg0);
}
}, dubbo version: 2.5.2, current host: 127.0.0.1
[DEBUG][20171229 15:54:24,547][ExtensionLoader:943]  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ConfiguratorFactory$Adpative implements com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory {
public com.alibaba.dubbo.rpc.cluster.Configurator getConfigurator(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getProtocol();
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory extension = (com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory.class).getExtension(extName);
return extension.getConfigurator(arg0);
}
}, dubbo version: 2.5.2, current host: 127.0.0.1
[INFO ][20171229 15:54:24,556][AbstractRegistry:302]  [DUBBO] Register: consumer://192.168.103.21/com.junlon.facade.user.service.AdminQueryFacade?application=gw-web-portal&category=consumers&check=false&dubbo=2.5.2&interface=com.junlon.facade.user.service.AdminQueryFacade&methods=list&pid=68316&revision=1.0.0-SHAPSHOT&side=consumer&timestamp=1514534063825, dubbo version: 2.5.2, current host: 192.168.103.21
[INFO ][20171229 15:54:24,670][AbstractRegistry:325]  [DUBBO] Subscribe: consumer://192.168.103.21/com.junlon.facade.user.service.AdminQueryFacade?application=gw-web-portal&category=providers,configurators,routers&check=false&dubbo=2.5.2&interface=com.junlon.facade.user.service.AdminQueryFacade&methods=list&pid=68316&revision=1.0.0-SHAPSHOT&side=consumer&timestamp=1514534063825, dubbo version: 2.5.2, current host: 192.168.103.21
[INFO ][20171229 15:54:24,950][AbstractRegistry:422]  [DUBBO] Notify urls for subscribe url consumer://192.168.103.21/com.junlon.facade.user.service.AdminQueryFacade?application=gw-web-portal&category=providers,configurators,routers&check=false&dubbo=2.5.2&interface=com.junlon.facade.user.service.AdminQueryFacade&methods=list&pid=68316&revision=1.0.0-SHAPSHOT&side=consumer&timestamp=1514534063825, urls: [empty://192.168.103.21/com.junlon.facade.user.service.AdminQueryFacade?application=gw-web-portal&category=providers&check=false&dubbo=2.5.2&interface=com.junlon.facade.user.service.AdminQueryFacade&methods=list&pid=68316&revision=1.0.0-SHAPSHOT&side=consumer&timestamp=1514534063825, empty://192.168.103.21/com.junlon.facade.user.service.AdminQueryFacade?application=gw-web-portal&category=configurators&check=false&dubbo=2.5.2&interface=com.junlon.facade.user.service.AdminQueryFacade&methods=list&pid=68316&revision=1.0.0-SHAPSHOT&side=consumer&timestamp=1514534063825, empty://192.168.103.21/com.junlon.facade.user.service.AdminQueryFacade?application=gw-web-portal&category=routers&check=false&dubbo=2.5.2&interface=com.junlon.facade.user.service.AdminQueryFacade&methods=list&pid=68316&revision=1.0.0-SHAPSHOT&side=consumer&timestamp=1514534063825], dubbo version: 2.5.2, current host: 192.168.103.21
[INFO ][20171229 15:54:24,968][ReferenceConfig:423]  [DUBBO] Refer dubbo service com.junlon.facade.user.service.AdminQueryFacade from url zookeeper://127.0.0.1:2181/com.alibaba.dubbo.registry.RegistryService?application=gw-web-portal&check=false&dubbo=2.5.2&interface=com.junlon.facade.user.service.AdminQueryFacade&methods=list&pid=68316&revision=1.0.0-SHAPSHOT&side=consumer&timestamp=1514534063825, dubbo version: 2.5.2, current host: 192.168.103.21
[INFO ][20171229 15:54:24,999][AbstractConfig$1:450]  [DUBBO] Run shutdown hook now., dubbo version: 2.5.2, current host: 192.168.103.21
[INFO ][20171229 15:54:24,999][AbstractApplicationContext:957] Closing org.springframework.context.support.GenericApplicationContext@4d50efb8: startup date [Fri Dec 29 15:54:23 CST 2017]; root of context hierarchy
[INFO ][20171229 15:54:25,000][AbstractRegistryFactory:63]  [DUBBO] Close all registries [zookeeper://127.0.0.1:2181/com.alibaba.dubbo.registry.RegistryService?application=gw-web-portal&dubbo=2.5.2&interface=com.alibaba.dubbo.registry.RegistryService&pid=68316&timestamp=1514534063864], dubbo version: 2.5.2, current host: 192.168.103.21
[INFO ][20171229 15:54:25,001][AbstractRegistry:343]  [DUBBO] Unsubscribe: consumer://192.168.103.21/com.junlon.facade.user.service.AdminQueryFacade?application=gw-web-portal&category=providers,configurators,routers&check=false&dubbo=2.5.2&interface=com.junlon.facade.user.service.AdminQueryFacade&methods=list&pid=68316&revision=1.0.0-SHAPSHOT&side=consumer&timestamp=1514534063825, dubbo version: 2.5.2, current host: 192.168.103.21
[INFO ][20171229 15:54:25,005][AbstractRegistry:485]  [DUBBO] Destroy registry:zookeeper://127.0.0.1:2181/com.alibaba.dubbo.registry.RegistryService?application=gw-web-portal&dubbo=2.5.2&interface=com.alibaba.dubbo.registry.RegistryService&pid=68316&timestamp=1514534063864, dubbo version: 2.5.2, current host: 192.168.103.21
[INFO ][20171229 15:54:25,006][AbstractRegistry:312]  [DUBBO] Unregister: consumer://192.168.103.21/com.junlon.facade.user.service.AdminQueryFacade?application=gw-web-portal&category=consumers&check=false&dubbo=2.5.2&interface=com.junlon.facade.user.service.AdminQueryFacade&methods=list&pid=68316&revision=1.0.0-SHAPSHOT&side=consumer&timestamp=1514534063825, dubbo version: 2.5.2, current host: 192.168.103.21
[INFO ][20171229 15:54:25,045][AbstractRegistry:494]  [DUBBO] Destroy unregister url consumer://192.168.103.21/com.junlon.facade.user.service.AdminQueryFacade?application=gw-web-portal&category=consumers&check=false&dubbo=2.5.2&interface=com.junlon.facade.user.service.AdminQueryFacade&methods=list&pid=68316&revision=1.0.0-SHAPSHOT&side=consumer&timestamp=1514534063825, dubbo version: 2.5.2, current host: 192.168.103.21
[INFO ][20171229 15:54:25,046][ZkEventThread:82] Terminate ZkClient event thread.
[INFO ][20171229 15:54:25,065][ZooKeeper:1326] Session: 0x100b91156730003 closed
[INFO ][20171229 15:54:25,065][ClientCnxn$EventThread:513] EventThread shut down for session: 0x100b91156730003
[INFO ][20171229 16:10:52,104][AbstractTestContextBootstrapper:259] Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]
[INFO ][20171229 16:10:52,150][AbstractTestContextBootstrapper:185] Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@5a8806ef, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@6c49835d, org.springframework.test.context.support.DependencyInjectionTestExecutionListener@5e853265, org.springframework.test.context.support.DirtiesContextTestExecutionListener@67205a84, org.springframework.test.context.transaction.TransactionalTestExecutionListener@7d0587f1, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@5d76b067]
[INFO ][20171229 16:10:52,213][XmlBeanDefinitionReader:317] Loading XML bean definitions from class path resource [spring/spring-context.xml]
[INFO ][20171229 16:10:52,416][XmlBeanDefinitionReader:317] Loading XML bean definitions from class path resource [spring/dubbo/dubbo-consumer.xml]
[INFO ][20171229 16:10:52,463][?:?] using logger: com.alibaba.dubbo.common.logger.log4j.Log4jLoggerAdapter
[INFO ][20171229 16:10:52,494][XmlBeanDefinitionReader:317] Loading XML bean definitions from class path resource [spring/dubbo/dubbo-reference-user.xml]
[INFO ][20171229 16:10:52,526][XmlBeanDefinitionReader:317] Loading XML bean definitions from class path resource [spring/spring-amp.xml]
[INFO ][20171229 16:10:52,557][AbstractApplicationContext:577] Refreshing org.springframework.context.support.GenericApplicationContext@4d50efb8: startup date [Fri Dec 29 16:10:52 CST 2017]; root of context hierarchy
[INFO ][20171229 16:10:52,655][PropertiesLoaderSupport:172] Loading properties file from class path resource [public_system.properties]
[DEBUG][20171229 16:10:52,829][ExtensionLoader:943]  [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Protocol$Adpative implements com.alibaba.dubbo.rpc.Protocol {
public void destroy() {throw new UnsupportedOperationException("method public abstract void com.alibaba.dubbo.rpc.Protocol.destroy() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public int getDefaultPort() {throw new UnsupportedOperationException("method public abstract int com.alibaba.dubbo.rpc.Protocol.getDefaultPort() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public com.alibaba.dubbo.rpc.Invoker refer(java.lang.Class arg0, com.alibaba.dubbo.common.URL arg1) throws java.lang.Class {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.refer(arg0, arg1);
}
public com.alibaba.dubbo.rpc.Exporter export(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.Invoker {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.export(arg0);
}
}, dubbo version: 2.5.2, current host: 127.0.0.1
[DEBUG][20171229 16:10:53,016][ExtensionLoader:943]  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Cluster$Adpative implements com.alibaba.dubbo.rpc.cluster.Cluster {
public com.alibaba.dubbo.rpc.Invoker join(com.alibaba.dubbo.rpc.cluster.Directory arg0) throws com.alibaba.dubbo.rpc.cluster.Directory {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("cluster", "failover");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.Cluster) name from url(" + url.toString() + ") use keys([cluster])");
com.alibaba.dubbo.rpc.cluster.Cluster extension = (com.alibaba.dubbo.rpc.cluster.Cluster)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.Cluster.class).getExtension(extName);
return extension.join(arg0);
}
}, dubbo version: 2.5.2, current host: 127.0.0.1
[DEBUG][20171229 16:10:53,047][ExtensionLoader:943]  [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ProxyFactory$Adpative implements com.alibaba.dubbo.rpc.ProxyFactory {
public java.lang.Object getProxy(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.Invoker {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getProxy(arg0);
}
public com.alibaba.dubbo.rpc.Invoker getInvoker(java.lang.Object arg0, java.lang.Class arg1, com.alibaba.dubbo.common.URL arg2) throws java.lang.Object {
if (arg2 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg2;
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getInvoker(arg0, arg1, arg2);
}
}, dubbo version: 2.5.2, current host: 127.0.0.1
[DEBUG][20171229 16:10:53,444][ExtensionLoader:943]  [DUBBO] package com.alibaba.dubbo.registry;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class RegistryFactory$Adpative implements com.alibaba.dubbo.registry.RegistryFactory {
public com.alibaba.dubbo.registry.Registry getRegistry(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.registry.RegistryFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.registry.RegistryFactory extension = (com.alibaba.dubbo.registry.RegistryFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.registry.RegistryFactory.class).getExtension(extName);
return extension.getRegistry(arg0);
}
}, dubbo version: 2.5.2, current host: 127.0.0.1
[DEBUG][20171229 16:10:53,459][ExtensionLoader:943]  [DUBBO] package com.alibaba.dubbo.remoting.zookeeper;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ZookeeperTransporter$Adpative implements com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter {
public com.alibaba.dubbo.remoting.zookeeper.ZookeeperClient connect(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("client", url.getParameter("transporter", "zkclient"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter) name from url(" + url.toString() + ") use keys([client, transporter])");
com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter extension = (com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter.class).getExtension(extName);
return extension.connect(arg0);
}
}, dubbo version: 2.5.2, current host: 127.0.0.1
[INFO ][20171229 16:10:53,475][AbstractRegistry:232]  [DUBBO] Load registry store file C:\Users\junlonlu\.dubbo\dubbo-registry-127.0.0.1.cache, data: {com.junlon.facade.user.service.AdminQueryFacade=empty://192.168.103.21:20880/com.junlon.facade.user.service.AdminQueryFacade?anyhost=true&application=gw-serivce-user&category=configurators&check=false&default.accepts=1000&default.dispatcher=all&default.retries=0&default.threadpool=fixed&default.threads=1000&default.timeout=30000&dubbo=2.5.2&interface=com.junlon.facade.user.service.AdminQueryFacade&methods=list&pid=46284&retries=0&revision=1.0.0-SHAPSHOT&side=provider&timestamp=1514534492322, com.alibaba.dubbo.monitor.MonitorService=empty://192.168.19.1/com.alibaba.dubbo.monitor.MonitorService?category=configurators&dubbo=2.5.2&interface=com.alibaba.dubbo.monitor.MonitorService&pid=51500&timestamp=1512805752537 empty://192.168.19.1/com.alibaba.dubbo.monitor.MonitorService?category=routers&dubbo=2.5.2&interface=com.alibaba.dubbo.monitor.MonitorService&pid=51500&timestamp=1512805752537 empty://192.168.19.1/com.alibaba.dubbo.monitor.MonitorService?category=providers&dubbo=2.5.2&interface=com.alibaba.dubbo.monitor.MonitorService&pid=51500&timestamp=1512805752537}, dubbo version: 2.5.2, current host: 127.0.0.1
[INFO ][20171229 16:10:53,491][ZkEventThread:64] Starting ZkClient event thread.
[INFO ][20171229 16:10:53,491][Environment:109] Client environment:zookeeper.version=3.5.3-beta-8ce24f9e675cbefffb8f21a47e06b42864475a60, built on 04/03/2017 16:19 GMT
[INFO ][20171229 16:10:53,491][Environment:109] Client environment:host.name=windows10.microdone.cn
[INFO ][20171229 16:10:53,491][Environment:109] Client environment:java.version=1.8.0_131
[INFO ][20171229 16:10:53,491][Environment:109] Client environment:java.vendor=Oracle Corporation
[INFO ][20171229 16:10:53,491][Environment:109] Client environment:java.home=C:\Program Files\Java\jdk1.8.0_131\jre
[INFO ][20171229 16:10:53,506][Environment:109] Client environment:java.class.path=E:\Idea\gw_lulu\web\gw-web-portal\target\test-classes;E:\Idea\gw_lulu\web\gw-web-portal\target\classes;E:\Laboratory\Maven\repository\com\gw\common\gw-common-base\1.0.0-SHAPSHOT\gw-common-base-1.0.0-SHAPSHOT.jar;E:\Laboratory\Maven\repository\com\gw\facade\gw-facade-user\1.0.0-SHAPSHOT\gw-facade-user-1.0.0-SHAPSHOT.jar;E:\Laboratory\Maven\repository\org\springframework\spring-aop\4.2.3.RELEASE\spring-aop-4.2.3.RELEASE.jar;E:\Laboratory\Maven\repository\org\springframework\spring-aspects\4.2.3.RELEASE\spring-aspects-4.2.3.RELEASE.jar;E:\Laboratory\Maven\repository\org\springframework\spring-beans\4.2.3.RELEASE\spring-beans-4.2.3.RELEASE.jar;E:\Laboratory\Maven\repository\org\springframework\spring-context\4.2.3.RELEASE\spring-context-4.2.3.RELEASE.jar;E:\Laboratory\Maven\repository\org\springframework\spring-context-support\4.2.3.RELEASE\spring-context-support-4.2.3.RELEASE.jar;E:\Laboratory\Maven\repository\org\springframework\spring-core\4.2.3.RELEASE\spring-core-4.2.3.RELEASE.jar;E:\Laboratory\Maven\repository\org\springframework\spring-expression\4.2.3.RELEASE\spring-expression-4.2.3.RELEASE.jar;E:\Laboratory\Maven\repository\org\springframework\spring-instrument\4.2.3.RELEASE\spring-instrument-4.2.3.RELEASE.jar;E:\Laboratory\Maven\repository\org\springframework\spring-instrument-tomcat\4.2.3.RELEASE\spring-instrument-tomcat-4.2.3.RELEASE.jar;E:\Laboratory\Maven\repository\org\springframework\data\spring-data-jpa\1.9.4.RELEASE\spring-data-jpa-1.9.4.RELEASE.jar;E:\Laboratory\Maven\repository\org\springframework\data\spring-data-commons\1.11.4.RELEASE\spring-data-commons-1.11.4.RELEASE.jar;E:\Laboratory\Maven\repository\org\slf4j\jcl-over-slf4j\1.7.13\jcl-over-slf4j-1.7.13.jar;E:\Laboratory\Maven\repository\org\springframework\spring-jms\4.2.3.RELEASE\spring-jms-4.2.3.RELEASE.jar;E:\Laboratory\Maven\repository\org\springframework\spring-messaging\4.2.3.RELEASE\spring-messaging-4.2.3.RELEASE.jar;E:\Laboratory\Maven\repository\org\springframework\spring-orm\4.2.3.RELEASE\spring-orm-4.2.3.RELEASE.jar;E:\Laboratory\Maven\repository\org\springframework\spring-jdbc\4.2.3.RELEASE\spring-jdbc-4.2.3.RELEASE.jar;E:\Laboratory\Maven\repository\org\springframework\spring-oxm\4.2.3.RELEASE\spring-oxm-4.2.3.RELEASE.jar;E:\Laboratory\Maven\repository\org\springframework\spring-tx\4.2.3.RELEASE\spring-tx-4.2.3.RELEASE.jar;E:\Laboratory\Maven\repository\org\springframework\spring-web\4.2.3.RELEASE\spring-web-4.2.3.RELEASE.jar;E:\Laboratory\Maven\repository\org\springframework\spring-webmvc\4.2.3.RELEASE\spring-webmvc-4.2.3.RELEASE.jar;E:\Laboratory\Maven\repository\org\springframework\spring-webmvc-portlet\4.2.3.RELEASE\spring-webmvc-portlet-4.2.3.RELEASE.jar;E:\Laboratory\Maven\repository\org\springframework\spring-test\4.2.3.RELEASE\spring-test-4.2.3.RELEASE.jar;E:\Laboratory\Maven\repository\org\springframework\ws\spring-ws-core\2.3.0.RELEASE\spring-ws-core-2.3.0.RELEASE.jar;E:\Laboratory\Maven\repository\commons-logging\commons-logging\1.1.3\commons-logging-1.1.3.jar;E:\Laboratory\Maven\repository\org\springframework\ws\spring-xml\2.3.0.RELEASE\spring-xml-2.3.0.RELEASE.jar;E:\Laboratory\Maven\repository\org\mybatis\mybatis\3.4.0\mybatis-3.4.0.jar;E:\Laboratory\Maven\repository\org\mybatis\mybatis-spring\1.3.0\mybatis-spring-1.3.0.jar;E:\Laboratory\Maven\repository\org\mybatis\generator\mybatis-generator-core\1.3.5\mybatis-generator-core-1.3.5.jar;E:\Laboratory\Maven\repository\mysql\mysql-connector-java\5.1.9\mysql-connector-java-5.1.9.jar;E:\Laboratory\Maven\repository\com\alibaba\druid\1.0.9\druid-1.0.9.jar;C:\Program Files\Java\jdk1.8.0_131\jre\..\lib\jconsole.jar;C:\Program Files\Java\jdk1.8.0_131\jre\..\lib\tools.jar;E:\Laboratory\Maven\repository\org\jboss\netty\netty\3.2.5.Final\netty-3.2.5.Final.jar;E:\Laboratory\Maven\repository\com\alibaba\dubbo\2.5.2\dubbo-2.5.2.jar;E:\Laboratory\Maven\repository\org\springframework\spring\2.5.6.SEC03\spring-2.5.6.SEC03.jar;E:\Laboratory\Maven\repository\org\javassist\javassist\3.15.0-GA\javassist-3.15.0-GA.jar;E:\Laboratory\Maven\repository\org\apache\zookeeper\zookeeper\3.5.3-beta\zookeeper-3.5.3-beta.jar;E:\Laboratory\Maven\repository\log4j\log4j\1.2.17\log4j-1.2.17.jar;E:\Laboratory\Maven\repository\io\netty\netty\3.10.5.Final\netty-3.10.5.Final.jar;E:\Laboratory\Maven\repository\com\101tec\zkclient\0.9\zkclient-0.9.jar;E:\Laboratory\Maven\repository\org\apache\activemq\activemq-all\5.8.0\activemq-all-5.8.0.jar;E:\Laboratory\Maven\repository\org\apache\activemq\activemq-amqp\5.8.0\activemq-amqp-5.8.0.jar;E:\Laboratory\Maven\repository\org\apache\activemq\activemq-broker\5.8.0\activemq-broker-5.8.0.jar;E:\Laboratory\Maven\repository\org\apache\activemq\activemq-openwire-legacy\5.8.0\activemq-openwire-legacy-5.8.0.jar;E:\Laboratory\Maven\repository\org\fusesource\hawtbuf\hawtbuf\1.9\hawtbuf-1.9.jar;E:\Laboratory\Maven\repository\org\apache\activemq\activemq-pool\5.8.0\activemq-pool-5.8.0.jar;E:\Laboratory\Maven\repository\org\apache\activemq\activemq-client\5.8.0\activemq-client-5.8.0.jar;E:\Laboratory\Maven\repository\org\apache\geronimo\specs\geronimo-jms_1.1_spec\1.1.1\geronimo-jms_1.1_spec-1.1.1.jar;E:\Laboratory\Maven\repository\org\apache\geronimo\specs\geronimo-j2ee-management_1.1_spec\1.0.1\geronimo-j2ee-management_1.1_spec-1.0.1.jar;E:\Laboratory\Maven\repository\org\apache\geronimo\specs\geronimo-jta_1.0.1B_spec\1.0.1\geronimo-jta_1.0.1B_spec-1.0.1.jar;E:\Laboratory\Maven\repository\commons-pool\commons-pool\1.6\commons-pool-1.6.jar;E:\Laboratory\Maven\repository\quartz\quartz\1.6.0\quartz-1.6.0.jar;E:\Laboratory\Maven\repository\org\elasticsearch\client\rest\5.0.0\rest-5.0.0.jar;E:\Laboratory\Maven\repository\org\apache\httpcomponents\httpclient\4.5.2\httpclient-4.5.2.jar;E:\Laboratory\Maven\repository\org\apache\httpcomponents\httpcore\4.4.5\httpcore-4.4.5.jar;E:\Laboratory\Maven\repository\org\apache\httpcomponents\httpasyncclient\4.1.2\httpasyncclient-4.1.2.jar;E:\Laboratory\Maven\repository\org\apache\httpcomponents\httpcore-nio\4.4.5\httpcore-nio-4.4.5.jar;E:\Laboratory\Maven\repository\org\aspectj\aspectjweaver\1.5.4\aspectjweaver-1.5.4.jar;E:\Laboratory\Maven\repository\org\aspectj\aspectjrt\1.5.4\aspectjrt-1.5.4.jar;E:\Laboratory\Maven\repository\junit\junit\4.12\junit-4.12.jar;E:\Laboratory\Maven\repository\org\hamcrest\hamcrest-core\1.3\hamcrest-core-1.3.jar;E:\Laboratory\Maven\repository\javax\servlet\javax.servlet-api\3.1.0\javax.servlet-api-3.1.0.jar;E:\Laboratory\Maven\repository\javax\servlet\jsp\jsp-api\2.2\jsp-api-2.2.jar;E:\Laboratory\Maven\repository\javax\servlet\jstl\1.2\jstl-1.2.jar;E:\Laboratory\Maven\repository\net\sf\jxls\jxls-core\1.0.6\jxls-core-1.0.6.jar;E:\Laboratory\Maven\repository\commons-collections\commons-collections\3.2.1\commons-collections-3.2.1.jar;E:\Laboratory\Maven\repository\org\apache\commons\commons-jexl\2.0.1\commons-jexl-2.0.1.jar;E:\Laboratory\Maven\repository\org\apache\logging\log4j\log4j-api\2.8.2\log4j-api-2.8.2.jar;E:\Laboratory\Maven\repository\org\apache\logging\log4j\log4j-core\2.8.2\log4j-core-2.8.2.jar;E:\Laboratory\Maven\repository\org\slf4j\slf4j-api\1.7.5\slf4j-api-1.7.5.jar;E:\Laboratory\Maven\repository\org\slf4j\slf4j-log4j12\1.7.5\slf4j-log4j12-1.7.5.jar;E:\Laboratory\Maven\repository\org\apache\logging\log4j\log4j-slf4j-impl\2.8.2\log4j-slf4j-impl-2.8.2.jar;E:\Laboratory\Maven\repository\com\google\zxing\core\3.0.0\core-3.0.0.jar;E:\Laboratory\Maven\repository\com\google\zxing\javase\3.0.0\javase-3.0.0.jar;E:\Laboratory\Maven\repository\com\alibaba\fastjson\1.2.6\fastjson-1.2.6.jar;E:\Laboratory\Maven\repository\org\codehaus\jackson\jackson-mapper-asl\1.9.13\jackson-mapper-asl-1.9.13.jar;E:\Laboratory\Maven\repository\org\codehaus\jackson\jackson-core-asl\1.9.13\jackson-core-asl-1.9.13.jar;E:\Laboratory\Maven\repository\org\apache\commons\commons-lang3\3.4\commons-lang3-3.4.jar;E:\Laboratory\Maven\repository\commons-fileupload\commons-fileupload\1.3.1\commons-fileupload-1.3.1.jar;E:\Laboratory\Maven\repository\commons-io\commons-io\2.4\commons-io-2.4.jar;E:\Laboratory\Maven\repository\commons-codec\commons-codec\1.10\commons-codec-1.10.jar;E:\Laboratory\Maven\repository\commons-beanutils\commons-beanutils\1.9.2\commons-beanutils-1.9.2.jar;E:\Laboratory\Maven\repository\org\apache\commons\commons-collections4\4.1\commons-collections4-4.1.jar;E:\Laboratory\Maven\repository\aopalliance\aopalliance\1.0\aopalliance-1.0.jar;E:\Laboratory\Maven\repository\commons-cli\commons-cli\1.2\commons-cli-1.2.jar;E:\Laboratory\Maven\repository\ognl\ognl\3.1.14\ognl-3.1.14.jar;E:\Laboratory\Maven\repository\commons-net\commons-net\3.2\commons-net-3.2.jar;E:\Laboratory\Maven\repository\org\apache\poi\poi\3.15\poi-3.15.jar;E:\Laboratory\Maven\repository\org\apache\poi\poi-ooxml\3.15\poi-ooxml-3.15.jar;E:\Laboratory\Maven\repository\org\apache\poi\poi-ooxml-schemas\3.15\poi-ooxml-schemas-3.15.jar;E:\Laboratory\Maven\repository\org\apache\xmlbeans\xmlbeans\2.6.0\xmlbeans-2.6.0.jar;E:\Laboratory\Maven\repository\stax\stax-api\1.0.1\stax-api-1.0.1.jar;E:\Laboratory\Maven\repository\com\github\virtuald\curvesapi\1.04\curvesapi-1.04.jar;E:\Laboratory\Maven\repository\javax\jms\jms\1.1\jms-1.1.jar;
[INFO ][20171229 16:10:53,506][Environment:109] Client environment:java.library.path=C:\Program Files\Java\jdk1.8.0_131\jre\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\ProgramData\Oracle\Java\javapath;C:\Program Files (x86)\Intel\iCLS Client\;C:\Program Files\Intel\iCLS Client\;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\Program Files\Java\jdk1.8.0_131\bin;D:\Git\Git\cmd;D:\Mysql\mysql-5.6.36-winx64\bin;D:\TortoiseGit\bin;D:\TortoiseSVN\bin;D:\Nodejs\;C:\Users\junlonlu\AppData\Local\Microsoft\WindowsApps;D:\Visual Studio Code\Microsoft VS Code\bin;C:\Users\junlonlu\AppData\Roaming\npm;E:\Laboratory\Maven\apache-maven-3.5.2\bin;.
[INFO ][20171229 16:10:53,506][Environment:109] Client environment:java.io.tmpdir=C:\Users\junlonlu\AppData\Local\Temp\
[INFO ][20171229 16:10:53,506][Environment:109] Client environment:java.compiler=<NA>
[INFO ][20171229 16:10:53,506][Environment:109] Client environment:os.name=Windows 10
[INFO ][20171229 16:10:53,506][Environment:109] Client environment:os.arch=amd64
[INFO ][20171229 16:10:53,506][Environment:109] Client environment:os.version=10.0
[INFO ][20171229 16:10:53,506][Environment:109] Client environment:user.name=junlonlu
[INFO ][20171229 16:10:53,506][Environment:109] Client environment:user.home=C:\Users\junlonlu
[INFO ][20171229 16:10:53,506][Environment:109] Client environment:user.dir=E:\Idea\gw_lulu\web\gw-web-portal
[INFO ][20171229 16:10:53,506][Environment:109] Client environment:os.memory.free=106MB
[INFO ][20171229 16:10:53,506][Environment:109] Client environment:os.memory.max=1799MB
[INFO ][20171229 16:10:53,506][Environment:109] Client environment:os.memory.total=123MB
[INFO ][20171229 16:10:53,506][ZooKeeper:865] Initiating client connection, connectString=127.0.0.1:2181 sessionTimeout=30000 watcher=org.I0Itec.zkclient.ZkClient@1cb346ea
[INFO ][20171229 16:10:53,771][ClientCnxnSocket:236] jute.maxbuffer value is 4194304 Bytes
[INFO ][20171229 16:10:53,776][ZkClient:935] Waiting for keeper state SyncConnected
[INFO ][20171229 16:10:53,780][ClientCnxn$SendThread:1113] Opening socket connection to server 127.0.0.1/127.0.0.1:2181. Will not attempt to authenticate using SASL (unknown error)
[INFO ][20171229 16:10:53,781][ClientCnxn$SendThread:948] Socket connection established, initiating session, client: /127.0.0.1:60003, server: 127.0.0.1/127.0.0.1:2181
[INFO ][20171229 16:10:53,840][ClientCnxn$SendThread:1381] Session establishment complete on server 127.0.0.1/127.0.0.1:2181, sessionid = 0x100b91156730007, negotiated timeout = 30000
[INFO ][20171229 16:10:53,856][ZkClient:712] zookeeper state changed (SyncConnected)
[DEBUG][20171229 16:10:53,871][ExtensionLoader:943]  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class RouterFactory$Adpative implements com.alibaba.dubbo.rpc.cluster.RouterFactory {
public com.alibaba.dubbo.rpc.cluster.Router getRouter(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getProtocol();
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.RouterFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.cluster.RouterFactory extension = (com.alibaba.dubbo.rpc.cluster.RouterFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.RouterFactory.class).getExtension(extName);
return extension.getRouter(arg0);
}
}, dubbo version: 2.5.2, current host: 127.0.0.1
[DEBUG][20171229 16:10:53,887][ExtensionLoader:943]  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ConfiguratorFactory$Adpative implements com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory {
public com.alibaba.dubbo.rpc.cluster.Configurator getConfigurator(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getProtocol();
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory extension = (com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory.class).getExtension(extName);
return extension.getConfigurator(arg0);
}
}, dubbo version: 2.5.2, current host: 127.0.0.1
[INFO ][20171229 16:10:53,902][AbstractRegistry:302]  [DUBBO] Register: consumer://192.168.103.21/com.junlon.facade.user.service.AdminQueryFacade?application=gw-web-portal&category=consumers&check=false&dubbo=2.5.2&interface=com.junlon.facade.user.service.AdminQueryFacade&methods=list&pid=48320&revision=1.0.0-SHAPSHOT&side=consumer&timestamp=1514535053405, dubbo version: 2.5.2, current host: 192.168.103.21
[INFO ][20171229 16:10:54,012][AbstractRegistry:325]  [DUBBO] Subscribe: consumer://192.168.103.21/com.junlon.facade.user.service.AdminQueryFacade?application=gw-web-portal&category=providers,configurators,routers&check=false&dubbo=2.5.2&interface=com.junlon.facade.user.service.AdminQueryFacade&methods=list&pid=48320&revision=1.0.0-SHAPSHOT&side=consumer&timestamp=1514535053405, dubbo version: 2.5.2, current host: 192.168.103.21
[INFO ][20171229 16:10:54,231][AbstractRegistry:422]  [DUBBO] Notify urls for subscribe url consumer://192.168.103.21/com.junlon.facade.user.service.AdminQueryFacade?application=gw-web-portal&category=providers,configurators,routers&check=false&dubbo=2.5.2&interface=com.junlon.facade.user.service.AdminQueryFacade&methods=list&pid=48320&revision=1.0.0-SHAPSHOT&side=consumer&timestamp=1514535053405, urls: [empty://192.168.103.21/com.junlon.facade.user.service.AdminQueryFacade?application=gw-web-portal&category=providers&check=false&dubbo=2.5.2&interface=com.junlon.facade.user.service.AdminQueryFacade&methods=list&pid=48320&revision=1.0.0-SHAPSHOT&side=consumer&timestamp=1514535053405, empty://192.168.103.21/com.junlon.facade.user.service.AdminQueryFacade?application=gw-web-portal&category=configurators&check=false&dubbo=2.5.2&interface=com.junlon.facade.user.service.AdminQueryFacade&methods=list&pid=48320&revision=1.0.0-SHAPSHOT&side=consumer&timestamp=1514535053405, empty://192.168.103.21/com.junlon.facade.user.service.AdminQueryFacade?application=gw-web-portal&category=routers&check=false&dubbo=2.5.2&interface=com.junlon.facade.user.service.AdminQueryFacade&methods=list&pid=48320&revision=1.0.0-SHAPSHOT&side=consumer&timestamp=1514535053405], dubbo version: 2.5.2, current host: 192.168.103.21
[INFO ][20171229 16:10:54,246][ReferenceConfig:423]  [DUBBO] Refer dubbo service com.junlon.facade.user.service.AdminQueryFacade from url zookeeper://127.0.0.1:2181/com.alibaba.dubbo.registry.RegistryService?application=gw-web-portal&check=false&dubbo=2.5.2&interface=com.junlon.facade.user.service.AdminQueryFacade&methods=list&pid=48320&revision=1.0.0-SHAPSHOT&side=consumer&timestamp=1514535053405, dubbo version: 2.5.2, current host: 192.168.103.21
[INFO ][20171229 16:10:54,278][AbstractConfig$1:450]  [DUBBO] Run shutdown hook now., dubbo version: 2.5.2, current host: 192.168.103.21
[INFO ][20171229 16:10:54,278][AbstractApplicationContext:957] Closing org.springframework.context.support.GenericApplicationContext@4d50efb8: startup date [Fri Dec 29 16:10:52 CST 2017]; root of context hierarchy
[INFO ][20171229 16:10:54,278][AbstractRegistryFactory:63]  [DUBBO] Close all registries [zookeeper://127.0.0.1:2181/com.alibaba.dubbo.registry.RegistryService?application=gw-web-portal&dubbo=2.5.2&interface=com.alibaba.dubbo.registry.RegistryService&pid=48320&timestamp=1514535053444], dubbo version: 2.5.2, current host: 192.168.103.21
[INFO ][20171229 16:10:54,278][AbstractRegistry:485]  [DUBBO] Destroy registry:zookeeper://127.0.0.1:2181/com.alibaba.dubbo.registry.RegistryService?application=gw-web-portal&dubbo=2.5.2&interface=com.alibaba.dubbo.registry.RegistryService&pid=48320&timestamp=1514535053444, dubbo version: 2.5.2, current host: 192.168.103.21
[INFO ][20171229 16:10:54,278][AbstractRegistry:312]  [DUBBO] Unregister: consumer://192.168.103.21/com.junlon.facade.user.service.AdminQueryFacade?application=gw-web-portal&category=consumers&check=false&dubbo=2.5.2&interface=com.junlon.facade.user.service.AdminQueryFacade&methods=list&pid=48320&revision=1.0.0-SHAPSHOT&side=consumer&timestamp=1514535053405, dubbo version: 2.5.2, current host: 192.168.103.21
[INFO ][20171229 16:10:54,278][AbstractRegistry:343]  [DUBBO] Unsubscribe: consumer://192.168.103.21/com.junlon.facade.user.service.AdminQueryFacade?application=gw-web-portal&category=providers,configurators,routers&check=false&dubbo=2.5.2&interface=com.junlon.facade.user.service.AdminQueryFacade&methods=list&pid=48320&revision=1.0.0-SHAPSHOT&side=consumer&timestamp=1514535053405, dubbo version: 2.5.2, current host: 192.168.103.21
[INFO ][20171229 16:10:54,309][AbstractRegistry:494]  [DUBBO] Destroy unregister url consumer://192.168.103.21/com.junlon.facade.user.service.AdminQueryFacade?application=gw-web-portal&category=consumers&check=false&dubbo=2.5.2&interface=com.junlon.facade.user.service.AdminQueryFacade&methods=list&pid=48320&revision=1.0.0-SHAPSHOT&side=consumer&timestamp=1514535053405, dubbo version: 2.5.2, current host: 192.168.103.21
[INFO ][20171229 16:10:54,309][ZkEventThread:82] Terminate ZkClient event thread.
[INFO ][20171229 16:10:54,324][ZooKeeper:1326] Session: 0x100b91156730007 closed
[INFO ][20171229 16:10:54,324][ClientCnxn$EventThread:513] EventThread shut down for session: 0x100b91156730007
[INFO ][20171229 16:16:24,521][AbstractTestContextBootstrapper:259] Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]
[INFO ][20171229 16:16:24,599][AbstractTestContextBootstrapper:185] Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@5a8806ef, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@6c49835d, org.springframework.test.context.support.DependencyInjectionTestExecutionListener@5e853265, org.springframework.test.context.support.DirtiesContextTestExecutionListener@67205a84, org.springframework.test.context.transaction.TransactionalTestExecutionListener@7d0587f1, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@5d76b067]
[INFO ][20171229 16:16:24,708][XmlBeanDefinitionReader:317] Loading XML bean definitions from class path resource [spring/spring-context.xml]
[INFO ][20171229 16:16:24,907][XmlBeanDefinitionReader:317] Loading XML bean definitions from class path resource [spring/dubbo/dubbo-consumer.xml]
[INFO ][20171229 16:16:24,938][?:?] using logger: com.alibaba.dubbo.common.logger.log4j.Log4jLoggerAdapter
[INFO ][20171229 16:16:24,954][XmlBeanDefinitionReader:317] Loading XML bean definitions from class path resource [spring/dubbo/dubbo-reference-user.xml]
[INFO ][20171229 16:16:24,985][XmlBeanDefinitionReader:317] Loading XML bean definitions from class path resource [spring/spring-amp.xml]
[INFO ][20171229 16:16:25,001][AbstractApplicationContext:577] Refreshing org.springframework.context.support.GenericApplicationContext@4d50efb8: startup date [Fri Dec 29 16:16:25 CST 2017]; root of context hierarchy
[INFO ][20171229 16:16:25,121][PropertiesLoaderSupport:172] Loading properties file from class path resource [public_system.properties]
[DEBUG][20171229 16:16:25,246][ExtensionLoader:943]  [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Protocol$Adpative implements com.alibaba.dubbo.rpc.Protocol {
public void destroy() {throw new UnsupportedOperationException("method public abstract void com.alibaba.dubbo.rpc.Protocol.destroy() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public int getDefaultPort() {throw new UnsupportedOperationException("method public abstract int com.alibaba.dubbo.rpc.Protocol.getDefaultPort() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public com.alibaba.dubbo.rpc.Invoker refer(java.lang.Class arg0, com.alibaba.dubbo.common.URL arg1) throws java.lang.Class {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.refer(arg0, arg1);
}
public com.alibaba.dubbo.rpc.Exporter export(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.Invoker {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.export(arg0);
}
}, dubbo version: 2.5.2, current host: 127.0.0.1
[DEBUG][20171229 16:16:25,355][ExtensionLoader:943]  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Cluster$Adpative implements com.alibaba.dubbo.rpc.cluster.Cluster {
public com.alibaba.dubbo.rpc.Invoker join(com.alibaba.dubbo.rpc.cluster.Directory arg0) throws com.alibaba.dubbo.rpc.cluster.Directory {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("cluster", "failover");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.Cluster) name from url(" + url.toString() + ") use keys([cluster])");
com.alibaba.dubbo.rpc.cluster.Cluster extension = (com.alibaba.dubbo.rpc.cluster.Cluster)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.Cluster.class).getExtension(extName);
return extension.join(arg0);
}
}, dubbo version: 2.5.2, current host: 127.0.0.1
[DEBUG][20171229 16:16:25,386][ExtensionLoader:943]  [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ProxyFactory$Adpative implements com.alibaba.dubbo.rpc.ProxyFactory {
public java.lang.Object getProxy(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.Invoker {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getProxy(arg0);
}
public com.alibaba.dubbo.rpc.Invoker getInvoker(java.lang.Object arg0, java.lang.Class arg1, com.alibaba.dubbo.common.URL arg2) throws java.lang.Object {
if (arg2 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg2;
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getInvoker(arg0, arg1, arg2);
}
}, dubbo version: 2.5.2, current host: 127.0.0.1
[DEBUG][20171229 16:16:25,588][ExtensionLoader:943]  [DUBBO] package com.alibaba.dubbo.registry;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class RegistryFactory$Adpative implements com.alibaba.dubbo.registry.RegistryFactory {
public com.alibaba.dubbo.registry.Registry getRegistry(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.registry.RegistryFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.registry.RegistryFactory extension = (com.alibaba.dubbo.registry.RegistryFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.registry.RegistryFactory.class).getExtension(extName);
return extension.getRegistry(arg0);
}
}, dubbo version: 2.5.2, current host: 127.0.0.1
[DEBUG][20171229 16:16:25,604][ExtensionLoader:943]  [DUBBO] package com.alibaba.dubbo.remoting.zookeeper;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ZookeeperTransporter$Adpative implements com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter {
public com.alibaba.dubbo.remoting.zookeeper.ZookeeperClient connect(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("client", url.getParameter("transporter", "zkclient"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter) name from url(" + url.toString() + ") use keys([client, transporter])");
com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter extension = (com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter.class).getExtension(extName);
return extension.connect(arg0);
}
}, dubbo version: 2.5.2, current host: 127.0.0.1
[INFO ][20171229 16:16:25,627][AbstractRegistry:232]  [DUBBO] Load registry store file C:\Users\junlonlu\.dubbo\dubbo-registry-127.0.0.1.cache, data: {com.junlon.facade.user.service.AdminQueryFacade=empty://192.168.103.21/com.junlon.facade.user.service.AdminQueryFacade?application=gw-web-portal&category=configurators&check=false&dubbo=2.5.2&interface=com.junlon.facade.user.service.AdminQueryFacade&methods=list&pid=48320&revision=1.0.0-SHAPSHOT&side=consumer&timestamp=1514535053405 empty://192.168.103.21/com.junlon.facade.user.service.AdminQueryFacade?application=gw-web-portal&category=routers&check=false&dubbo=2.5.2&interface=com.junlon.facade.user.service.AdminQueryFacade&methods=list&pid=48320&revision=1.0.0-SHAPSHOT&side=consumer&timestamp=1514535053405 empty://192.168.103.21/com.junlon.facade.user.service.AdminQueryFacade?application=gw-web-portal&category=providers&check=false&dubbo=2.5.2&interface=com.junlon.facade.user.service.AdminQueryFacade&methods=list&pid=48320&revision=1.0.0-SHAPSHOT&side=consumer&timestamp=1514535053405, com.alibaba.dubbo.monitor.MonitorService=empty://192.168.19.1/com.alibaba.dubbo.monitor.MonitorService?category=configurators&dubbo=2.5.2&interface=com.alibaba.dubbo.monitor.MonitorService&pid=51500&timestamp=1512805752537 empty://192.168.19.1/com.alibaba.dubbo.monitor.MonitorService?category=routers&dubbo=2.5.2&interface=com.alibaba.dubbo.monitor.MonitorService&pid=51500&timestamp=1512805752537 empty://192.168.19.1/com.alibaba.dubbo.monitor.MonitorService?category=providers&dubbo=2.5.2&interface=com.alibaba.dubbo.monitor.MonitorService&pid=51500&timestamp=1512805752537}, dubbo version: 2.5.2, current host: 127.0.0.1
[INFO ][20171229 16:16:25,642][ZkEventThread:64] Starting ZkClient event thread.
[INFO ][20171229 16:16:25,658][Environment:109] Client environment:zookeeper.version=3.5.3-beta-8ce24f9e675cbefffb8f21a47e06b42864475a60, built on 04/03/2017 16:19 GMT
[INFO ][20171229 16:16:25,658][Environment:109] Client environment:host.name=windows10.microdone.cn
[INFO ][20171229 16:16:25,658][Environment:109] Client environment:java.version=1.8.0_131
[INFO ][20171229 16:16:25,658][Environment:109] Client environment:java.vendor=Oracle Corporation
[INFO ][20171229 16:16:25,658][Environment:109] Client environment:java.home=C:\Program Files\Java\jdk1.8.0_131\jre
[INFO ][20171229 16:16:25,658][Environment:109] Client environment:java.class.path=E:\Idea\gw_lulu\web\gw-web-portal\target\test-classes;E:\Idea\gw_lulu\web\gw-web-portal\target\classes;E:\Laboratory\Maven\repository\com\gw\common\gw-common-base\1.0.0-SHAPSHOT\gw-common-base-1.0.0-SHAPSHOT.jar;E:\Laboratory\Maven\repository\com\gw\facade\gw-facade-user\1.0.0-SHAPSHOT\gw-facade-user-1.0.0-SHAPSHOT.jar;E:\Laboratory\Maven\repository\org\springframework\spring-aop\4.2.3.RELEASE\spring-aop-4.2.3.RELEASE.jar;E:\Laboratory\Maven\repository\org\springframework\spring-aspects\4.2.3.RELEASE\spring-aspects-4.2.3.RELEASE.jar;E:\Laboratory\Maven\repository\org\springframework\spring-beans\4.2.3.RELEASE\spring-beans-4.2.3.RELEASE.jar;E:\Laboratory\Maven\repository\org\springframework\spring-context\4.2.3.RELEASE\spring-context-4.2.3.RELEASE.jar;E:\Laboratory\Maven\repository\org\springframework\spring-context-support\4.2.3.RELEASE\spring-context-support-4.2.3.RELEASE.jar;E:\Laboratory\Maven\repository\org\springframework\spring-core\4.2.3.RELEASE\spring-core-4.2.3.RELEASE.jar;E:\Laboratory\Maven\repository\org\springframework\spring-expression\4.2.3.RELEASE\spring-expression-4.2.3.RELEASE.jar;E:\Laboratory\Maven\repository\org\springframework\spring-instrument\4.2.3.RELEASE\spring-instrument-4.2.3.RELEASE.jar;E:\Laboratory\Maven\repository\org\springframework\spring-instrument-tomcat\4.2.3.RELEASE\spring-instrument-tomcat-4.2.3.RELEASE.jar;E:\Laboratory\Maven\repository\org\springframework\data\spring-data-jpa\1.9.4.RELEASE\spring-data-jpa-1.9.4.RELEASE.jar;E:\Laboratory\Maven\repository\org\springframework\data\spring-data-commons\1.11.4.RELEASE\spring-data-commons-1.11.4.RELEASE.jar;E:\Laboratory\Maven\repository\org\slf4j\jcl-over-slf4j\1.7.13\jcl-over-slf4j-1.7.13.jar;E:\Laboratory\Maven\repository\org\springframework\spring-jms\4.2.3.RELEASE\spring-jms-4.2.3.RELEASE.jar;E:\Laboratory\Maven\repository\org\springframework\spring-messaging\4.2.3.RELEASE\spring-messaging-4.2.3.RELEASE.jar;E:\Laboratory\Maven\repository\org\springframework\spring-orm\4.2.3.RELEASE\spring-orm-4.2.3.RELEASE.jar;E:\Laboratory\Maven\repository\org\springframework\spring-jdbc\4.2.3.RELEASE\spring-jdbc-4.2.3.RELEASE.jar;E:\Laboratory\Maven\repository\org\springframework\spring-oxm\4.2.3.RELEASE\spring-oxm-4.2.3.RELEASE.jar;E:\Laboratory\Maven\repository\org\springframework\spring-tx\4.2.3.RELEASE\spring-tx-4.2.3.RELEASE.jar;E:\Laboratory\Maven\repository\org\springframework\spring-web\4.2.3.RELEASE\spring-web-4.2.3.RELEASE.jar;E:\Laboratory\Maven\repository\org\springframework\spring-webmvc\4.2.3.RELEASE\spring-webmvc-4.2.3.RELEASE.jar;E:\Laboratory\Maven\repository\org\springframework\spring-webmvc-portlet\4.2.3.RELEASE\spring-webmvc-portlet-4.2.3.RELEASE.jar;E:\Laboratory\Maven\repository\org\springframework\spring-test\4.2.3.RELEASE\spring-test-4.2.3.RELEASE.jar;E:\Laboratory\Maven\repository\org\springframework\ws\spring-ws-core\2.3.0.RELEASE\spring-ws-core-2.3.0.RELEASE.jar;E:\Laboratory\Maven\repository\commons-logging\commons-logging\1.1.3\commons-logging-1.1.3.jar;E:\Laboratory\Maven\repository\org\springframework\ws\spring-xml\2.3.0.RELEASE\spring-xml-2.3.0.RELEASE.jar;E:\Laboratory\Maven\repository\org\mybatis\mybatis\3.4.0\mybatis-3.4.0.jar;E:\Laboratory\Maven\repository\org\mybatis\mybatis-spring\1.3.0\mybatis-spring-1.3.0.jar;E:\Laboratory\Maven\repository\org\mybatis\generator\mybatis-generator-core\1.3.5\mybatis-generator-core-1.3.5.jar;E:\Laboratory\Maven\repository\mysql\mysql-connector-java\5.1.9\mysql-connector-java-5.1.9.jar;E:\Laboratory\Maven\repository\com\alibaba\druid\1.0.9\druid-1.0.9.jar;C:\Program Files\Java\jdk1.8.0_131\jre\..\lib\jconsole.jar;C:\Program Files\Java\jdk1.8.0_131\jre\..\lib\tools.jar;E:\Laboratory\Maven\repository\org\jboss\netty\netty\3.2.5.Final\netty-3.2.5.Final.jar;E:\Laboratory\Maven\repository\com\alibaba\dubbo\2.5.2\dubbo-2.5.2.jar;E:\Laboratory\Maven\repository\org\springframework\spring\2.5.6.SEC03\spring-2.5.6.SEC03.jar;E:\Laboratory\Maven\repository\org\javassist\javassist\3.15.0-GA\javassist-3.15.0-GA.jar;E:\Laboratory\Maven\repository\org\apache\zookeeper\zookeeper\3.5.3-beta\zookeeper-3.5.3-beta.jar;E:\Laboratory\Maven\repository\log4j\log4j\1.2.17\log4j-1.2.17.jar;E:\Laboratory\Maven\repository\io\netty\netty\3.10.5.Final\netty-3.10.5.Final.jar;E:\Laboratory\Maven\repository\com\101tec\zkclient\0.9\zkclient-0.9.jar;E:\Laboratory\Maven\repository\org\apache\activemq\activemq-all\5.8.0\activemq-all-5.8.0.jar;E:\Laboratory\Maven\repository\org\apache\activemq\activemq-amqp\5.8.0\activemq-amqp-5.8.0.jar;E:\Laboratory\Maven\repository\org\apache\activemq\activemq-broker\5.8.0\activemq-broker-5.8.0.jar;E:\Laboratory\Maven\repository\org\apache\activemq\activemq-openwire-legacy\5.8.0\activemq-openwire-legacy-5.8.0.jar;E:\Laboratory\Maven\repository\org\fusesource\hawtbuf\hawtbuf\1.9\hawtbuf-1.9.jar;E:\Laboratory\Maven\repository\org\apache\activemq\activemq-pool\5.8.0\activemq-pool-5.8.0.jar;E:\Laboratory\Maven\repository\org\apache\activemq\activemq-client\5.8.0\activemq-client-5.8.0.jar;E:\Laboratory\Maven\repository\org\apache\geronimo\specs\geronimo-jms_1.1_spec\1.1.1\geronimo-jms_1.1_spec-1.1.1.jar;E:\Laboratory\Maven\repository\org\apache\geronimo\specs\geronimo-j2ee-management_1.1_spec\1.0.1\geronimo-j2ee-management_1.1_spec-1.0.1.jar;E:\Laboratory\Maven\repository\org\apache\geronimo\specs\geronimo-jta_1.0.1B_spec\1.0.1\geronimo-jta_1.0.1B_spec-1.0.1.jar;E:\Laboratory\Maven\repository\commons-pool\commons-pool\1.6\commons-pool-1.6.jar;E:\Laboratory\Maven\repository\quartz\quartz\1.6.0\quartz-1.6.0.jar;E:\Laboratory\Maven\repository\org\elasticsearch\client\rest\5.0.0\rest-5.0.0.jar;E:\Laboratory\Maven\repository\org\apache\httpcomponents\httpclient\4.5.2\httpclient-4.5.2.jar;E:\Laboratory\Maven\repository\org\apache\httpcomponents\httpcore\4.4.5\httpcore-4.4.5.jar;E:\Laboratory\Maven\repository\org\apache\httpcomponents\httpasyncclient\4.1.2\httpasyncclient-4.1.2.jar;E:\Laboratory\Maven\repository\org\apache\httpcomponents\httpcore-nio\4.4.5\httpcore-nio-4.4.5.jar;E:\Laboratory\Maven\repository\org\aspectj\aspectjweaver\1.5.4\aspectjweaver-1.5.4.jar;E:\Laboratory\Maven\repository\org\aspectj\aspectjrt\1.5.4\aspectjrt-1.5.4.jar;E:\Laboratory\Maven\repository\junit\junit\4.12\junit-4.12.jar;E:\Laboratory\Maven\repository\org\hamcrest\hamcrest-core\1.3\hamcrest-core-1.3.jar;E:\Laboratory\Maven\repository\javax\servlet\javax.servlet-api\3.1.0\javax.servlet-api-3.1.0.jar;E:\Laboratory\Maven\repository\javax\servlet\jsp\jsp-api\2.2\jsp-api-2.2.jar;E:\Laboratory\Maven\repository\javax\servlet\jstl\1.2\jstl-1.2.jar;E:\Laboratory\Maven\repository\net\sf\jxls\jxls-core\1.0.6\jxls-core-1.0.6.jar;E:\Laboratory\Maven\repository\commons-collections\commons-collections\3.2.1\commons-collections-3.2.1.jar;E:\Laboratory\Maven\repository\org\apache\commons\commons-jexl\2.0.1\commons-jexl-2.0.1.jar;E:\Laboratory\Maven\repository\org\apache\logging\log4j\log4j-api\2.8.2\log4j-api-2.8.2.jar;E:\Laboratory\Maven\repository\org\apache\logging\log4j\log4j-core\2.8.2\log4j-core-2.8.2.jar;E:\Laboratory\Maven\repository\org\slf4j\slf4j-api\1.7.5\slf4j-api-1.7.5.jar;E:\Laboratory\Maven\repository\org\slf4j\slf4j-log4j12\1.7.5\slf4j-log4j12-1.7.5.jar;E:\Laboratory\Maven\repository\org\apache\logging\log4j\log4j-slf4j-impl\2.8.2\log4j-slf4j-impl-2.8.2.jar;E:\Laboratory\Maven\repository\com\google\zxing\core\3.0.0\core-3.0.0.jar;E:\Laboratory\Maven\repository\com\google\zxing\javase\3.0.0\javase-3.0.0.jar;E:\Laboratory\Maven\repository\com\alibaba\fastjson\1.2.6\fastjson-1.2.6.jar;E:\Laboratory\Maven\repository\org\codehaus\jackson\jackson-mapper-asl\1.9.13\jackson-mapper-asl-1.9.13.jar;E:\Laboratory\Maven\repository\org\codehaus\jackson\jackson-core-asl\1.9.13\jackson-core-asl-1.9.13.jar;E:\Laboratory\Maven\repository\org\apache\commons\commons-lang3\3.4\commons-lang3-3.4.jar;E:\Laboratory\Maven\repository\commons-fileupload\commons-fileupload\1.3.1\commons-fileupload-1.3.1.jar;E:\Laboratory\Maven\repository\commons-io\commons-io\2.4\commons-io-2.4.jar;E:\Laboratory\Maven\repository\commons-codec\commons-codec\1.10\commons-codec-1.10.jar;E:\Laboratory\Maven\repository\commons-beanutils\commons-beanutils\1.9.2\commons-beanutils-1.9.2.jar;E:\Laboratory\Maven\repository\org\apache\commons\commons-collections4\4.1\commons-collections4-4.1.jar;E:\Laboratory\Maven\repository\aopalliance\aopalliance\1.0\aopalliance-1.0.jar;E:\Laboratory\Maven\repository\commons-cli\commons-cli\1.2\commons-cli-1.2.jar;E:\Laboratory\Maven\repository\ognl\ognl\3.1.14\ognl-3.1.14.jar;E:\Laboratory\Maven\repository\commons-net\commons-net\3.2\commons-net-3.2.jar;E:\Laboratory\Maven\repository\org\apache\poi\poi\3.15\poi-3.15.jar;E:\Laboratory\Maven\repository\org\apache\poi\poi-ooxml\3.15\poi-ooxml-3.15.jar;E:\Laboratory\Maven\repository\org\apache\poi\poi-ooxml-schemas\3.15\poi-ooxml-schemas-3.15.jar;E:\Laboratory\Maven\repository\org\apache\xmlbeans\xmlbeans\2.6.0\xmlbeans-2.6.0.jar;E:\Laboratory\Maven\repository\stax\stax-api\1.0.1\stax-api-1.0.1.jar;E:\Laboratory\Maven\repository\com\github\virtuald\curvesapi\1.04\curvesapi-1.04.jar;E:\Laboratory\Maven\repository\javax\jms\jms\1.1\jms-1.1.jar;
[INFO ][20171229 16:16:25,658][Environment:109] Client environment:java.library.path=C:\Program Files\Java\jdk1.8.0_131\jre\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\ProgramData\Oracle\Java\javapath;C:\Program Files (x86)\Intel\iCLS Client\;C:\Program Files\Intel\iCLS Client\;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\Program Files\Java\jdk1.8.0_131\bin;D:\Git\Git\cmd;D:\Mysql\mysql-5.6.36-winx64\bin;D:\TortoiseGit\bin;D:\TortoiseSVN\bin;D:\Nodejs\;C:\Users\junlonlu\AppData\Local\Microsoft\WindowsApps;D:\Visual Studio Code\Microsoft VS Code\bin;C:\Users\junlonlu\AppData\Roaming\npm;E:\Laboratory\Maven\apache-maven-3.5.2\bin;.
[INFO ][20171229 16:16:25,658][Environment:109] Client environment:java.io.tmpdir=C:\Users\junlonlu\AppData\Local\Temp\
[INFO ][20171229 16:16:25,658][Environment:109] Client environment:java.compiler=<NA>
[INFO ][20171229 16:16:25,658][Environment:109] Client environment:os.name=Windows 10
[INFO ][20171229 16:16:25,658][Environment:109] Client environment:os.arch=amd64
[INFO ][20171229 16:16:25,658][Environment:109] Client environment:os.version=10.0
[INFO ][20171229 16:16:25,658][Environment:109] Client environment:user.name=junlonlu
[INFO ][20171229 16:16:25,658][Environment:109] Client environment:user.home=C:\Users\junlonlu
[INFO ][20171229 16:16:25,658][Environment:109] Client environment:user.dir=E:\Idea\gw_lulu\web\gw-web-portal
[INFO ][20171229 16:16:25,658][Environment:109] Client environment:os.memory.free=107MB
[INFO ][20171229 16:16:25,658][Environment:109] Client environment:os.memory.max=1799MB
[INFO ][20171229 16:16:25,658][Environment:109] Client environment:os.memory.total=123MB
[INFO ][20171229 16:16:25,658][ZooKeeper:865] Initiating client connection, connectString=127.0.0.1:2181 sessionTimeout=30000 watcher=org.I0Itec.zkclient.ZkClient@5e21e98f
[INFO ][20171229 16:16:25,933][ClientCnxnSocket:236] jute.maxbuffer value is 4194304 Bytes
[INFO ][20171229 16:16:25,949][ZkClient:935] Waiting for keeper state SyncConnected
[INFO ][20171229 16:16:25,949][ClientCnxn$SendThread:1113] Opening socket connection to server 127.0.0.1/127.0.0.1:2181. Will not attempt to authenticate using SASL (unknown error)
[INFO ][20171229 16:16:25,949][ClientCnxn$SendThread:948] Socket connection established, initiating session, client: /127.0.0.1:60128, server: 127.0.0.1/127.0.0.1:2181
[INFO ][20171229 16:16:26,045][ClientCnxn$SendThread:1381] Session establishment complete on server 127.0.0.1/127.0.0.1:2181, sessionid = 0x100b91156730008, negotiated timeout = 30000
[INFO ][20171229 16:16:26,061][ZkClient:712] zookeeper state changed (SyncConnected)
[DEBUG][20171229 16:16:26,077][ExtensionLoader:943]  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class RouterFactory$Adpative implements com.alibaba.dubbo.rpc.cluster.RouterFactory {
public com.alibaba.dubbo.rpc.cluster.Router getRouter(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getProtocol();
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.RouterFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.cluster.RouterFactory extension = (com.alibaba.dubbo.rpc.cluster.RouterFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.RouterFactory.class).getExtension(extName);
return extension.getRouter(arg0);
}
}, dubbo version: 2.5.2, current host: 127.0.0.1
[DEBUG][20171229 16:16:26,092][ExtensionLoader:943]  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ConfiguratorFactory$Adpative implements com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory {
public com.alibaba.dubbo.rpc.cluster.Configurator getConfigurator(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getProtocol();
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory extension = (com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory.class).getExtension(extName);
return extension.getConfigurator(arg0);
}
}, dubbo version: 2.5.2, current host: 127.0.0.1
[INFO ][20171229 16:16:26,092][AbstractRegistry:302]  [DUBBO] Register: consumer://192.168.103.21/com.junlon.facade.user.service.AdminQueryFacade?application=gw-web-portal&category=consumers&check=false&dubbo=2.5.2&interface=com.junlon.facade.user.service.AdminQueryFacade&methods=list&pid=8956&revision=1.0.0-SHAPSHOT&side=consumer&timestamp=1514535385511, dubbo version: 2.5.2, current host: 192.168.103.21
[INFO ][20171229 16:16:26,218][AbstractRegistry:325]  [DUBBO] Subscribe: consumer://192.168.103.21/com.junlon.facade.user.service.AdminQueryFacade?application=gw-web-portal&category=providers,configurators,routers&check=false&dubbo=2.5.2&interface=com.junlon.facade.user.service.AdminQueryFacade&methods=list&pid=8956&revision=1.0.0-SHAPSHOT&side=consumer&timestamp=1514535385511, dubbo version: 2.5.2, current host: 192.168.103.21
[INFO ][20171229 16:16:26,452][AbstractRegistry:422]  [DUBBO] Notify urls for subscribe url consumer://192.168.103.21/com.junlon.facade.user.service.AdminQueryFacade?application=gw-web-portal&category=providers,configurators,routers&check=false&dubbo=2.5.2&interface=com.junlon.facade.user.service.AdminQueryFacade&methods=list&pid=8956&revision=1.0.0-SHAPSHOT&side=consumer&timestamp=1514535385511, urls: [empty://192.168.103.21/com.junlon.facade.user.service.AdminQueryFacade?application=gw-web-portal&category=providers&check=false&dubbo=2.5.2&interface=com.junlon.facade.user.service.AdminQueryFacade&methods=list&pid=8956&revision=1.0.0-SHAPSHOT&side=consumer&timestamp=1514535385511, empty://192.168.103.21/com.junlon.facade.user.service.AdminQueryFacade?application=gw-web-portal&category=configurators&check=false&dubbo=2.5.2&interface=com.junlon.facade.user.service.AdminQueryFacade&methods=list&pid=8956&revision=1.0.0-SHAPSHOT&side=consumer&timestamp=1514535385511, empty://192.168.103.21/com.junlon.facade.user.service.AdminQueryFacade?application=gw-web-portal&category=routers&check=false&dubbo=2.5.2&interface=com.junlon.facade.user.service.AdminQueryFacade&methods=list&pid=8956&revision=1.0.0-SHAPSHOT&side=consumer&timestamp=1514535385511], dubbo version: 2.5.2, current host: 192.168.103.21
[INFO ][20171229 16:16:26,467][ReferenceConfig:423]  [DUBBO] Refer dubbo service com.junlon.facade.user.service.AdminQueryFacade from url zookeeper://127.0.0.1:2181/com.alibaba.dubbo.registry.RegistryService?application=gw-web-portal&check=false&dubbo=2.5.2&interface=com.junlon.facade.user.service.AdminQueryFacade&methods=list&pid=8956&revision=1.0.0-SHAPSHOT&side=consumer&timestamp=1514535385511, dubbo version: 2.5.2, current host: 192.168.103.21
[INFO ][20171229 16:16:26,483][AbstractApplicationContext:957] Closing org.springframework.context.support.GenericApplicationContext@4d50efb8: startup date [Fri Dec 29 16:16:25 CST 2017]; root of context hierarchy
[INFO ][20171229 16:16:26,483][AbstractConfig$1:450]  [DUBBO] Run shutdown hook now., dubbo version: 2.5.2, current host: 192.168.103.21
[INFO ][20171229 16:16:26,483][AbstractRegistryFactory:63]  [DUBBO] Close all registries [zookeeper://127.0.0.1:2181/com.alibaba.dubbo.registry.RegistryService?application=gw-web-portal&dubbo=2.5.2&interface=com.alibaba.dubbo.registry.RegistryService&pid=8956&timestamp=1514535385558], dubbo version: 2.5.2, current host: 192.168.103.21
[INFO ][20171229 16:16:26,483][AbstractRegistry:485]  [DUBBO] Destroy registry:zookeeper://127.0.0.1:2181/com.alibaba.dubbo.registry.RegistryService?application=gw-web-portal&dubbo=2.5.2&interface=com.alibaba.dubbo.registry.RegistryService&pid=8956&timestamp=1514535385558, dubbo version: 2.5.2, current host: 192.168.103.21
[INFO ][20171229 16:16:26,483][AbstractRegistry:312]  [DUBBO] Unregister: consumer://192.168.103.21/com.junlon.facade.user.service.AdminQueryFacade?application=gw-web-portal&category=consumers&check=false&dubbo=2.5.2&interface=com.junlon.facade.user.service.AdminQueryFacade&methods=list&pid=8956&revision=1.0.0-SHAPSHOT&side=consumer&timestamp=1514535385511, dubbo version: 2.5.2, current host: 192.168.103.21
[INFO ][20171229 16:16:26,483][AbstractRegistry:343]  [DUBBO] Unsubscribe: consumer://192.168.103.21/com.junlon.facade.user.service.AdminQueryFacade?application=gw-web-portal&category=providers,configurators,routers&check=false&dubbo=2.5.2&interface=com.junlon.facade.user.service.AdminQueryFacade&methods=list&pid=8956&revision=1.0.0-SHAPSHOT&side=consumer&timestamp=1514535385511, dubbo version: 2.5.2, current host: 192.168.103.21
[INFO ][20171229 16:16:26,514][AbstractRegistry:494]  [DUBBO] Destroy unregister url consumer://192.168.103.21/com.junlon.facade.user.service.AdminQueryFacade?application=gw-web-portal&category=consumers&check=false&dubbo=2.5.2&interface=com.junlon.facade.user.service.AdminQueryFacade&methods=list&pid=8956&revision=1.0.0-SHAPSHOT&side=consumer&timestamp=1514535385511, dubbo version: 2.5.2, current host: 192.168.103.21
[INFO ][20171229 16:16:26,514][ZkEventThread:82] Terminate ZkClient event thread.
[INFO ][20171229 16:16:26,530][ZooKeeper:1326] Session: 0x100b91156730008 closed
[INFO ][20171229 16:16:26,530][ClientCnxn$EventThread:513] EventThread shut down for session: 0x100b91156730008
[INFO ][20171229 16:18:22,278][AbstractTestContextBootstrapper:259] Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]
[INFO ][20171229 16:18:22,340][AbstractTestContextBootstrapper:185] Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@5a8806ef, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@6c49835d, org.springframework.test.context.support.DependencyInjectionTestExecutionListener@5e853265, org.springframework.test.context.support.DirtiesContextTestExecutionListener@67205a84, org.springframework.test.context.transaction.TransactionalTestExecutionListener@7d0587f1, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@5d76b067]
[INFO ][20171229 16:18:22,434][XmlBeanDefinitionReader:317] Loading XML bean definitions from class path resource [spring/spring-context.xml]
[INFO ][20171229 16:18:22,622][XmlBeanDefinitionReader:317] Loading XML bean definitions from class path resource [spring/dubbo/dubbo-consumer.xml]
[INFO ][20171229 16:18:22,669][?:?] using logger: com.alibaba.dubbo.common.logger.log4j.Log4jLoggerAdapter
[INFO ][20171229 16:18:22,700][XmlBeanDefinitionReader:317] Loading XML bean definitions from class path resource [spring/dubbo/dubbo-reference-user.xml]
[INFO ][20171229 16:18:22,715][XmlBeanDefinitionReader:317] Loading XML bean definitions from class path resource [spring/spring-amp.xml]
[INFO ][20171229 16:18:22,751][AbstractApplicationContext:577] Refreshing org.springframework.context.support.GenericApplicationContext@4d50efb8: startup date [Fri Dec 29 16:18:22 CST 2017]; root of context hierarchy
[INFO ][20171229 16:18:22,853][PropertiesLoaderSupport:172] Loading properties file from class path resource [public_system.properties]
[DEBUG][20171229 16:18:22,978][ExtensionLoader:943]  [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Protocol$Adpative implements com.alibaba.dubbo.rpc.Protocol {
public void destroy() {throw new UnsupportedOperationException("method public abstract void com.alibaba.dubbo.rpc.Protocol.destroy() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public int getDefaultPort() {throw new UnsupportedOperationException("method public abstract int com.alibaba.dubbo.rpc.Protocol.getDefaultPort() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public com.alibaba.dubbo.rpc.Invoker refer(java.lang.Class arg0, com.alibaba.dubbo.common.URL arg1) throws java.lang.Class {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.refer(arg0, arg1);
}
public com.alibaba.dubbo.rpc.Exporter export(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.Invoker {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.export(arg0);
}
}, dubbo version: 2.5.2, current host: 127.0.0.1
[DEBUG][20171229 16:18:23,103][ExtensionLoader:943]  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Cluster$Adpative implements com.alibaba.dubbo.rpc.cluster.Cluster {
public com.alibaba.dubbo.rpc.Invoker join(com.alibaba.dubbo.rpc.cluster.Directory arg0) throws com.alibaba.dubbo.rpc.cluster.Directory {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("cluster", "failover");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.Cluster) name from url(" + url.toString() + ") use keys([cluster])");
com.alibaba.dubbo.rpc.cluster.Cluster extension = (com.alibaba.dubbo.rpc.cluster.Cluster)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.Cluster.class).getExtension(extName);
return extension.join(arg0);
}
}, dubbo version: 2.5.2, current host: 127.0.0.1
[DEBUG][20171229 16:18:23,119][ExtensionLoader:943]  [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ProxyFactory$Adpative implements com.alibaba.dubbo.rpc.ProxyFactory {
public java.lang.Object getProxy(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.Invoker {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getProxy(arg0);
}
public com.alibaba.dubbo.rpc.Invoker getInvoker(java.lang.Object arg0, java.lang.Class arg1, com.alibaba.dubbo.common.URL arg2) throws java.lang.Object {
if (arg2 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg2;
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getInvoker(arg0, arg1, arg2);
}
}, dubbo version: 2.5.2, current host: 127.0.0.1
[DEBUG][20171229 16:18:23,306][ExtensionLoader:943]  [DUBBO] package com.alibaba.dubbo.registry;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class RegistryFactory$Adpative implements com.alibaba.dubbo.registry.RegistryFactory {
public com.alibaba.dubbo.registry.Registry getRegistry(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.registry.RegistryFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.registry.RegistryFactory extension = (com.alibaba.dubbo.registry.RegistryFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.registry.RegistryFactory.class).getExtension(extName);
return extension.getRegistry(arg0);
}
}, dubbo version: 2.5.2, current host: 127.0.0.1
[DEBUG][20171229 16:18:23,322][ExtensionLoader:943]  [DUBBO] package com.alibaba.dubbo.remoting.zookeeper;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ZookeeperTransporter$Adpative implements com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter {
public com.alibaba.dubbo.remoting.zookeeper.ZookeeperClient connect(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("client", url.getParameter("transporter", "zkclient"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter) name from url(" + url.toString() + ") use keys([client, transporter])");
com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter extension = (com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter.class).getExtension(extName);
return extension.connect(arg0);
}
}, dubbo version: 2.5.2, current host: 127.0.0.1
[INFO ][20171229 16:18:23,353][AbstractRegistry:232]  [DUBBO] Load registry store file C:\Users\junlonlu\.dubbo\dubbo-registry-127.0.0.1.cache, data: {com.junlon.facade.user.service.AdminQueryFacade=empty://192.168.103.21:20880/com.junlon.facade.user.service.AdminQueryFacade?anyhost=true&application=gw-serivce-user&category=configurators&check=false&default.accepts=1000&default.dispatcher=all&default.retries=0&default.threadpool=fixed&default.threads=1000&default.timeout=30000&dubbo=2.5.2&interface=com.junlon.facade.user.service.AdminQueryFacade&methods=list&pid=69276&retries=0&revision=1.0.0-SHAPSHOT&side=provider&timestamp=1514535454682, com.alibaba.dubbo.monitor.MonitorService=empty://192.168.19.1/com.alibaba.dubbo.monitor.MonitorService?category=configurators&dubbo=2.5.2&interface=com.alibaba.dubbo.monitor.MonitorService&pid=51500&timestamp=1512805752537 empty://192.168.19.1/com.alibaba.dubbo.monitor.MonitorService?category=routers&dubbo=2.5.2&interface=com.alibaba.dubbo.monitor.MonitorService&pid=51500&timestamp=1512805752537 empty://192.168.19.1/com.alibaba.dubbo.monitor.MonitorService?category=providers&dubbo=2.5.2&interface=com.alibaba.dubbo.monitor.MonitorService&pid=51500&timestamp=1512805752537}, dubbo version: 2.5.2, current host: 127.0.0.1
[INFO ][20171229 16:18:23,369][ZkEventThread:64] Starting ZkClient event thread.
[INFO ][20171229 16:18:23,369][Environment:109] Client environment:zookeeper.version=3.5.3-beta-8ce24f9e675cbefffb8f21a47e06b42864475a60, built on 04/03/2017 16:19 GMT
[INFO ][20171229 16:18:23,384][Environment:109] Client environment:host.name=windows10.microdone.cn
[INFO ][20171229 16:18:23,384][Environment:109] Client environment:java.version=1.8.0_131
[INFO ][20171229 16:18:23,384][Environment:109] Client environment:java.vendor=Oracle Corporation
[INFO ][20171229 16:18:23,384][Environment:109] Client environment:java.home=C:\Program Files\Java\jdk1.8.0_131\jre
[INFO ][20171229 16:18:23,384][Environment:109] Client environment:java.class.path=E:\Idea\gw_lulu\web\gw-web-portal\target\test-classes;E:\Idea\gw_lulu\web\gw-web-portal\target\classes;E:\Laboratory\Maven\repository\com\gw\common\gw-common-base\1.0.0-SHAPSHOT\gw-common-base-1.0.0-SHAPSHOT.jar;E:\Laboratory\Maven\repository\com\gw\facade\gw-facade-user\1.0.0-SHAPSHOT\gw-facade-user-1.0.0-SHAPSHOT.jar;E:\Laboratory\Maven\repository\org\springframework\spring-aop\4.2.3.RELEASE\spring-aop-4.2.3.RELEASE.jar;E:\Laboratory\Maven\repository\org\springframework\spring-aspects\4.2.3.RELEASE\spring-aspects-4.2.3.RELEASE.jar;E:\Laboratory\Maven\repository\org\springframework\spring-beans\4.2.3.RELEASE\spring-beans-4.2.3.RELEASE.jar;E:\Laboratory\Maven\repository\org\springframework\spring-context\4.2.3.RELEASE\spring-context-4.2.3.RELEASE.jar;E:\Laboratory\Maven\repository\org\springframework\spring-context-support\4.2.3.RELEASE\spring-context-support-4.2.3.RELEASE.jar;E:\Laboratory\Maven\repository\org\springframework\spring-core\4.2.3.RELEASE\spring-core-4.2.3.RELEASE.jar;E:\Laboratory\Maven\repository\org\springframework\spring-expression\4.2.3.RELEASE\spring-expression-4.2.3.RELEASE.jar;E:\Laboratory\Maven\repository\org\springframework\spring-instrument\4.2.3.RELEASE\spring-instrument-4.2.3.RELEASE.jar;E:\Laboratory\Maven\repository\org\springframework\spring-instrument-tomcat\4.2.3.RELEASE\spring-instrument-tomcat-4.2.3.RELEASE.jar;E:\Laboratory\Maven\repository\org\springframework\data\spring-data-jpa\1.9.4.RELEASE\spring-data-jpa-1.9.4.RELEASE.jar;E:\Laboratory\Maven\repository\org\springframework\data\spring-data-commons\1.11.4.RELEASE\spring-data-commons-1.11.4.RELEASE.jar;E:\Laboratory\Maven\repository\org\slf4j\jcl-over-slf4j\1.7.13\jcl-over-slf4j-1.7.13.jar;E:\Laboratory\Maven\repository\org\springframework\spring-jms\4.2.3.RELEASE\spring-jms-4.2.3.RELEASE.jar;E:\Laboratory\Maven\repository\org\springframework\spring-messaging\4.2.3.RELEASE\spring-messaging-4.2.3.RELEASE.jar;E:\Laboratory\Maven\repository\org\springframework\spring-orm\4.2.3.RELEASE\spring-orm-4.2.3.RELEASE.jar;E:\Laboratory\Maven\repository\org\springframework\spring-jdbc\4.2.3.RELEASE\spring-jdbc-4.2.3.RELEASE.jar;E:\Laboratory\Maven\repository\org\springframework\spring-oxm\4.2.3.RELEASE\spring-oxm-4.2.3.RELEASE.jar;E:\Laboratory\Maven\repository\org\springframework\spring-tx\4.2.3.RELEASE\spring-tx-4.2.3.RELEASE.jar;E:\Laboratory\Maven\repository\org\springframework\spring-web\4.2.3.RELEASE\spring-web-4.2.3.RELEASE.jar;E:\Laboratory\Maven\repository\org\springframework\spring-webmvc\4.2.3.RELEASE\spring-webmvc-4.2.3.RELEASE.jar;E:\Laboratory\Maven\repository\org\springframework\spring-webmvc-portlet\4.2.3.RELEASE\spring-webmvc-portlet-4.2.3.RELEASE.jar;E:\Laboratory\Maven\repository\org\springframework\spring-test\4.2.3.RELEASE\spring-test-4.2.3.RELEASE.jar;E:\Laboratory\Maven\repository\org\springframework\ws\spring-ws-core\2.3.0.RELEASE\spring-ws-core-2.3.0.RELEASE.jar;E:\Laboratory\Maven\repository\commons-logging\commons-logging\1.1.3\commons-logging-1.1.3.jar;E:\Laboratory\Maven\repository\org\springframework\ws\spring-xml\2.3.0.RELEASE\spring-xml-2.3.0.RELEASE.jar;E:\Laboratory\Maven\repository\org\mybatis\mybatis\3.4.0\mybatis-3.4.0.jar;E:\Laboratory\Maven\repository\org\mybatis\mybatis-spring\1.3.0\mybatis-spring-1.3.0.jar;E:\Laboratory\Maven\repository\org\mybatis\generator\mybatis-generator-core\1.3.5\mybatis-generator-core-1.3.5.jar;E:\Laboratory\Maven\repository\mysql\mysql-connector-java\5.1.9\mysql-connector-java-5.1.9.jar;E:\Laboratory\Maven\repository\com\alibaba\druid\1.0.9\druid-1.0.9.jar;C:\Program Files\Java\jdk1.8.0_131\jre\..\lib\jconsole.jar;C:\Program Files\Java\jdk1.8.0_131\jre\..\lib\tools.jar;E:\Laboratory\Maven\repository\org\jboss\netty\netty\3.2.5.Final\netty-3.2.5.Final.jar;E:\Laboratory\Maven\repository\com\alibaba\dubbo\2.5.2\dubbo-2.5.2.jar;E:\Laboratory\Maven\repository\org\springframework\spring\2.5.6.SEC03\spring-2.5.6.SEC03.jar;E:\Laboratory\Maven\repository\org\javassist\javassist\3.15.0-GA\javassist-3.15.0-GA.jar;E:\Laboratory\Maven\repository\org\apache\zookeeper\zookeeper\3.5.3-beta\zookeeper-3.5.3-beta.jar;E:\Laboratory\Maven\repository\log4j\log4j\1.2.17\log4j-1.2.17.jar;E:\Laboratory\Maven\repository\io\netty\netty\3.10.5.Final\netty-3.10.5.Final.jar;E:\Laboratory\Maven\repository\com\101tec\zkclient\0.9\zkclient-0.9.jar;E:\Laboratory\Maven\repository\org\apache\activemq\activemq-all\5.8.0\activemq-all-5.8.0.jar;E:\Laboratory\Maven\repository\org\apache\activemq\activemq-amqp\5.8.0\activemq-amqp-5.8.0.jar;E:\Laboratory\Maven\repository\org\apache\activemq\activemq-broker\5.8.0\activemq-broker-5.8.0.jar;E:\Laboratory\Maven\repository\org\apache\activemq\activemq-openwire-legacy\5.8.0\activemq-openwire-legacy-5.8.0.jar;E:\Laboratory\Maven\repository\org\fusesource\hawtbuf\hawtbuf\1.9\hawtbuf-1.9.jar;E:\Laboratory\Maven\repository\org\apache\activemq\activemq-pool\5.8.0\activemq-pool-5.8.0.jar;E:\Laboratory\Maven\repository\org\apache\activemq\activemq-client\5.8.0\activemq-client-5.8.0.jar;E:\Laboratory\Maven\repository\org\apache\geronimo\specs\geronimo-jms_1.1_spec\1.1.1\geronimo-jms_1.1_spec-1.1.1.jar;E:\Laboratory\Maven\repository\org\apache\geronimo\specs\geronimo-j2ee-management_1.1_spec\1.0.1\geronimo-j2ee-management_1.1_spec-1.0.1.jar;E:\Laboratory\Maven\repository\org\apache\geronimo\specs\geronimo-jta_1.0.1B_spec\1.0.1\geronimo-jta_1.0.1B_spec-1.0.1.jar;E:\Laboratory\Maven\repository\commons-pool\commons-pool\1.6\commons-pool-1.6.jar;E:\Laboratory\Maven\repository\quartz\quartz\1.6.0\quartz-1.6.0.jar;E:\Laboratory\Maven\repository\org\elasticsearch\client\rest\5.0.0\rest-5.0.0.jar;E:\Laboratory\Maven\repository\org\apache\httpcomponents\httpclient\4.5.2\httpclient-4.5.2.jar;E:\Laboratory\Maven\repository\org\apache\httpcomponents\httpcore\4.4.5\httpcore-4.4.5.jar;E:\Laboratory\Maven\repository\org\apache\httpcomponents\httpasyncclient\4.1.2\httpasyncclient-4.1.2.jar;E:\Laboratory\Maven\repository\org\apache\httpcomponents\httpcore-nio\4.4.5\httpcore-nio-4.4.5.jar;E:\Laboratory\Maven\repository\org\aspectj\aspectjweaver\1.5.4\aspectjweaver-1.5.4.jar;E:\Laboratory\Maven\repository\org\aspectj\aspectjrt\1.5.4\aspectjrt-1.5.4.jar;E:\Laboratory\Maven\repository\junit\junit\4.12\junit-4.12.jar;E:\Laboratory\Maven\repository\org\hamcrest\hamcrest-core\1.3\hamcrest-core-1.3.jar;E:\Laboratory\Maven\repository\javax\servlet\javax.servlet-api\3.1.0\javax.servlet-api-3.1.0.jar;E:\Laboratory\Maven\repository\javax\servlet\jsp\jsp-api\2.2\jsp-api-2.2.jar;E:\Laboratory\Maven\repository\javax\servlet\jstl\1.2\jstl-1.2.jar;E:\Laboratory\Maven\repository\net\sf\jxls\jxls-core\1.0.6\jxls-core-1.0.6.jar;E:\Laboratory\Maven\repository\commons-collections\commons-collections\3.2.1\commons-collections-3.2.1.jar;E:\Laboratory\Maven\repository\org\apache\commons\commons-jexl\2.0.1\commons-jexl-2.0.1.jar;E:\Laboratory\Maven\repository\org\apache\logging\log4j\log4j-api\2.8.2\log4j-api-2.8.2.jar;E:\Laboratory\Maven\repository\org\apache\logging\log4j\log4j-core\2.8.2\log4j-core-2.8.2.jar;E:\Laboratory\Maven\repository\org\slf4j\slf4j-api\1.7.5\slf4j-api-1.7.5.jar;E:\Laboratory\Maven\repository\org\slf4j\slf4j-log4j12\1.7.5\slf4j-log4j12-1.7.5.jar;E:\Laboratory\Maven\repository\org\apache\logging\log4j\log4j-slf4j-impl\2.8.2\log4j-slf4j-impl-2.8.2.jar;E:\Laboratory\Maven\repository\com\google\zxing\core\3.0.0\core-3.0.0.jar;E:\Laboratory\Maven\repository\com\google\zxing\javase\3.0.0\javase-3.0.0.jar;E:\Laboratory\Maven\repository\com\alibaba\fastjson\1.2.6\fastjson-1.2.6.jar;E:\Laboratory\Maven\repository\org\codehaus\jackson\jackson-mapper-asl\1.9.13\jackson-mapper-asl-1.9.13.jar;E:\Laboratory\Maven\repository\org\codehaus\jackson\jackson-core-asl\1.9.13\jackson-core-asl-1.9.13.jar;E:\Laboratory\Maven\repository\org\apache\commons\commons-lang3\3.4\commons-lang3-3.4.jar;E:\Laboratory\Maven\repository\commons-fileupload\commons-fileupload\1.3.1\commons-fileupload-1.3.1.jar;E:\Laboratory\Maven\repository\commons-io\commons-io\2.4\commons-io-2.4.jar;E:\Laboratory\Maven\repository\commons-codec\commons-codec\1.10\commons-codec-1.10.jar;E:\Laboratory\Maven\repository\commons-beanutils\commons-beanutils\1.9.2\commons-beanutils-1.9.2.jar;E:\Laboratory\Maven\repository\org\apache\commons\commons-collections4\4.1\commons-collections4-4.1.jar;E:\Laboratory\Maven\repository\aopalliance\aopalliance\1.0\aopalliance-1.0.jar;E:\Laboratory\Maven\repository\commons-cli\commons-cli\1.2\commons-cli-1.2.jar;E:\Laboratory\Maven\repository\ognl\ognl\3.1.14\ognl-3.1.14.jar;E:\Laboratory\Maven\repository\commons-net\commons-net\3.2\commons-net-3.2.jar;E:\Laboratory\Maven\repository\org\apache\poi\poi\3.15\poi-3.15.jar;E:\Laboratory\Maven\repository\org\apache\poi\poi-ooxml\3.15\poi-ooxml-3.15.jar;E:\Laboratory\Maven\repository\org\apache\poi\poi-ooxml-schemas\3.15\poi-ooxml-schemas-3.15.jar;E:\Laboratory\Maven\repository\org\apache\xmlbeans\xmlbeans\2.6.0\xmlbeans-2.6.0.jar;E:\Laboratory\Maven\repository\stax\stax-api\1.0.1\stax-api-1.0.1.jar;E:\Laboratory\Maven\repository\com\github\virtuald\curvesapi\1.04\curvesapi-1.04.jar;E:\Laboratory\Maven\repository\javax\jms\jms\1.1\jms-1.1.jar;
[INFO ][20171229 16:18:23,384][Environment:109] Client environment:java.library.path=C:\Program Files\Java\jdk1.8.0_131\jre\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\ProgramData\Oracle\Java\javapath;C:\Program Files (x86)\Intel\iCLS Client\;C:\Program Files\Intel\iCLS Client\;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\Program Files\Java\jdk1.8.0_131\bin;D:\Git\Git\cmd;D:\Mysql\mysql-5.6.36-winx64\bin;D:\TortoiseGit\bin;D:\TortoiseSVN\bin;D:\Nodejs\;C:\Users\junlonlu\AppData\Local\Microsoft\WindowsApps;D:\Visual Studio Code\Microsoft VS Code\bin;C:\Users\junlonlu\AppData\Roaming\npm;E:\Laboratory\Maven\apache-maven-3.5.2\bin;.
[INFO ][20171229 16:18:23,384][Environment:109] Client environment:java.io.tmpdir=C:\Users\junlonlu\AppData\Local\Temp\
[INFO ][20171229 16:18:23,384][Environment:109] Client environment:java.compiler=<NA>
[INFO ][20171229 16:18:23,384][Environment:109] Client environment:os.name=Windows 10
[INFO ][20171229 16:18:23,384][Environment:109] Client environment:os.arch=amd64
[INFO ][20171229 16:18:23,384][Environment:109] Client environment:os.version=10.0
[INFO ][20171229 16:18:23,384][Environment:109] Client environment:user.name=junlonlu
[INFO ][20171229 16:18:23,384][Environment:109] Client environment:user.home=C:\Users\junlonlu
[INFO ][20171229 16:18:23,384][Environment:109] Client environment:user.dir=E:\Idea\gw_lulu\web\gw-web-portal
[INFO ][20171229 16:18:23,384][Environment:109] Client environment:os.memory.free=107MB
[INFO ][20171229 16:18:23,384][Environment:109] Client environment:os.memory.max=1799MB
[INFO ][20171229 16:18:23,384][Environment:109] Client environment:os.memory.total=123MB
[INFO ][20171229 16:18:23,384][ZooKeeper:865] Initiating client connection, connectString=127.0.0.1:2181 sessionTimeout=30000 watcher=org.I0Itec.zkclient.ZkClient@5e21e98f
[INFO ][20171229 16:18:23,650][ClientCnxnSocket:236] jute.maxbuffer value is 4194304 Bytes
[INFO ][20171229 16:18:23,650][ZkClient:935] Waiting for keeper state SyncConnected
[INFO ][20171229 16:18:23,666][ClientCnxn$SendThread:1113] Opening socket connection to server 127.0.0.1/127.0.0.1:2181. Will not attempt to authenticate using SASL (unknown error)
[INFO ][20171229 16:18:23,666][ClientCnxn$SendThread:948] Socket connection established, initiating session, client: /127.0.0.1:60192, server: 127.0.0.1/127.0.0.1:2181
[INFO ][20171229 16:18:23,681][ClientCnxn$SendThread:1381] Session establishment complete on server 127.0.0.1/127.0.0.1:2181, sessionid = 0x100b9115673000a, negotiated timeout = 30000
[INFO ][20171229 16:18:23,697][ZkClient:712] zookeeper state changed (SyncConnected)
[DEBUG][20171229 16:18:23,697][ExtensionLoader:943]  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class RouterFactory$Adpative implements com.alibaba.dubbo.rpc.cluster.RouterFactory {
public com.alibaba.dubbo.rpc.cluster.Router getRouter(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getProtocol();
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.RouterFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.cluster.RouterFactory extension = (com.alibaba.dubbo.rpc.cluster.RouterFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.RouterFactory.class).getExtension(extName);
return extension.getRouter(arg0);
}
}, dubbo version: 2.5.2, current host: 127.0.0.1
[DEBUG][20171229 16:18:23,713][ExtensionLoader:943]  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ConfiguratorFactory$Adpative implements com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory {
public com.alibaba.dubbo.rpc.cluster.Configurator getConfigurator(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getProtocol();
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory extension = (com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory.class).getExtension(extName);
return extension.getConfigurator(arg0);
}
}, dubbo version: 2.5.2, current host: 127.0.0.1
[INFO ][20171229 16:18:23,728][AbstractRegistry:302]  [DUBBO] Register: consumer://192.168.103.21/com.junlon.facade.user.service.AdminQueryFacade?application=gw-web-portal&category=consumers&check=false&dubbo=2.5.2&interface=com.junlon.facade.user.service.AdminQueryFacade&methods=list&pid=48960&revision=1.0.0-SHAPSHOT&side=consumer&timestamp=1514535503259, dubbo version: 2.5.2, current host: 192.168.103.21
[INFO ][20171229 16:18:23,829][AbstractRegistry:325]  [DUBBO] Subscribe: consumer://192.168.103.21/com.junlon.facade.user.service.AdminQueryFacade?application=gw-web-portal&category=providers,configurators,routers&check=false&dubbo=2.5.2&interface=com.junlon.facade.user.service.AdminQueryFacade&methods=list&pid=48960&revision=1.0.0-SHAPSHOT&side=consumer&timestamp=1514535503259, dubbo version: 2.5.2, current host: 192.168.103.21
[INFO ][20171229 16:18:24,048][AbstractRegistry:422]  [DUBBO] Notify urls for subscribe url consumer://192.168.103.21/com.junlon.facade.user.service.AdminQueryFacade?application=gw-web-portal&category=providers,configurators,routers&check=false&dubbo=2.5.2&interface=com.junlon.facade.user.service.AdminQueryFacade&methods=list&pid=48960&revision=1.0.0-SHAPSHOT&side=consumer&timestamp=1514535503259, urls: [empty://192.168.103.21/com.junlon.facade.user.service.AdminQueryFacade?application=gw-web-portal&category=providers&check=false&dubbo=2.5.2&interface=com.junlon.facade.user.service.AdminQueryFacade&methods=list&pid=48960&revision=1.0.0-SHAPSHOT&side=consumer&timestamp=1514535503259, empty://192.168.103.21/com.junlon.facade.user.service.AdminQueryFacade?application=gw-web-portal&category=configurators&check=false&dubbo=2.5.2&interface=com.junlon.facade.user.service.AdminQueryFacade&methods=list&pid=48960&revision=1.0.0-SHAPSHOT&side=consumer&timestamp=1514535503259, empty://192.168.103.21/com.junlon.facade.user.service.AdminQueryFacade?application=gw-web-portal&category=routers&check=false&dubbo=2.5.2&interface=com.junlon.facade.user.service.AdminQueryFacade&methods=list&pid=48960&revision=1.0.0-SHAPSHOT&side=consumer&timestamp=1514535503259], dubbo version: 2.5.2, current host: 192.168.103.21
[INFO ][20171229 16:18:24,064][ReferenceConfig:423]  [DUBBO] Refer dubbo service com.junlon.facade.user.service.AdminQueryFacade from url zookeeper://127.0.0.1:2181/com.alibaba.dubbo.registry.RegistryService?application=gw-web-portal&check=false&dubbo=2.5.2&interface=com.junlon.facade.user.service.AdminQueryFacade&methods=list&pid=48960&revision=1.0.0-SHAPSHOT&side=consumer&timestamp=1514535503259, dubbo version: 2.5.2, current host: 192.168.103.21
[INFO ][20171229 16:18:24,079][AbstractApplicationContext:957] Closing org.springframework.context.support.GenericApplicationContext@4d50efb8: startup date [Fri Dec 29 16:18:22 CST 2017]; root of context hierarchy
[INFO ][20171229 16:18:24,079][AbstractConfig$1:450]  [DUBBO] Run shutdown hook now., dubbo version: 2.5.2, current host: 192.168.103.21
[INFO ][20171229 16:18:24,079][AbstractRegistryFactory:63]  [DUBBO] Close all registries [zookeeper://127.0.0.1:2181/com.alibaba.dubbo.registry.RegistryService?application=gw-web-portal&dubbo=2.5.2&interface=com.alibaba.dubbo.registry.RegistryService&pid=48960&timestamp=1514535503291], dubbo version: 2.5.2, current host: 192.168.103.21
[INFO ][20171229 16:18:24,079][AbstractRegistry:485]  [DUBBO] Destroy registry:zookeeper://127.0.0.1:2181/com.alibaba.dubbo.registry.RegistryService?application=gw-web-portal&dubbo=2.5.2&interface=com.alibaba.dubbo.registry.RegistryService&pid=48960&timestamp=1514535503291, dubbo version: 2.5.2, current host: 192.168.103.21
[INFO ][20171229 16:18:24,079][AbstractRegistry:312]  [DUBBO] Unregister: consumer://192.168.103.21/com.junlon.facade.user.service.AdminQueryFacade?application=gw-web-portal&category=consumers&check=false&dubbo=2.5.2&interface=com.junlon.facade.user.service.AdminQueryFacade&methods=list&pid=48960&revision=1.0.0-SHAPSHOT&side=consumer&timestamp=1514535503259, dubbo version: 2.5.2, current host: 192.168.103.21
[INFO ][20171229 16:18:24,079][AbstractRegistry:343]  [DUBBO] Unsubscribe: consumer://192.168.103.21/com.junlon.facade.user.service.AdminQueryFacade?application=gw-web-portal&category=providers,configurators,routers&check=false&dubbo=2.5.2&interface=com.junlon.facade.user.service.AdminQueryFacade&methods=list&pid=48960&revision=1.0.0-SHAPSHOT&side=consumer&timestamp=1514535503259, dubbo version: 2.5.2, current host: 192.168.103.21
[INFO ][20171229 16:18:24,111][AbstractRegistry:494]  [DUBBO] Destroy unregister url consumer://192.168.103.21/com.junlon.facade.user.service.AdminQueryFacade?application=gw-web-portal&category=consumers&check=false&dubbo=2.5.2&interface=com.junlon.facade.user.service.AdminQueryFacade&methods=list&pid=48960&revision=1.0.0-SHAPSHOT&side=consumer&timestamp=1514535503259, dubbo version: 2.5.2, current host: 192.168.103.21
[INFO ][20171229 16:18:24,111][ZkEventThread:82] Terminate ZkClient event thread.
[INFO ][20171229 16:18:24,126][ZooKeeper:1326] Session: 0x100b9115673000a closed
[INFO ][20171229 16:20:08,802][AbstractTestContextBootstrapper:259] Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]
[INFO ][20171229 16:20:08,818][AbstractTestContextBootstrapper:185] Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@5a8806ef, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@6c49835d, org.springframework.test.context.support.DependencyInjectionTestExecutionListener@5e853265, org.springframework.test.context.support.DirtiesContextTestExecutionListener@67205a84, org.springframework.test.context.transaction.TransactionalTestExecutionListener@7d0587f1, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@5d76b067]
[INFO ][20171229 16:20:08,896][XmlBeanDefinitionReader:317] Loading XML bean definitions from class path resource [spring/spring-context.xml]
[INFO ][20171229 16:20:09,037][XmlBeanDefinitionReader:317] Loading XML bean definitions from class path resource [spring/dubbo/dubbo-consumer.xml]
[INFO ][20171229 16:20:09,084][?:?] using logger: com.alibaba.dubbo.common.logger.log4j.Log4jLoggerAdapter
[INFO ][20171229 16:20:09,099][XmlBeanDefinitionReader:317] Loading XML bean definitions from class path resource [spring/dubbo/dubbo-reference-user.xml]
[INFO ][20171229 16:20:09,130][XmlBeanDefinitionReader:317] Loading XML bean definitions from class path resource [spring/spring-amp.xml]
[INFO ][20171229 16:20:09,146][AbstractApplicationContext:577] Refreshing org.springframework.context.support.GenericApplicationContext@4d50efb8: startup date [Fri Dec 29 16:20:09 CST 2017]; root of context hierarchy
[INFO ][20171229 16:20:09,271][PropertiesLoaderSupport:172] Loading properties file from class path resource [public_system.properties]
[DEBUG][20171229 16:20:09,380][ExtensionLoader:943]  [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Protocol$Adpative implements com.alibaba.dubbo.rpc.Protocol {
public void destroy() {throw new UnsupportedOperationException("method public abstract void com.alibaba.dubbo.rpc.Protocol.destroy() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public int getDefaultPort() {throw new UnsupportedOperationException("method public abstract int com.alibaba.dubbo.rpc.Protocol.getDefaultPort() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public com.alibaba.dubbo.rpc.Invoker refer(java.lang.Class arg0, com.alibaba.dubbo.common.URL arg1) throws java.lang.Class {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.refer(arg0, arg1);
}
public com.alibaba.dubbo.rpc.Exporter export(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.Invoker {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.export(arg0);
}
}, dubbo version: 2.5.2, current host: 127.0.0.1
[DEBUG][20171229 16:20:09,490][ExtensionLoader:943]  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Cluster$Adpative implements com.alibaba.dubbo.rpc.cluster.Cluster {
public com.alibaba.dubbo.rpc.Invoker join(com.alibaba.dubbo.rpc.cluster.Directory arg0) throws com.alibaba.dubbo.rpc.cluster.Directory {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("cluster", "failover");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.Cluster) name from url(" + url.toString() + ") use keys([cluster])");
com.alibaba.dubbo.rpc.cluster.Cluster extension = (com.alibaba.dubbo.rpc.cluster.Cluster)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.Cluster.class).getExtension(extName);
return extension.join(arg0);
}
}, dubbo version: 2.5.2, current host: 127.0.0.1
[DEBUG][20171229 16:20:09,505][ExtensionLoader:943]  [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ProxyFactory$Adpative implements com.alibaba.dubbo.rpc.ProxyFactory {
public java.lang.Object getProxy(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.Invoker {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getProxy(arg0);
}
public com.alibaba.dubbo.rpc.Invoker getInvoker(java.lang.Object arg0, java.lang.Class arg1, com.alibaba.dubbo.common.URL arg2) throws java.lang.Object {
if (arg2 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg2;
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getInvoker(arg0, arg1, arg2);
}
}, dubbo version: 2.5.2, current host: 127.0.0.1
[DEBUG][20171229 16:20:09,740][ExtensionLoader:943]  [DUBBO] package com.alibaba.dubbo.registry;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class RegistryFactory$Adpative implements com.alibaba.dubbo.registry.RegistryFactory {
public com.alibaba.dubbo.registry.Registry getRegistry(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.registry.RegistryFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.registry.RegistryFactory extension = (com.alibaba.dubbo.registry.RegistryFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.registry.RegistryFactory.class).getExtension(extName);
return extension.getRegistry(arg0);
}
}, dubbo version: 2.5.2, current host: 127.0.0.1
[DEBUG][20171229 16:20:09,755][ExtensionLoader:943]  [DUBBO] package com.alibaba.dubbo.remoting.zookeeper;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ZookeeperTransporter$Adpative implements com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter {
public com.alibaba.dubbo.remoting.zookeeper.ZookeeperClient connect(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("client", url.getParameter("transporter", "zkclient"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter) name from url(" + url.toString() + ") use keys([client, transporter])");
com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter extension = (com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter.class).getExtension(extName);
return extension.connect(arg0);
}
}, dubbo version: 2.5.2, current host: 127.0.0.1
[INFO ][20171229 16:20:09,786][AbstractRegistry:232]  [DUBBO] Load registry store file C:\Users\junlonlu\.dubbo\dubbo-registry-127.0.0.1.cache, data: {com.junlon.facade.user.service.AdminQueryFacade=empty://192.168.103.21:20880/com.junlon.facade.user.service.AdminQueryFacade?anyhost=true&application=gw-serivce-user&category=configurators&check=false&default.accepts=1000&default.dispatcher=all&default.retries=0&default.threadpool=fixed&default.threads=1000&default.timeout=30000&dubbo=2.5.2&interface=com.junlon.facade.user.service.AdminQueryFacade&methods=list&pid=49600&retries=0&revision=1.0.0-SHAPSHOT&side=provider&timestamp=1514535575301, com.alibaba.dubbo.monitor.MonitorService=empty://192.168.19.1/com.alibaba.dubbo.monitor.MonitorService?category=configurators&dubbo=2.5.2&interface=com.alibaba.dubbo.monitor.MonitorService&pid=51500&timestamp=1512805752537 empty://192.168.19.1/com.alibaba.dubbo.monitor.MonitorService?category=routers&dubbo=2.5.2&interface=com.alibaba.dubbo.monitor.MonitorService&pid=51500&timestamp=1512805752537 empty://192.168.19.1/com.alibaba.dubbo.monitor.MonitorService?category=providers&dubbo=2.5.2&interface=com.alibaba.dubbo.monitor.MonitorService&pid=51500&timestamp=1512805752537}, dubbo version: 2.5.2, current host: 127.0.0.1
[INFO ][20171229 16:20:09,803][ZkEventThread:64] Starting ZkClient event thread.
[INFO ][20171229 16:20:09,811][Environment:109] Client environment:zookeeper.version=3.5.3-beta-8ce24f9e675cbefffb8f21a47e06b42864475a60, built on 04/03/2017 16:19 GMT
[INFO ][20171229 16:20:09,812][Environment:109] Client environment:host.name=windows10.microdone.cn
[INFO ][20171229 16:20:09,812][Environment:109] Client environment:java.version=1.8.0_131
[INFO ][20171229 16:20:09,812][Environment:109] Client environment:java.vendor=Oracle Corporation
[INFO ][20171229 16:20:09,813][Environment:109] Client environment:java.home=C:\Program Files\Java\jdk1.8.0_131\jre
[INFO ][20171229 16:20:09,814][Environment:109] Client environment:java.class.path=E:\Idea\gw_lulu\web\gw-web-portal\target\test-classes;E:\Idea\gw_lulu\web\gw-web-portal\target\classes;E:\Laboratory\Maven\repository\com\gw\common\gw-common-base\1.0.0-SHAPSHOT\gw-common-base-1.0.0-SHAPSHOT.jar;E:\Laboratory\Maven\repository\com\gw\facade\gw-facade-user\1.0.0-SHAPSHOT\gw-facade-user-1.0.0-SHAPSHOT.jar;E:\Laboratory\Maven\repository\org\springframework\spring-aop\4.2.3.RELEASE\spring-aop-4.2.3.RELEASE.jar;E:\Laboratory\Maven\repository\org\springframework\spring-aspects\4.2.3.RELEASE\spring-aspects-4.2.3.RELEASE.jar;E:\Laboratory\Maven\repository\org\springframework\spring-beans\4.2.3.RELEASE\spring-beans-4.2.3.RELEASE.jar;E:\Laboratory\Maven\repository\org\springframework\spring-context\4.2.3.RELEASE\spring-context-4.2.3.RELEASE.jar;E:\Laboratory\Maven\repository\org\springframework\spring-context-support\4.2.3.RELEASE\spring-context-support-4.2.3.RELEASE.jar;E:\Laboratory\Maven\repository\org\springframework\spring-core\4.2.3.RELEASE\spring-core-4.2.3.RELEASE.jar;E:\Laboratory\Maven\repository\org\springframework\spring-expression\4.2.3.RELEASE\spring-expression-4.2.3.RELEASE.jar;E:\Laboratory\Maven\repository\org\springframework\spring-instrument\4.2.3.RELEASE\spring-instrument-4.2.3.RELEASE.jar;E:\Laboratory\Maven\repository\org\springframework\spring-instrument-tomcat\4.2.3.RELEASE\spring-instrument-tomcat-4.2.3.RELEASE.jar;E:\Laboratory\Maven\repository\org\springframework\data\spring-data-jpa\1.9.4.RELEASE\spring-data-jpa-1.9.4.RELEASE.jar;E:\Laboratory\Maven\repository\org\springframework\data\spring-data-commons\1.11.4.RELEASE\spring-data-commons-1.11.4.RELEASE.jar;E:\Laboratory\Maven\repository\org\slf4j\jcl-over-slf4j\1.7.13\jcl-over-slf4j-1.7.13.jar;E:\Laboratory\Maven\repository\org\springframework\spring-jms\4.2.3.RELEASE\spring-jms-4.2.3.RELEASE.jar;E:\Laboratory\Maven\repository\org\springframework\spring-messaging\4.2.3.RELEASE\spring-messaging-4.2.3.RELEASE.jar;E:\Laboratory\Maven\repository\org\springframework\spring-orm\4.2.3.RELEASE\spring-orm-4.2.3.RELEASE.jar;E:\Laboratory\Maven\repository\org\springframework\spring-jdbc\4.2.3.RELEASE\spring-jdbc-4.2.3.RELEASE.jar;E:\Laboratory\Maven\repository\org\springframework\spring-oxm\4.2.3.RELEASE\spring-oxm-4.2.3.RELEASE.jar;E:\Laboratory\Maven\repository\org\springframework\spring-tx\4.2.3.RELEASE\spring-tx-4.2.3.RELEASE.jar;E:\Laboratory\Maven\repository\org\springframework\spring-web\4.2.3.RELEASE\spring-web-4.2.3.RELEASE.jar;E:\Laboratory\Maven\repository\org\springframework\spring-webmvc\4.2.3.RELEASE\spring-webmvc-4.2.3.RELEASE.jar;E:\Laboratory\Maven\repository\org\springframework\spring-webmvc-portlet\4.2.3.RELEASE\spring-webmvc-portlet-4.2.3.RELEASE.jar;E:\Laboratory\Maven\repository\org\springframework\spring-test\4.2.3.RELEASE\spring-test-4.2.3.RELEASE.jar;E:\Laboratory\Maven\repository\org\springframework\ws\spring-ws-core\2.3.0.RELEASE\spring-ws-core-2.3.0.RELEASE.jar;E:\Laboratory\Maven\repository\commons-logging\commons-logging\1.1.3\commons-logging-1.1.3.jar;E:\Laboratory\Maven\repository\org\springframework\ws\spring-xml\2.3.0.RELEASE\spring-xml-2.3.0.RELEASE.jar;E:\Laboratory\Maven\repository\org\mybatis\mybatis\3.4.0\mybatis-3.4.0.jar;E:\Laboratory\Maven\repository\org\mybatis\mybatis-spring\1.3.0\mybatis-spring-1.3.0.jar;E:\Laboratory\Maven\repository\org\mybatis\generator\mybatis-generator-core\1.3.5\mybatis-generator-core-1.3.5.jar;E:\Laboratory\Maven\repository\mysql\mysql-connector-java\5.1.9\mysql-connector-java-5.1.9.jar;E:\Laboratory\Maven\repository\com\alibaba\druid\1.0.9\druid-1.0.9.jar;C:\Program Files\Java\jdk1.8.0_131\jre\..\lib\jconsole.jar;C:\Program Files\Java\jdk1.8.0_131\jre\..\lib\tools.jar;E:\Laboratory\Maven\repository\org\jboss\netty\netty\3.2.5.Final\netty-3.2.5.Final.jar;E:\Laboratory\Maven\repository\com\alibaba\dubbo\2.5.2\dubbo-2.5.2.jar;E:\Laboratory\Maven\repository\org\springframework\spring\2.5.6.SEC03\spring-2.5.6.SEC03.jar;E:\Laboratory\Maven\repository\org\javassist\javassist\3.15.0-GA\javassist-3.15.0-GA.jar;E:\Laboratory\Maven\repository\org\apache\zookeeper\zookeeper\3.5.3-beta\zookeeper-3.5.3-beta.jar;E:\Laboratory\Maven\repository\log4j\log4j\1.2.17\log4j-1.2.17.jar;E:\Laboratory\Maven\repository\io\netty\netty\3.10.5.Final\netty-3.10.5.Final.jar;E:\Laboratory\Maven\repository\com\101tec\zkclient\0.9\zkclient-0.9.jar;E:\Laboratory\Maven\repository\org\apache\activemq\activemq-all\5.8.0\activemq-all-5.8.0.jar;E:\Laboratory\Maven\repository\org\apache\activemq\activemq-amqp\5.8.0\activemq-amqp-5.8.0.jar;E:\Laboratory\Maven\repository\org\apache\activemq\activemq-broker\5.8.0\activemq-broker-5.8.0.jar;E:\Laboratory\Maven\repository\org\apache\activemq\activemq-openwire-legacy\5.8.0\activemq-openwire-legacy-5.8.0.jar;E:\Laboratory\Maven\repository\org\fusesource\hawtbuf\hawtbuf\1.9\hawtbuf-1.9.jar;E:\Laboratory\Maven\repository\org\apache\activemq\activemq-pool\5.8.0\activemq-pool-5.8.0.jar;E:\Laboratory\Maven\repository\org\apache\activemq\activemq-client\5.8.0\activemq-client-5.8.0.jar;E:\Laboratory\Maven\repository\org\apache\geronimo\specs\geronimo-jms_1.1_spec\1.1.1\geronimo-jms_1.1_spec-1.1.1.jar;E:\Laboratory\Maven\repository\org\apache\geronimo\specs\geronimo-j2ee-management_1.1_spec\1.0.1\geronimo-j2ee-management_1.1_spec-1.0.1.jar;E:\Laboratory\Maven\repository\org\apache\geronimo\specs\geronimo-jta_1.0.1B_spec\1.0.1\geronimo-jta_1.0.1B_spec-1.0.1.jar;E:\Laboratory\Maven\repository\commons-pool\commons-pool\1.6\commons-pool-1.6.jar;E:\Laboratory\Maven\repository\quartz\quartz\1.6.0\quartz-1.6.0.jar;E:\Laboratory\Maven\repository\org\elasticsearch\client\rest\5.0.0\rest-5.0.0.jar;E:\Laboratory\Maven\repository\org\apache\httpcomponents\httpclient\4.5.2\httpclient-4.5.2.jar;E:\Laboratory\Maven\repository\org\apache\httpcomponents\httpcore\4.4.5\httpcore-4.4.5.jar;E:\Laboratory\Maven\repository\org\apache\httpcomponents\httpasyncclient\4.1.2\httpasyncclient-4.1.2.jar;E:\Laboratory\Maven\repository\org\apache\httpcomponents\httpcore-nio\4.4.5\httpcore-nio-4.4.5.jar;E:\Laboratory\Maven\repository\org\aspectj\aspectjweaver\1.5.4\aspectjweaver-1.5.4.jar;E:\Laboratory\Maven\repository\org\aspectj\aspectjrt\1.5.4\aspectjrt-1.5.4.jar;E:\Laboratory\Maven\repository\junit\junit\4.12\junit-4.12.jar;E:\Laboratory\Maven\repository\org\hamcrest\hamcrest-core\1.3\hamcrest-core-1.3.jar;E:\Laboratory\Maven\repository\javax\servlet\javax.servlet-api\3.1.0\javax.servlet-api-3.1.0.jar;E:\Laboratory\Maven\repository\javax\servlet\jsp\jsp-api\2.2\jsp-api-2.2.jar;E:\Laboratory\Maven\repository\javax\servlet\jstl\1.2\jstl-1.2.jar;E:\Laboratory\Maven\repository\net\sf\jxls\jxls-core\1.0.6\jxls-core-1.0.6.jar;E:\Laboratory\Maven\repository\commons-collections\commons-collections\3.2.1\commons-collections-3.2.1.jar;E:\Laboratory\Maven\repository\org\apache\commons\commons-jexl\2.0.1\commons-jexl-2.0.1.jar;E:\Laboratory\Maven\repository\org\apache\logging\log4j\log4j-api\2.8.2\log4j-api-2.8.2.jar;E:\Laboratory\Maven\repository\org\apache\logging\log4j\log4j-core\2.8.2\log4j-core-2.8.2.jar;E:\Laboratory\Maven\repository\org\slf4j\slf4j-api\1.7.5\slf4j-api-1.7.5.jar;E:\Laboratory\Maven\repository\org\slf4j\slf4j-log4j12\1.7.5\slf4j-log4j12-1.7.5.jar;E:\Laboratory\Maven\repository\org\apache\logging\log4j\log4j-slf4j-impl\2.8.2\log4j-slf4j-impl-2.8.2.jar;E:\Laboratory\Maven\repository\com\google\zxing\core\3.0.0\core-3.0.0.jar;E:\Laboratory\Maven\repository\com\google\zxing\javase\3.0.0\javase-3.0.0.jar;E:\Laboratory\Maven\repository\com\alibaba\fastjson\1.2.6\fastjson-1.2.6.jar;E:\Laboratory\Maven\repository\org\codehaus\jackson\jackson-mapper-asl\1.9.13\jackson-mapper-asl-1.9.13.jar;E:\Laboratory\Maven\repository\org\codehaus\jackson\jackson-core-asl\1.9.13\jackson-core-asl-1.9.13.jar;E:\Laboratory\Maven\repository\org\apache\commons\commons-lang3\3.4\commons-lang3-3.4.jar;E:\Laboratory\Maven\repository\commons-fileupload\commons-fileupload\1.3.1\commons-fileupload-1.3.1.jar;E:\Laboratory\Maven\repository\commons-io\commons-io\2.4\commons-io-2.4.jar;E:\Laboratory\Maven\repository\commons-codec\commons-codec\1.10\commons-codec-1.10.jar;E:\Laboratory\Maven\repository\commons-beanutils\commons-beanutils\1.9.2\commons-beanutils-1.9.2.jar;E:\Laboratory\Maven\repository\org\apache\commons\commons-collections4\4.1\commons-collections4-4.1.jar;E:\Laboratory\Maven\repository\aopalliance\aopalliance\1.0\aopalliance-1.0.jar;E:\Laboratory\Maven\repository\commons-cli\commons-cli\1.2\commons-cli-1.2.jar;E:\Laboratory\Maven\repository\ognl\ognl\3.1.14\ognl-3.1.14.jar;E:\Laboratory\Maven\repository\commons-net\commons-net\3.2\commons-net-3.2.jar;E:\Laboratory\Maven\repository\org\apache\poi\poi\3.15\poi-3.15.jar;E:\Laboratory\Maven\repository\org\apache\poi\poi-ooxml\3.15\poi-ooxml-3.15.jar;E:\Laboratory\Maven\repository\org\apache\poi\poi-ooxml-schemas\3.15\poi-ooxml-schemas-3.15.jar;E:\Laboratory\Maven\repository\org\apache\xmlbeans\xmlbeans\2.6.0\xmlbeans-2.6.0.jar;E:\Laboratory\Maven\repository\stax\stax-api\1.0.1\stax-api-1.0.1.jar;E:\Laboratory\Maven\repository\com\github\virtuald\curvesapi\1.04\curvesapi-1.04.jar;E:\Laboratory\Maven\repository\javax\jms\jms\1.1\jms-1.1.jar;
[INFO ][20171229 16:20:09,815][Environment:109] Client environment:java.library.path=C:\Program Files\Java\jdk1.8.0_131\jre\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\ProgramData\Oracle\Java\javapath;C:\Program Files (x86)\Intel\iCLS Client\;C:\Program Files\Intel\iCLS Client\;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\Program Files\Java\jdk1.8.0_131\bin;D:\Git\Git\cmd;D:\Mysql\mysql-5.6.36-winx64\bin;D:\TortoiseGit\bin;D:\TortoiseSVN\bin;D:\Nodejs\;C:\Users\junlonlu\AppData\Local\Microsoft\WindowsApps;D:\Visual Studio Code\Microsoft VS Code\bin;C:\Users\junlonlu\AppData\Roaming\npm;E:\Laboratory\Maven\apache-maven-3.5.2\bin;.
[INFO ][20171229 16:20:09,815][Environment:109] Client environment:java.io.tmpdir=C:\Users\junlonlu\AppData\Local\Temp\
[INFO ][20171229 16:20:09,815][Environment:109] Client environment:java.compiler=<NA>
[INFO ][20171229 16:20:09,815][Environment:109] Client environment:os.name=Windows 10
[INFO ][20171229 16:20:09,815][Environment:109] Client environment:os.arch=amd64
[INFO ][20171229 16:20:09,815][Environment:109] Client environment:os.version=10.0
[INFO ][20171229 16:20:09,815][Environment:109] Client environment:user.name=junlonlu
[INFO ][20171229 16:20:09,815][Environment:109] Client environment:user.home=C:\Users\junlonlu
[INFO ][20171229 16:20:09,815][Environment:109] Client environment:user.dir=E:\Idea\gw_lulu\web\gw-web-portal
[INFO ][20171229 16:20:09,815][Environment:109] Client environment:os.memory.free=107MB
[INFO ][20171229 16:20:09,815][Environment:109] Client environment:os.memory.max=1799MB
[INFO ][20171229 16:20:09,815][Environment:109] Client environment:os.memory.total=123MB
[INFO ][20171229 16:20:09,815][ZooKeeper:865] Initiating client connection, connectString=127.0.0.1:2181 sessionTimeout=30000 watcher=org.I0Itec.zkclient.ZkClient@5e21e98f
[INFO ][20171229 16:20:10,081][ClientCnxnSocket:236] jute.maxbuffer value is 4194304 Bytes
[INFO ][20171229 16:20:10,097][ZkClient:935] Waiting for keeper state SyncConnected
[INFO ][20171229 16:20:10,097][ClientCnxn$SendThread:1113] Opening socket connection to server 127.0.0.1/127.0.0.1:2181. Will not attempt to authenticate using SASL (unknown error)
[INFO ][20171229 16:20:10,097][ClientCnxn$SendThread:948] Socket connection established, initiating session, client: /127.0.0.1:60246, server: 127.0.0.1/127.0.0.1:2181
[INFO ][20171229 16:20:10,159][ClientCnxn$SendThread:1381] Session establishment complete on server 127.0.0.1/127.0.0.1:2181, sessionid = 0x100b9115673000c, negotiated timeout = 30000
[INFO ][20171229 16:20:10,175][ZkClient:712] zookeeper state changed (SyncConnected)
[DEBUG][20171229 16:20:10,190][ExtensionLoader:943]  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class RouterFactory$Adpative implements com.alibaba.dubbo.rpc.cluster.RouterFactory {
public com.alibaba.dubbo.rpc.cluster.Router getRouter(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getProtocol();
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.RouterFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.cluster.RouterFactory extension = (com.alibaba.dubbo.rpc.cluster.RouterFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.RouterFactory.class).getExtension(extName);
return extension.getRouter(arg0);
}
}, dubbo version: 2.5.2, current host: 127.0.0.1
[DEBUG][20171229 16:20:10,206][ExtensionLoader:943]  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ConfiguratorFactory$Adpative implements com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory {
public com.alibaba.dubbo.rpc.cluster.Configurator getConfigurator(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getProtocol();
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory extension = (com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory.class).getExtension(extName);
return extension.getConfigurator(arg0);
}
}, dubbo version: 2.5.2, current host: 127.0.0.1
[INFO ][20171229 16:20:10,222][AbstractRegistry:302]  [DUBBO] Register: consumer://192.168.103.21/com.junlon.facade.user.service.AdminQueryFacade?application=gw-web-portal&category=consumers&check=false&dubbo=2.5.2&interface=com.junlon.facade.user.service.AdminQueryFacade&methods=list&pid=53716&revision=1.0.0-SHAPSHOT&side=consumer&timestamp=1514535609677, dubbo version: 2.5.2, current host: 192.168.103.21
[INFO ][20171229 16:20:10,331][AbstractRegistry:325]  [DUBBO] Subscribe: consumer://192.168.103.21/com.junlon.facade.user.service.AdminQueryFacade?application=gw-web-portal&category=providers,configurators,routers&check=false&dubbo=2.5.2&interface=com.junlon.facade.user.service.AdminQueryFacade&methods=list&pid=53716&revision=1.0.0-SHAPSHOT&side=consumer&timestamp=1514535609677, dubbo version: 2.5.2, current host: 192.168.103.21
[INFO ][20171229 16:20:10,550][AbstractRegistry:422]  [DUBBO] Notify urls for subscribe url consumer://192.168.103.21/com.junlon.facade.user.service.AdminQueryFacade?application=gw-web-portal&category=providers,configurators,routers&check=false&dubbo=2.5.2&interface=com.junlon.facade.user.service.AdminQueryFacade&methods=list&pid=53716&revision=1.0.0-SHAPSHOT&side=consumer&timestamp=1514535609677, urls: [empty://192.168.103.21/com.junlon.facade.user.service.AdminQueryFacade?application=gw-web-portal&category=providers&check=false&dubbo=2.5.2&interface=com.junlon.facade.user.service.AdminQueryFacade&methods=list&pid=53716&revision=1.0.0-SHAPSHOT&side=consumer&timestamp=1514535609677, empty://192.168.103.21/com.junlon.facade.user.service.AdminQueryFacade?application=gw-web-portal&category=configurators&check=false&dubbo=2.5.2&interface=com.junlon.facade.user.service.AdminQueryFacade&methods=list&pid=53716&revision=1.0.0-SHAPSHOT&side=consumer&timestamp=1514535609677, empty://192.168.103.21/com.junlon.facade.user.service.AdminQueryFacade?application=gw-web-portal&category=routers&check=false&dubbo=2.5.2&interface=com.junlon.facade.user.service.AdminQueryFacade&methods=list&pid=53716&revision=1.0.0-SHAPSHOT&side=consumer&timestamp=1514535609677], dubbo version: 2.5.2, current host: 192.168.103.21
[INFO ][20171229 16:20:10,550][ReferenceConfig:423]  [DUBBO] Refer dubbo service com.junlon.facade.user.service.AdminQueryFacade from url zookeeper://127.0.0.1:2181/com.alibaba.dubbo.registry.RegistryService?application=gw-web-portal&check=false&dubbo=2.5.2&interface=com.junlon.facade.user.service.AdminQueryFacade&methods=list&pid=53716&revision=1.0.0-SHAPSHOT&side=consumer&timestamp=1514535609677, dubbo version: 2.5.2, current host: 192.168.103.21
[INFO ][20171229 16:20:10,566][AbstractApplicationContext:957] Closing org.springframework.context.support.GenericApplicationContext@4d50efb8: startup date [Fri Dec 29 16:20:09 CST 2017]; root of context hierarchy
[INFO ][20171229 16:20:10,566][AbstractRegistry:343]  [DUBBO] Unsubscribe: consumer://192.168.103.21/com.junlon.facade.user.service.AdminQueryFacade?application=gw-web-portal&category=providers,configurators,routers&check=false&dubbo=2.5.2&interface=com.junlon.facade.user.service.AdminQueryFacade&methods=list&pid=53716&revision=1.0.0-SHAPSHOT&side=consumer&timestamp=1514535609677, dubbo version: 2.5.2, current host: 192.168.103.21
[INFO ][20171229 16:20:10,581][AbstractConfig$1:450]  [DUBBO] Run shutdown hook now., dubbo version: 2.5.2, current host: 192.168.103.21
[INFO ][20171229 16:20:10,581][AbstractRegistryFactory:63]  [DUBBO] Close all registries [zookeeper://127.0.0.1:2181/com.alibaba.dubbo.registry.RegistryService?application=gw-web-portal&dubbo=2.5.2&interface=com.alibaba.dubbo.registry.RegistryService&pid=53716&timestamp=1514535609724], dubbo version: 2.5.2, current host: 192.168.103.21
[INFO ][20171229 16:20:10,581][AbstractRegistry:485]  [DUBBO] Destroy registry:zookeeper://127.0.0.1:2181/com.alibaba.dubbo.registry.RegistryService?application=gw-web-portal&dubbo=2.5.2&interface=com.alibaba.dubbo.registry.RegistryService&pid=53716&timestamp=1514535609724, dubbo version: 2.5.2, current host: 192.168.103.21
[INFO ][20171229 16:20:10,581][AbstractRegistry:312]  [DUBBO] Unregister: consumer://192.168.103.21/com.junlon.facade.user.service.AdminQueryFacade?application=gw-web-portal&category=consumers&check=false&dubbo=2.5.2&interface=com.junlon.facade.user.service.AdminQueryFacade&methods=list&pid=53716&revision=1.0.0-SHAPSHOT&side=consumer&timestamp=1514535609677, dubbo version: 2.5.2, current host: 192.168.103.21
[INFO ][20171229 16:20:10,597][AbstractRegistry:494]  [DUBBO] Destroy unregister url consumer://192.168.103.21/com.junlon.facade.user.service.AdminQueryFacade?application=gw-web-portal&category=consumers&check=false&dubbo=2.5.2&interface=com.junlon.facade.user.service.AdminQueryFacade&methods=list&pid=53716&revision=1.0.0-SHAPSHOT&side=consumer&timestamp=1514535609677, dubbo version: 2.5.2, current host: 192.168.103.21
[INFO ][20171229 16:20:10,597][ZkEventThread:82] Terminate ZkClient event thread.
[INFO ][20171229 16:20:10,628][ZooKeeper:1326] Session: 0x100b9115673000c closed
[INFO ][20171229 16:20:10,628][ClientCnxn$EventThread:513] EventThread shut down for session: 0x100b9115673000c
[INFO ][20171229 16:39:19,648][AbstractTestContextBootstrapper:259] Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]
[INFO ][20171229 16:39:19,684][AbstractTestContextBootstrapper:185] Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@47d90b9e, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@1184ab05, org.springframework.test.context.support.DependencyInjectionTestExecutionListener@3aefe5e5, org.springframework.test.context.support.DirtiesContextTestExecutionListener@149e0f5d, org.springframework.test.context.transaction.TransactionalTestExecutionListener@1b1473ab, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@2f7c2f4f]
[INFO ][20171229 16:39:19,902][XmlBeanDefinitionReader:317] Loading XML bean definitions from class path resource [spring/spring-context.xml]
[INFO ][20171229 16:39:20,327][XmlBeanDefinitionReader:317] Loading XML bean definitions from class path resource [spring/dubbo/dubbo-consumer.xml]
[INFO ][20171229 16:39:20,449][?:?] using logger: com.alibaba.dubbo.common.logger.log4j.Log4jLoggerAdapter
[INFO ][20171229 16:39:20,599][XmlBeanDefinitionReader:317] Loading XML bean definitions from class path resource [spring/dubbo/dubbo-reference-user.xml]
[INFO ][20171229 16:39:20,864][XmlBeanDefinitionReader:317] Loading XML bean definitions from class path resource [spring/spring-amp.xml]
[INFO ][20171229 16:39:20,914][AbstractApplicationContext:577] Refreshing org.springframework.context.support.GenericApplicationContext@6dc17b83: startup date [Fri Dec 29 16:39:20 CST 2017]; root of context hierarchy
[INFO ][20171229 16:39:21,414][PropertiesLoaderSupport:172] Loading properties file from class path resource [public_system.properties]
[DEBUG][20171229 16:39:21,655][ExtensionLoader:943]  [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Protocol$Adpative implements com.alibaba.dubbo.rpc.Protocol {
public void destroy() {throw new UnsupportedOperationException("method public abstract void com.alibaba.dubbo.rpc.Protocol.destroy() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public int getDefaultPort() {throw new UnsupportedOperationException("method public abstract int com.alibaba.dubbo.rpc.Protocol.getDefaultPort() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public com.alibaba.dubbo.rpc.Invoker refer(java.lang.Class arg0, com.alibaba.dubbo.common.URL arg1) throws java.lang.Class {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.refer(arg0, arg1);
}
public com.alibaba.dubbo.rpc.Exporter export(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.Invoker {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.export(arg0);
}
}, dubbo version: 2.5.2, current host: 127.0.0.1
[DEBUG][20171229 16:39:21,856][ExtensionLoader:943]  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Cluster$Adpative implements com.alibaba.dubbo.rpc.cluster.Cluster {
public com.alibaba.dubbo.rpc.Invoker join(com.alibaba.dubbo.rpc.cluster.Directory arg0) throws com.alibaba.dubbo.rpc.cluster.Directory {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("cluster", "failover");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.Cluster) name from url(" + url.toString() + ") use keys([cluster])");
com.alibaba.dubbo.rpc.cluster.Cluster extension = (com.alibaba.dubbo.rpc.cluster.Cluster)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.Cluster.class).getExtension(extName);
return extension.join(arg0);
}
}, dubbo version: 2.5.2, current host: 127.0.0.1
[DEBUG][20171229 16:39:21,940][ExtensionLoader:943]  [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ProxyFactory$Adpative implements com.alibaba.dubbo.rpc.ProxyFactory {
public java.lang.Object getProxy(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.Invoker {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getProxy(arg0);
}
public com.alibaba.dubbo.rpc.Invoker getInvoker(java.lang.Object arg0, java.lang.Class arg1, com.alibaba.dubbo.common.URL arg2) throws java.lang.Object {
if (arg2 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg2;
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getInvoker(arg0, arg1, arg2);
}
}, dubbo version: 2.5.2, current host: 127.0.0.1
[DEBUG][20171229 16:39:22,475][ExtensionLoader:943]  [DUBBO] package com.alibaba.dubbo.registry;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class RegistryFactory$Adpative implements com.alibaba.dubbo.registry.RegistryFactory {
public com.alibaba.dubbo.registry.Registry getRegistry(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.registry.RegistryFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.registry.RegistryFactory extension = (com.alibaba.dubbo.registry.RegistryFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.registry.RegistryFactory.class).getExtension(extName);
return extension.getRegistry(arg0);
}
}, dubbo version: 2.5.2, current host: 127.0.0.1
[DEBUG][20171229 16:39:22,547][ExtensionLoader:943]  [DUBBO] package com.alibaba.dubbo.remoting.zookeeper;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ZookeeperTransporter$Adpative implements com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter {
public com.alibaba.dubbo.remoting.zookeeper.ZookeeperClient connect(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("client", url.getParameter("transporter", "zkclient"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter) name from url(" + url.toString() + ") use keys([client, transporter])");
com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter extension = (com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter.class).getExtension(extName);
return extension.connect(arg0);
}
}, dubbo version: 2.5.2, current host: 127.0.0.1
[INFO ][20171229 16:39:22,729][AbstractRegistry:232]  [DUBBO] Load registry store file C:\Users\junlonlu\.dubbo\dubbo-registry-127.0.0.1.cache, data: {com.junlon.facade.user.service.AdminQueryFacade=empty://192.168.103.21:20880/com.junlon.facade.user.service.AdminQueryFacade?anyhost=true&application=gw-serivce-user&category=configurators&check=false&default.accepts=1000&default.dispatcher=all&default.retries=0&default.threadpool=fixed&default.threads=1000&default.timeout=30000&dubbo=2.5.2&interface=com.junlon.facade.user.service.AdminQueryFacade&methods=list&pid=54212&retries=0&side=provider&timestamp=1514536669610, com.alibaba.dubbo.monitor.MonitorService=empty://192.168.19.1/com.alibaba.dubbo.monitor.MonitorService?category=configurators&dubbo=2.5.2&interface=com.alibaba.dubbo.monitor.MonitorService&pid=51500&timestamp=1512805752537 empty://192.168.19.1/com.alibaba.dubbo.monitor.MonitorService?category=routers&dubbo=2.5.2&interface=com.alibaba.dubbo.monitor.MonitorService&pid=51500&timestamp=1512805752537 empty://192.168.19.1/com.alibaba.dubbo.monitor.MonitorService?category=providers&dubbo=2.5.2&interface=com.alibaba.dubbo.monitor.MonitorService&pid=51500&timestamp=1512805752537}, dubbo version: 2.5.2, current host: 127.0.0.1
[INFO ][20171229 16:39:22,909][Environment:109] Client environment:zookeeper.version=3.5.3-beta-8ce24f9e675cbefffb8f21a47e06b42864475a60, built on 04/03/2017 16:19 GMT
[INFO ][20171229 16:39:22,911][Environment:109] Client environment:host.name=windows10.microdone.cn
[INFO ][20171229 16:39:22,912][Environment:109] Client environment:java.version=1.8.0_131
[INFO ][20171229 16:39:22,912][Environment:109] Client environment:java.vendor=Oracle Corporation
[INFO ][20171229 16:39:22,913][Environment:109] Client environment:java.home=C:\Program Files\Java\jdk1.8.0_131\jre
[INFO ][20171229 16:39:22,913][Environment:109] Client environment:java.class.path=D:\Idea\IntelliJ IDEA 2017.1.1\lib\idea_rt.jar;D:\Idea\IntelliJ IDEA 2017.1.1\plugins\junit\lib\junit-rt.jar;C:\Program Files\Java\jdk1.8.0_131\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.8.0_131\jre\lib\deploy.jar;C:\Program Files\Java\jdk1.8.0_131\jre\lib\ext\access-bridge-64.jar;C:\Program Files\Java\jdk1.8.0_131\jre\lib\ext\cldrdata.jar;C:\Program Files\Java\jdk1.8.0_131\jre\lib\ext\dnsns.jar;C:\Program Files\Java\jdk1.8.0_131\jre\lib\ext\jaccess.jar;C:\Program Files\Java\jdk1.8.0_131\jre\lib\ext\jfxrt.jar;C:\Program Files\Java\jdk1.8.0_131\jre\lib\ext\localedata.jar;C:\Program Files\Java\jdk1.8.0_131\jre\lib\ext\nashorn.jar;C:\Program Files\Java\jdk1.8.0_131\jre\lib\ext\sunec.jar;C:\Program Files\Java\jdk1.8.0_131\jre\lib\ext\sunjce_provider.jar;C:\Program Files\Java\jdk1.8.0_131\jre\lib\ext\sunmscapi.jar;C:\Program Files\Java\jdk1.8.0_131\jre\lib\ext\sunpkcs11.jar;C:\Program Files\Java\jdk1.8.0_131\jre\lib\ext\zipfs.jar;C:\Program Files\Java\jdk1.8.0_131\jre\lib\javaws.jar;C:\Program Files\Java\jdk1.8.0_131\jre\lib\jce.jar;C:\Program Files\Java\jdk1.8.0_131\jre\lib\jfr.jar;C:\Program Files\Java\jdk1.8.0_131\jre\lib\jfxswt.jar;C:\Program Files\Java\jdk1.8.0_131\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.8.0_131\jre\lib\management-agent.jar;C:\Program Files\Java\jdk1.8.0_131\jre\lib\plugin.jar;C:\Program Files\Java\jdk1.8.0_131\jre\lib\resources.jar;C:\Program Files\Java\jdk1.8.0_131\jre\lib\rt.jar;D:\Idea\IntelliJ IDEA 2017.1.1\lib\junit.jar;D:\Idea\IntelliJ IDEA 2017.1.1\lib\junit-4.12.jar;D:\Idea\IntelliJ IDEA 2017.1.1\lib\hamcrest-core-1.3.jar;E:\Idea\gw_lulu\web\gw-web-portal\target\test-classes;E:\Idea\gw_lulu\web\gw-web-portal\target\classes;E:\Idea\gw_lulu\common\gw-common-base\target\classes;E:\Idea\gw_lulu\facade\gw-facade-user\target\classes;E:\Laboratory\Maven\repository\org\springframework\spring-aop\4.2.3.RELEASE\spring-aop-4.2.3.RELEASE.jar;E:\Laboratory\Maven\repository\org\springframework\spring-aspects\4.2.3.RELEASE\spring-aspects-4.2.3.RELEASE.jar;E:\Laboratory\Maven\repository\org\springframework\spring-beans\4.2.3.RELEASE\spring-beans-4.2.3.RELEASE.jar;E:\Laboratory\Maven\repository\org\springframework\spring-context\4.2.3.RELEASE\spring-context-4.2.3.RELEASE.jar;E:\Laboratory\Maven\repository\org\springframework\spring-context-support\4.2.3.RELEASE\spring-context-support-4.2.3.RELEASE.jar;E:\Laboratory\Maven\repository\org\springframework\spring-core\4.2.3.RELEASE\spring-core-4.2.3.RELEASE.jar;E:\Laboratory\Maven\repository\org\springframework\spring-expression\4.2.3.RELEASE\spring-expression-4.2.3.RELEASE.jar;E:\Laboratory\Maven\repository\org\springframework\spring-instrument\4.2.3.RELEASE\spring-instrument-4.2.3.RELEASE.jar;E:\Laboratory\Maven\repository\org\springframework\spring-instrument-tomcat\4.2.3.RELEASE\spring-instrument-tomcat-4.2.3.RELEASE.jar;E:\Laboratory\Maven\repository\org\springframework\data\spring-data-jpa\1.9.4.RELEASE\spring-data-jpa-1.9.4.RELEASE.jar;E:\Laboratory\Maven\repository\org\springframework\data\spring-data-commons\1.11.4.RELEASE\spring-data-commons-1.11.4.RELEASE.jar;E:\Laboratory\Maven\repository\org\slf4j\jcl-over-slf4j\1.7.13\jcl-over-slf4j-1.7.13.jar;E:\Laboratory\Maven\repository\org\springframework\spring-jms\4.2.3.RELEASE\spring-jms-4.2.3.RELEASE.jar;E:\Laboratory\Maven\repository\org\springframework\spring-messaging\4.2.3.RELEASE\spring-messaging-4.2.3.RELEASE.jar;E:\Laboratory\Maven\repository\org\springframework\spring-orm\4.2.3.RELEASE\spring-orm-4.2.3.RELEASE.jar;E:\Laboratory\Maven\repository\org\springframework\spring-jdbc\4.2.3.RELEASE\spring-jdbc-4.2.3.RELEASE.jar;E:\Laboratory\Maven\repository\org\springframework\spring-oxm\4.2.3.RELEASE\spring-oxm-4.2.3.RELEASE.jar;E:\Laboratory\Maven\repository\org\springframework\spring-tx\4.2.3.RELEASE\spring-tx-4.2.3.RELEASE.jar;E:\Laboratory\Maven\repository\org\springframework\spring-web\4.2.3.RELEASE\spring-web-4.2.3.RELEASE.jar;E:\Laboratory\Maven\repository\org\springframework\spring-webmvc\4.2.3.RELEASE\spring-webmvc-4.2.3.RELEASE.jar;E:\Laboratory\Maven\repository\org\springframework\spring-webmvc-portlet\4.2.3.RELEASE\spring-webmvc-portlet-4.2.3.RELEASE.jar;E:\Laboratory\Maven\repository\org\springframework\spring-test\4.2.3.RELEASE\spring-test-4.2.3.RELEASE.jar;E:\Laboratory\Maven\repository\org\springframework\ws\spring-ws-core\2.3.0.RELEASE\spring-ws-core-2.3.0.RELEASE.jar;E:\Laboratory\Maven\repository\commons-logging\commons-logging\1.1.3\commons-logging-1.1.3.jar;E:\Laboratory\Maven\repository\org\springframework\ws\spring-xml\2.3.0.RELEASE\spring-xml-2.3.0.RELEASE.jar;E:\Laboratory\Maven\repository\org\mybatis\mybatis\3.4.0\mybatis-3.4.0.jar;E:\Laboratory\Maven\repository\org\mybatis\mybatis-spring\1.3.0\mybatis-spring-1.3.0.jar;E:\Laboratory\Maven\repository\org\mybatis\generator\mybatis-generator-core\1.3.5\mybatis-generator-core-1.3.5.jar;E:\Laboratory\Maven\repository\mysql\mysql-connector-java\5.1.9\mysql-connector-java-5.1.9.jar;E:\Laboratory\Maven\repository\com\alibaba\druid\1.0.9\druid-1.0.9.jar;C:\Program Files\Java\jdk1.8.0_131\lib\jconsole.jar;C:\Program Files\Java\jdk1.8.0_131\lib\tools.jar;E:\Laboratory\Maven\repository\org\jboss\netty\netty\3.2.5.Final\netty-3.2.5.Final.jar;E:\Laboratory\Maven\repository\com\alibaba\dubbo\2.5.2\dubbo-2.5.2.jar;E:\Laboratory\Maven\repository\org\springframework\spring\2.5.6.SEC03\spring-2.5.6.SEC03.jar;E:\Laboratory\Maven\repository\org\javassist\javassist\3.15.0-GA\javassist-3.15.0-GA.jar;E:\Laboratory\Maven\repository\org\apache\zookeeper\zookeeper\3.5.3-beta\zookeeper-3.5.3-beta.jar;E:\Laboratory\Maven\repository\log4j\log4j\1.2.17\log4j-1.2.17.jar;E:\Laboratory\Maven\repository\io\netty\netty\3.10.5.Final\netty-3.10.5.Final.jar;E:\Laboratory\Maven\repository\com\101tec\zkclient\0.9\zkclient-0.9.jar;E:\Laboratory\Maven\repository\org\apache\activemq\activemq-all\5.8.0\activemq-all-5.8.0.jar;E:\Laboratory\Maven\repository\org\apache\activemq\activemq-amqp\5.8.0\activemq-amqp-5.8.0.jar;E:\Laboratory\Maven\repository\org\apache\activemq\activemq-broker\5.8.0\activemq-broker-5.8.0.jar;E:\Laboratory\Maven\repository\org\apache\activemq\activemq-openwire-legacy\5.8.0\activemq-openwire-legacy-5.8.0.jar;E:\Laboratory\Maven\repository\org\fusesource\hawtbuf\hawtbuf\1.9\hawtbuf-1.9.jar;E:\Laboratory\Maven\repository\org\apache\activemq\activemq-pool\5.8.0\activemq-pool-5.8.0.jar;E:\Laboratory\Maven\repository\org\apache\activemq\activemq-client\5.8.0\activemq-client-5.8.0.jar;E:\Laboratory\Maven\repository\org\apache\geronimo\specs\geronimo-jms_1.1_spec\1.1.1\geronimo-jms_1.1_spec-1.1.1.jar;E:\Laboratory\Maven\repository\org\apache\geronimo\specs\geronimo-j2ee-management_1.1_spec\1.0.1\geronimo-j2ee-management_1.1_spec-1.0.1.jar;E:\Laboratory\Maven\repository\org\apache\geronimo\specs\geronimo-jta_1.0.1B_spec\1.0.1\geronimo-jta_1.0.1B_spec-1.0.1.jar;E:\Laboratory\Maven\repository\commons-pool\commons-pool\1.6\commons-pool-1.6.jar;E:\Laboratory\Maven\repository\quartz\quartz\1.6.0\quartz-1.6.0.jar;E:\Laboratory\Maven\repository\org\elasticsearch\client\rest\5.0.0\rest-5.0.0.jar;E:\Laboratory\Maven\repository\org\apache\httpcomponents\httpclient\4.5.2\httpclient-4.5.2.jar;E:\Laboratory\Maven\repository\org\apache\httpcomponents\httpcore\4.4.5\httpcore-4.4.5.jar;E:\Laboratory\Maven\repository\org\apache\httpcomponents\httpasyncclient\4.1.2\httpasyncclient-4.1.2.jar;E:\Laboratory\Maven\repository\org\apache\httpcomponents\httpcore-nio\4.4.5\httpcore-nio-4.4.5.jar;E:\Laboratory\Maven\repository\org\aspectj\aspectjweaver\1.5.4\aspectjweaver-1.5.4.jar;E:\Laboratory\Maven\repository\org\aspectj\aspectjrt\1.5.4\aspectjrt-1.5.4.jar;E:\Laboratory\Maven\repository\junit\junit\4.12\junit-4.12.jar;E:\Laboratory\Maven\repository\org\hamcrest\hamcrest-core\1.3\hamcrest-core-1.3.jar;E:\Laboratory\Maven\repository\javax\servlet\javax.servlet-api\3.1.0\javax.servlet-api-3.1.0.jar;E:\Laboratory\Maven\repository\javax\servlet\jsp\jsp-api\2.2\jsp-api-2.2.jar;E:\Laboratory\Maven\repository\javax\servlet\jstl\1.2\jstl-1.2.jar;E:\Laboratory\Maven\repository\net\sf\jxls\jxls-core\1.0.6\jxls-core-1.0.6.jar;E:\Laboratory\Maven\repository\commons-collections\commons-collections\3.2.1\commons-collections-3.2.1.jar;E:\Laboratory\Maven\repository\org\apache\commons\commons-jexl\2.0.1\commons-jexl-2.0.1.jar;E:\Laboratory\Maven\repository\org\apache\logging\log4j\log4j-api\2.8.2\log4j-api-2.8.2.jar;E:\Laboratory\Maven\repository\org\apache\logging\log4j\log4j-core\2.8.2\log4j-core-2.8.2.jar;E:\Laboratory\Maven\repository\org\slf4j\slf4j-api\1.7.5\slf4j-api-1.7.5.jar;E:\Laboratory\Maven\repository\org\slf4j\slf4j-log4j12\1.7.5\slf4j-log4j12-1.7.5.jar;E:\Laboratory\Maven\repository\org\apache\logging\log4j\log4j-slf4j-impl\2.8.2\log4j-slf4j-impl-2.8.2.jar;E:\Laboratory\Maven\repository\com\google\zxing\core\3.0.0\core-3.0.0.jar;E:\Laboratory\Maven\repository\com\google\zxing\javase\3.0.0\javase-3.0.0.jar;E:\Laboratory\Maven\repository\com\alibaba\fastjson\1.2.6\fastjson-1.2.6.jar;E:\Laboratory\Maven\repository\org\codehaus\jackson\jackson-mapper-asl\1.9.13\jackson-mapper-asl-1.9.13.jar;E:\Laboratory\Maven\repository\org\codehaus\jackson\jackson-core-asl\1.9.13\jackson-core-asl-1.9.13.jar;E:\Laboratory\Maven\repository\org\apache\commons\commons-lang3\3.4\commons-lang3-3.4.jar;E:\Laboratory\Maven\repository\commons-fileupload\commons-fileupload\1.3.1\commons-fileupload-1.3.1.jar;E:\Laboratory\Maven\repository\commons-io\commons-io\2.4\commons-io-2.4.jar;E:\Laboratory\Maven\repository\commons-codec\commons-codec\1.10\commons-codec-1.10.jar;E:\Laboratory\Maven\repository\commons-beanutils\commons-beanutils\1.9.2\commons-beanutils-1.9.2.jar;E:\Laboratory\Maven\repository\org\apache\commons\commons-collections4\4.1\commons-collections4-4.1.jar;E:\Laboratory\Maven\repository\aopalliance\aopalliance\1.0\aopalliance-1.0.jar;E:\Laboratory\Maven\repository\commons-cli\commons-cli\1.2\commons-cli-1.2.jar;E:\Laboratory\Maven\repository\ognl\ognl\3.1.14\ognl-3.1.14.jar;E:\Laboratory\Maven\repository\commons-net\commons-net\3.2\commons-net-3.2.jar;E:\Laboratory\Maven\repository\org\apache\poi\poi\3.15\poi-3.15.jar;E:\Laboratory\Maven\repository\org\apache\poi\poi-ooxml\3.15\poi-ooxml-3.15.jar;E:\Laboratory\Maven\repository\org\apache\poi\poi-ooxml-schemas\3.15\poi-ooxml-schemas-3.15.jar;E:\Laboratory\Maven\repository\org\apache\xmlbeans\xmlbeans\2.6.0\xmlbeans-2.6.0.jar;E:\Laboratory\Maven\repository\stax\stax-api\1.0.1\stax-api-1.0.1.jar;E:\Laboratory\Maven\repository\com\github\virtuald\curvesapi\1.04\curvesapi-1.04.jar;E:\Laboratory\Maven\repository\javax\jms\jms\1.1\jms-1.1.jar
[INFO ][20171229 16:39:22,916][Environment:109] Client environment:java.library.path=C:\Program Files\Java\jdk1.8.0_131\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\ProgramData\Oracle\Java\javapath;C:\Program Files (x86)\Intel\iCLS Client\;C:\Program Files\Intel\iCLS Client\;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\Program Files\Java\jdk1.8.0_131\bin;D:\Git\Git\cmd;D:\Mysql\mysql-5.6.36-winx64\bin;D:\TortoiseGit\bin;D:\TortoiseSVN\bin;D:\Nodejs\;C:\Users\junlonlu\AppData\Local\Microsoft\WindowsApps;D:\Visual Studio Code\Microsoft VS Code\bin;C:\Users\junlonlu\AppData\Roaming\npm;E:\Laboratory\Maven\apache-maven-3.5.2\bin;.
[INFO ][20171229 16:39:22,917][Environment:109] Client environment:java.io.tmpdir=C:\Users\junlonlu\AppData\Local\Temp\
[INFO ][20171229 16:39:22,917][Environment:109] Client environment:java.compiler=<NA>
[INFO ][20171229 16:39:22,917][Environment:109] Client environment:os.name=Windows 10
[INFO ][20171229 16:39:22,918][Environment:109] Client environment:os.arch=amd64
[INFO ][20171229 16:39:22,919][Environment:109] Client environment:os.version=10.0
[INFO ][20171229 16:39:22,919][Environment:109] Client environment:user.name=junlonlu
[INFO ][20171229 16:39:22,920][Environment:109] Client environment:user.home=C:\Users\junlonlu
[INFO ][20171229 16:39:22,921][Environment:109] Client environment:user.dir=E:\Idea\gw_lulu\web\gw-web-portal
[INFO ][20171229 16:39:22,922][Environment:109] Client environment:os.memory.free=98MB
[INFO ][20171229 16:39:22,922][Environment:109] Client environment:os.memory.max=1799MB
[INFO ][20171229 16:39:22,922][Environment:109] Client environment:os.memory.total=123MB
[INFO ][20171229 16:39:22,926][ZooKeeper:865] Initiating client connection, connectString=127.0.0.1:2181 sessionTimeout=30000 watcher=org.I0Itec.zkclient.ZkClient@560cbf1a
[INFO ][20171229 16:39:22,955][ZkEventThread:64] Starting ZkClient event thread.
[INFO ][20171229 16:39:23,278][ClientCnxnSocket:236] jute.maxbuffer value is 4194304 Bytes
[INFO ][20171229 16:39:23,286][ZkClient:935] Waiting for keeper state SyncConnected
[INFO ][20171229 16:39:23,294][ClientCnxn$SendThread:1113] Opening socket connection to server 127.0.0.1/127.0.0.1:2181. Will not attempt to authenticate using SASL (unknown error)
[INFO ][20171229 16:39:23,296][ClientCnxn$SendThread:948] Socket connection established, initiating session, client: /127.0.0.1:60826, server: 127.0.0.1/127.0.0.1:2181
[INFO ][20171229 16:39:23,354][ClientCnxn$SendThread:1381] Session establishment complete on server 127.0.0.1/127.0.0.1:2181, sessionid = 0x100b9115673000e, negotiated timeout = 30000
[INFO ][20171229 16:39:23,357][ZkClient:712] zookeeper state changed (SyncConnected)
[DEBUG][20171229 16:39:23,367][ExtensionLoader:943]  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class RouterFactory$Adpative implements com.alibaba.dubbo.rpc.cluster.RouterFactory {
public com.alibaba.dubbo.rpc.cluster.Router getRouter(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getProtocol();
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.RouterFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.cluster.RouterFactory extension = (com.alibaba.dubbo.rpc.cluster.RouterFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.RouterFactory.class).getExtension(extName);
return extension.getRouter(arg0);
}
}, dubbo version: 2.5.2, current host: 127.0.0.1
[DEBUG][20171229 16:39:23,381][ExtensionLoader:943]  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ConfiguratorFactory$Adpative implements com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory {
public com.alibaba.dubbo.rpc.cluster.Configurator getConfigurator(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getProtocol();
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory extension = (com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory.class).getExtension(extName);
return extension.getConfigurator(arg0);
}
}, dubbo version: 2.5.2, current host: 127.0.0.1
[INFO ][20171229 16:39:23,391][AbstractRegistry:302]  [DUBBO] Register: consumer://192.168.103.21/com.junlon.facade.user.service.AdminQueryFacade?application=gw-web-portal&category=consumers&check=false&dubbo=2.5.2&interface=com.junlon.facade.user.service.AdminQueryFacade&methods=list&pid=48456&side=consumer&timestamp=1514536762360, dubbo version: 2.5.2, current host: 192.168.103.21
[INFO ][20171229 16:39:23,487][AbstractRegistry:325]  [DUBBO] Subscribe: consumer://192.168.103.21/com.junlon.facade.user.service.AdminQueryFacade?application=gw-web-portal&category=providers,configurators,routers&check=false&dubbo=2.5.2&interface=com.junlon.facade.user.service.AdminQueryFacade&methods=list&pid=48456&side=consumer&timestamp=1514536762360, dubbo version: 2.5.2, current host: 192.168.103.21
[INFO ][20171229 16:39:23,743][AbstractRegistry:422]  [DUBBO] Notify urls for subscribe url consumer://192.168.103.21/com.junlon.facade.user.service.AdminQueryFacade?application=gw-web-portal&category=providers,configurators,routers&check=false&dubbo=2.5.2&interface=com.junlon.facade.user.service.AdminQueryFacade&methods=list&pid=48456&side=consumer&timestamp=1514536762360, urls: [dubbo://192.168.103.21:20880/com.junlon.facade.user.service.AdminQueryFacade?anyhost=true&application=gw-serivce-user&default.accepts=1000&default.dispatcher=all&default.retries=0&default.threadpool=fixed&default.threads=1000&default.timeout=30000&dubbo=2.5.2&interface=com.junlon.facade.user.service.AdminQueryFacade&methods=list&pid=54212&retries=0&side=provider&timestamp=1514536669610, empty://192.168.103.21/com.junlon.facade.user.service.AdminQueryFacade?application=gw-web-portal&category=configurators&check=false&dubbo=2.5.2&interface=com.junlon.facade.user.service.AdminQueryFacade&methods=list&pid=48456&side=consumer&timestamp=1514536762360, empty://192.168.103.21/com.junlon.facade.user.service.AdminQueryFacade?application=gw-web-portal&category=routers&check=false&dubbo=2.5.2&interface=com.junlon.facade.user.service.AdminQueryFacade&methods=list&pid=48456&side=consumer&timestamp=1514536762360], dubbo version: 2.5.2, current host: 192.168.103.21
[DEBUG][20171229 16:39:23,824][ExtensionLoader:943]  [DUBBO] package com.alibaba.dubbo.remoting;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Transporter$Adpative implements com.alibaba.dubbo.remoting.Transporter {
public com.alibaba.dubbo.remoting.Client connect(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.remoting.ChannelHandler arg1) throws com.alibaba.dubbo.common.URL {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("client", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Transporter) name from url(" + url.toString() + ") use keys([client, transporter])");
com.alibaba.dubbo.remoting.Transporter extension = (com.alibaba.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.connect(arg0, arg1);
}
public com.alibaba.dubbo.remoting.Server bind(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.remoting.ChannelHandler arg1) throws com.alibaba.dubbo.common.URL {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("server", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Transporter) name from url(" + url.toString() + ") use keys([server, transporter])");
com.alibaba.dubbo.remoting.Transporter extension = (com.alibaba.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.bind(arg0, arg1);
}
}, dubbo version: 2.5.2, current host: 192.168.103.21
[DEBUG][20171229 16:39:23,885][ExtensionLoader:943]  [DUBBO] package com.alibaba.dubbo.remoting;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Dispatcher$Adpative implements com.alibaba.dubbo.remoting.Dispatcher {
public com.alibaba.dubbo.remoting.ChannelHandler dispatch(com.alibaba.dubbo.remoting.ChannelHandler arg0, com.alibaba.dubbo.common.URL arg1) {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = url.getParameter("dispatcher", url.getParameter("dispather", url.getParameter("channel.handler", "all")));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Dispatcher) name from url(" + url.toString() + ") use keys([dispatcher, dispather, channel.handler])");
com.alibaba.dubbo.remoting.Dispatcher extension = (com.alibaba.dubbo.remoting.Dispatcher)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Dispatcher.class).getExtension(extName);
return extension.dispatch(arg0, arg1);
}
}, dubbo version: 2.5.2, current host: 192.168.103.21
[DEBUG][20171229 16:39:23,902][ExtensionLoader:943]  [DUBBO] package com.alibaba.dubbo.common.threadpool;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ThreadPool$Adpative implements com.alibaba.dubbo.common.threadpool.ThreadPool {
public java.util.concurrent.Executor getExecutor(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("threadpool", "fixed");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.common.threadpool.ThreadPool) name from url(" + url.toString() + ") use keys([threadpool])");
com.alibaba.dubbo.common.threadpool.ThreadPool extension = (com.alibaba.dubbo.common.threadpool.ThreadPool)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.common.threadpool.ThreadPool.class).getExtension(extName);
return extension.getExecutor(arg0);
}
}, dubbo version: 2.5.2, current host: 192.168.103.21
[INFO ][20171229 16:39:23,979][AbstractClient:287]  [DUBBO] Successed connect to server /192.168.103.21:20880 from NettyClient 192.168.103.21 using dubbo version 2.5.2, channel is NettyChannel [channel=[id: 0x757194dc, /192.168.103.21:60827 => /192.168.103.21:20880]], dubbo version: 2.5.2, current host: 192.168.103.21
[INFO ][20171229 16:39:23,980][AbstractClient:105]  [DUBBO] Start NettyClient DESKTOP-7P60AU6/192.168.103.21 connect to the server /192.168.103.21:20880, dubbo version: 2.5.2, current host: 192.168.103.21
[DEBUG][20171229 16:39:24,039][ExtensionLoader:943]  [DUBBO] package com.alibaba.dubbo.cache;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class CacheFactory$Adpative implements com.alibaba.dubbo.cache.CacheFactory {
public com.alibaba.dubbo.cache.Cache getCache(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("cache", "lru");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.cache.CacheFactory) name from url(" + url.toString() + ") use keys([cache])");
com.alibaba.dubbo.cache.CacheFactory extension = (com.alibaba.dubbo.cache.CacheFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.cache.CacheFactory.class).getExtension(extName);
return extension.getCache(arg0);
}
}, dubbo version: 2.5.2, current host: 192.168.103.21
[DEBUG][20171229 16:39:24,070][ExtensionLoader:943]  [DUBBO] package com.alibaba.dubbo.monitor;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class MonitorFactory$Adpative implements com.alibaba.dubbo.monitor.MonitorFactory {
public com.alibaba.dubbo.monitor.Monitor getMonitor(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.monitor.MonitorFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.monitor.MonitorFactory extension = (com.alibaba.dubbo.monitor.MonitorFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.monitor.MonitorFactory.class).getExtension(extName);
return extension.getMonitor(arg0);
}
}, dubbo version: 2.5.2, current host: 192.168.103.21
[DEBUG][20171229 16:39:24,087][ExtensionLoader:943]  [DUBBO] package com.alibaba.dubbo.validation;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Validation$Adpative implements com.alibaba.dubbo.validation.Validation {
public com.alibaba.dubbo.validation.Validator getValidator(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("validation", "jvalidation");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.validation.Validation) name from url(" + url.toString() + ") use keys([validation])");
com.alibaba.dubbo.validation.Validation extension = (com.alibaba.dubbo.validation.Validation)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.validation.Validation.class).getExtension(extName);
return extension.getValidator(arg0);
}
}, dubbo version: 2.5.2, current host: 192.168.103.21
[INFO ][20171229 16:39:24,121][ReferenceConfig:423]  [DUBBO] Refer dubbo service com.junlon.facade.user.service.AdminQueryFacade from url zookeeper://127.0.0.1:2181/com.alibaba.dubbo.registry.RegistryService?anyhost=true&application=gw-web-portal&check=false&default.accepts=1000&default.dispatcher=all&default.retries=0&default.timeout=30000&dubbo=2.5.2&interface=com.junlon.facade.user.service.AdminQueryFacade&methods=list&pid=48456&retries=0&side=consumer&timestamp=1514536762360, dubbo version: 2.5.2, current host: 192.168.103.21
[DEBUG][20171229 16:39:25,434][DecodeHandler:60]  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcResult, dubbo version: 2.5.2, current host: 192.168.103.21
[INFO ][20171229 16:39:25,870][SpringTest:63] testMybatis : [
	{
		"aaccount":"admin",
		"acontact":"13600000000",
		"adept":"it",
		"aid":"1",
		"aname":"winn啊",
		"apwd":"admin",
		"arole":"1",
		"state":"1"
	},
	{
		"aaccount":"test",
		"acontact":"18100000000",
		"adept":"test",
		"aid":"1589027c8a4411e7b5cec85b76aeb963",
		"aname":"test",
		"apwd":"111111",
		"arole":"1",
		"state":"1"
	},
	{
		"aaccount":"啊啊啊啊啊啊啊12345678",
		"acontact":"13610003422",
		"aid":"1819df469aac11e79724966435dcafda",
		"aname":"å\u0095\u008A12345678",
		"apwd":"admin123",
		"arole":"0",
		"state":"1"
	},
	{
		"aaccount":"test1",
		"acontact":"18100000123",
		"adept":"testtt",
		"aid":"316333ad8d5d11e7b5cec85b76aeb963",
		"aname":"testtt",
		"apwd":"111111",
		"arole":"1",
		"state":"1"
	},
	{
		"aaccount":"lulu",
		"acontact":"18000000001",
		"adept":"IT",
		"aid":"64c7f5eb87e311e7b5cec85b76aeb963",
		"aname":"lulu",
		"apwd":"123456",
		"arole":"1",
		"state":"1"
	},
	{
		"aaccount":"testAdmin",
		"acontact":"18000000001",
		"aid":"8066d30398f311e7acc0c85b76aeb963",
		"aname":"他她",
		"apwd":"admin",
		"arole":"1",
		"state":"1"
	},
	{
		"aaccount":"test2",
		"acontact":"18100000123",
		"adept":"testtt",
		"aid":"db493c0a8d5c11e7b5cec85b76aeb963",
		"aname":"testtt",
		"apwd":"111111",
		"arole":"1",
		"state":"1"
	}
]
[INFO ][20171229 16:39:25,874][AbstractApplicationContext:957] Closing org.springframework.context.support.GenericApplicationContext@6dc17b83: startup date [Fri Dec 29 16:39:20 CST 2017]; root of context hierarchy
[INFO ][20171229 16:39:25,874][AbstractConfig$1:450]  [DUBBO] Run shutdown hook now., dubbo version: 2.5.2, current host: 192.168.103.21
[INFO ][20171229 16:39:25,876][AbstractRegistry:343]  [DUBBO] Unsubscribe: consumer://192.168.103.21/com.junlon.facade.user.service.AdminQueryFacade?application=gw-web-portal&category=providers,configurators,routers&check=false&dubbo=2.5.2&interface=com.junlon.facade.user.service.AdminQueryFacade&methods=list&pid=48456&side=consumer&timestamp=1514536762360, dubbo version: 2.5.2, current host: 192.168.103.21
[INFO ][20171229 16:39:25,876][AbstractRegistryFactory:63]  [DUBBO] Close all registries [zookeeper://127.0.0.1:2181/com.alibaba.dubbo.registry.RegistryService?application=gw-web-portal&dubbo=2.5.2&interface=com.alibaba.dubbo.registry.RegistryService&pid=48456&timestamp=1514536762431], dubbo version: 2.5.2, current host: 192.168.103.21
[INFO ][20171229 16:39:25,876][AbstractRegistry:485]  [DUBBO] Destroy registry:zookeeper://127.0.0.1:2181/com.alibaba.dubbo.registry.RegistryService?application=gw-web-portal&dubbo=2.5.2&interface=com.alibaba.dubbo.registry.RegistryService&pid=48456&timestamp=1514536762431, dubbo version: 2.5.2, current host: 192.168.103.21
[INFO ][20171229 16:39:25,877][AbstractRegistry:312]  [DUBBO] Unregister: consumer://192.168.103.21/com.junlon.facade.user.service.AdminQueryFacade?application=gw-web-portal&category=consumers&check=false&dubbo=2.5.2&interface=com.junlon.facade.user.service.AdminQueryFacade&methods=list&pid=48456&side=consumer&timestamp=1514536762360, dubbo version: 2.5.2, current host: 192.168.103.21
[INFO ][20171229 16:39:25,879][NettyChannel:135]  [DUBBO] Close netty channel [id: 0x757194dc, /192.168.103.21:60827 => /192.168.103.21:20880], dubbo version: 2.5.2, current host: 192.168.103.21
[INFO ][20171229 16:39:25,881][DubboProtocol$1:130]  [DUBBO] disconected from /192.168.103.21:20880,url:dubbo://192.168.103.21:20880/com.junlon.facade.user.service.AdminQueryFacade?anyhost=true&application=gw-web-portal&check=false&codec=dubbo&default.accepts=1000&default.dispatcher=all&default.retries=0&default.timeout=30000&dubbo=2.5.2&heartbeat=60000&interface=com.junlon.facade.user.service.AdminQueryFacade&methods=list&pid=48456&retries=0&side=consumer&timestamp=1514536762360, dubbo version: 2.5.2, current host: 192.168.103.21
[INFO ][20171229 16:39:25,943][AbstractRegistry:494]  [DUBBO] Destroy unregister url consumer://192.168.103.21/com.junlon.facade.user.service.AdminQueryFacade?application=gw-web-portal&category=consumers&check=false&dubbo=2.5.2&interface=com.junlon.facade.user.service.AdminQueryFacade&methods=list&pid=48456&side=consumer&timestamp=1514536762360, dubbo version: 2.5.2, current host: 192.168.103.21
[INFO ][20171229 16:39:25,944][ZkEventThread:82] Terminate ZkClient event thread.
[INFO ][20171229 16:39:25,998][ZooKeeper:1326] Session: 0x100b9115673000e closed
[INFO ][20171229 16:39:25,998][ClientCnxn$EventThread:513] EventThread shut down for session: 0x100b9115673000e
[INFO ][20171229 16:39:25,999][DubboProtocol:407]  [DUBBO] Close dubbo connect: 192.168.103.21:0-->192.168.103.21:20880, dubbo version: 2.5.2, current host: 192.168.103.21
[INFO ][20171229 16:39:26,000][DubboProtocol:421]  [DUBBO] Close dubbo connect: 192.168.103.21:0-->192.168.103.21:20880, dubbo version: 2.5.2, current host: 192.168.103.21
[INFO ][20171229 16:42:37,941][AbstractTestContextBootstrapper:259] Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]
[INFO ][20171229 16:42:37,977][AbstractTestContextBootstrapper:185] Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@47d90b9e, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@1184ab05, org.springframework.test.context.support.DependencyInjectionTestExecutionListener@3aefe5e5, org.springframework.test.context.support.DirtiesContextTestExecutionListener@149e0f5d, org.springframework.test.context.transaction.TransactionalTestExecutionListener@1b1473ab, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@2f7c2f4f]
[INFO ][20171229 16:42:38,154][XmlBeanDefinitionReader:317] Loading XML bean definitions from class path resource [spring/spring-context.xml]
[INFO ][20171229 16:42:38,663][XmlBeanDefinitionReader:317] Loading XML bean definitions from class path resource [spring/dubbo/dubbo-consumer.xml]
[INFO ][20171229 16:42:38,917][?:?] using logger: com.alibaba.dubbo.common.logger.log4j.Log4jLoggerAdapter
[INFO ][20171229 16:42:39,018][XmlBeanDefinitionReader:317] Loading XML bean definitions from class path resource [spring/dubbo/dubbo-reference-user.xml]
[INFO ][20171229 16:42:39,144][XmlBeanDefinitionReader:317] Loading XML bean definitions from class path resource [spring/spring-amp.xml]
[INFO ][20171229 16:42:39,224][AbstractApplicationContext:577] Refreshing org.springframework.context.support.GenericApplicationContext@6dc17b83: startup date [Fri Dec 29 16:42:39 CST 2017]; root of context hierarchy
[INFO ][20171229 16:42:39,692][PropertiesLoaderSupport:172] Loading properties file from class path resource [public_system.properties]
[DEBUG][20171229 16:42:40,035][ExtensionLoader:943]  [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Protocol$Adpative implements com.alibaba.dubbo.rpc.Protocol {
public void destroy() {throw new UnsupportedOperationException("method public abstract void com.alibaba.dubbo.rpc.Protocol.destroy() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public int getDefaultPort() {throw new UnsupportedOperationException("method public abstract int com.alibaba.dubbo.rpc.Protocol.getDefaultPort() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public com.alibaba.dubbo.rpc.Invoker refer(java.lang.Class arg0, com.alibaba.dubbo.common.URL arg1) throws java.lang.Class {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.refer(arg0, arg1);
}
public com.alibaba.dubbo.rpc.Exporter export(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.Invoker {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.export(arg0);
}
}, dubbo version: 2.5.2, current host: 127.0.0.1
[DEBUG][20171229 16:42:40,329][ExtensionLoader:943]  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Cluster$Adpative implements com.alibaba.dubbo.rpc.cluster.Cluster {
public com.alibaba.dubbo.rpc.Invoker join(com.alibaba.dubbo.rpc.cluster.Directory arg0) throws com.alibaba.dubbo.rpc.cluster.Directory {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("cluster", "failover");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.Cluster) name from url(" + url.toString() + ") use keys([cluster])");
com.alibaba.dubbo.rpc.cluster.Cluster extension = (com.alibaba.dubbo.rpc.cluster.Cluster)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.Cluster.class).getExtension(extName);
return extension.join(arg0);
}
}, dubbo version: 2.5.2, current host: 127.0.0.1
[DEBUG][20171229 16:42:40,360][ExtensionLoader:943]  [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ProxyFactory$Adpative implements com.alibaba.dubbo.rpc.ProxyFactory {
public java.lang.Object getProxy(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.Invoker {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getProxy(arg0);
}
public com.alibaba.dubbo.rpc.Invoker getInvoker(java.lang.Object arg0, java.lang.Class arg1, com.alibaba.dubbo.common.URL arg2) throws java.lang.Object {
if (arg2 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg2;
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getInvoker(arg0, arg1, arg2);
}
}, dubbo version: 2.5.2, current host: 127.0.0.1
[DEBUG][20171229 16:42:40,628][ExtensionLoader:943]  [DUBBO] package com.alibaba.dubbo.registry;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class RegistryFactory$Adpative implements com.alibaba.dubbo.registry.RegistryFactory {
public com.alibaba.dubbo.registry.Registry getRegistry(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.registry.RegistryFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.registry.RegistryFactory extension = (com.alibaba.dubbo.registry.RegistryFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.registry.RegistryFactory.class).getExtension(extName);
return extension.getRegistry(arg0);
}
}, dubbo version: 2.5.2, current host: 127.0.0.1
[DEBUG][20171229 16:42:40,650][ExtensionLoader:943]  [DUBBO] package com.alibaba.dubbo.remoting.zookeeper;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ZookeeperTransporter$Adpative implements com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter {
public com.alibaba.dubbo.remoting.zookeeper.ZookeeperClient connect(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("client", url.getParameter("transporter", "zkclient"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter) name from url(" + url.toString() + ") use keys([client, transporter])");
com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter extension = (com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter.class).getExtension(extName);
return extension.connect(arg0);
}
}, dubbo version: 2.5.2, current host: 127.0.0.1
[INFO ][20171229 16:42:40,679][AbstractRegistry:232]  [DUBBO] Load registry store file C:\Users\junlonlu\.dubbo\dubbo-registry-127.0.0.1.cache, data: {com.junlon.facade.user.service.AdminQueryFacade=empty://192.168.103.21:20880/com.junlon.facade.user.service.AdminQueryFacade?anyhost=true&application=gw-serivce-user&category=configurators&check=false&default.accepts=1000&default.dispatcher=all&default.retries=0&default.threadpool=fixed&default.threads=1000&default.timeout=30000&dubbo=2.5.2&interface=com.junlon.facade.user.service.AdminQueryFacade&methods=list&pid=54212&retries=0&side=provider&timestamp=1514536669610, com.alibaba.dubbo.monitor.MonitorService=empty://192.168.103.21/com.alibaba.dubbo.monitor.MonitorService?category=configurators&dubbo=2.5.2&interface=com.alibaba.dubbo.monitor.MonitorService&pid=54212&timestamp=1514536669885 empty://192.168.103.21/com.alibaba.dubbo.monitor.MonitorService?category=routers&dubbo=2.5.2&interface=com.alibaba.dubbo.monitor.MonitorService&pid=54212&timestamp=1514536669885 empty://192.168.103.21/com.alibaba.dubbo.monitor.MonitorService?category=providers&dubbo=2.5.2&interface=com.alibaba.dubbo.monitor.MonitorService&pid=54212&timestamp=1514536669885}, dubbo version: 2.5.2, current host: 127.0.0.1
[INFO ][20171229 16:42:40,698][ZkEventThread:64] Starting ZkClient event thread.
[INFO ][20171229 16:42:40,710][Environment:109] Client environment:zookeeper.version=3.5.3-beta-8ce24f9e675cbefffb8f21a47e06b42864475a60, built on 04/03/2017 16:19 GMT
[INFO ][20171229 16:42:40,711][Environment:109] Client environment:host.name=windows10.microdone.cn
[INFO ][20171229 16:42:40,711][Environment:109] Client environment:java.version=1.8.0_131
[INFO ][20171229 16:42:40,712][Environment:109] Client environment:java.vendor=Oracle Corporation
[INFO ][20171229 16:42:40,712][Environment:109] Client environment:java.home=C:\Program Files\Java\jdk1.8.0_131\jre
[INFO ][20171229 16:42:40,712][Environment:109] Client environment:java.class.path=D:\Idea\IntelliJ IDEA 2017.1.1\lib\idea_rt.jar;D:\Idea\IntelliJ IDEA 2017.1.1\plugins\junit\lib\junit-rt.jar;C:\Program Files\Java\jdk1.8.0_131\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.8.0_131\jre\lib\deploy.jar;C:\Program Files\Java\jdk1.8.0_131\jre\lib\ext\access-bridge-64.jar;C:\Program Files\Java\jdk1.8.0_131\jre\lib\ext\cldrdata.jar;C:\Program Files\Java\jdk1.8.0_131\jre\lib\ext\dnsns.jar;C:\Program Files\Java\jdk1.8.0_131\jre\lib\ext\jaccess.jar;C:\Program Files\Java\jdk1.8.0_131\jre\lib\ext\jfxrt.jar;C:\Program Files\Java\jdk1.8.0_131\jre\lib\ext\localedata.jar;C:\Program Files\Java\jdk1.8.0_131\jre\lib\ext\nashorn.jar;C:\Program Files\Java\jdk1.8.0_131\jre\lib\ext\sunec.jar;C:\Program Files\Java\jdk1.8.0_131\jre\lib\ext\sunjce_provider.jar;C:\Program Files\Java\jdk1.8.0_131\jre\lib\ext\sunmscapi.jar;C:\Program Files\Java\jdk1.8.0_131\jre\lib\ext\sunpkcs11.jar;C:\Program Files\Java\jdk1.8.0_131\jre\lib\ext\zipfs.jar;C:\Program Files\Java\jdk1.8.0_131\jre\lib\javaws.jar;C:\Program Files\Java\jdk1.8.0_131\jre\lib\jce.jar;C:\Program Files\Java\jdk1.8.0_131\jre\lib\jfr.jar;C:\Program Files\Java\jdk1.8.0_131\jre\lib\jfxswt.jar;C:\Program Files\Java\jdk1.8.0_131\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.8.0_131\jre\lib\management-agent.jar;C:\Program Files\Java\jdk1.8.0_131\jre\lib\plugin.jar;C:\Program Files\Java\jdk1.8.0_131\jre\lib\resources.jar;C:\Program Files\Java\jdk1.8.0_131\jre\lib\rt.jar;D:\Idea\IntelliJ IDEA 2017.1.1\lib\junit.jar;D:\Idea\IntelliJ IDEA 2017.1.1\lib\junit-4.12.jar;D:\Idea\IntelliJ IDEA 2017.1.1\lib\hamcrest-core-1.3.jar;E:\Idea\gw_lulu\web\gw-web-portal\target\test-classes;E:\Idea\gw_lulu\web\gw-web-portal\target\classes;E:\Idea\gw_lulu\common\gw-common-base\target\classes;E:\Idea\gw_lulu\facade\gw-facade-user\target\classes;E:\Laboratory\Maven\repository\org\springframework\spring-aop\4.2.3.RELEASE\spring-aop-4.2.3.RELEASE.jar;E:\Laboratory\Maven\repository\org\springframework\spring-aspects\4.2.3.RELEASE\spring-aspects-4.2.3.RELEASE.jar;E:\Laboratory\Maven\repository\org\springframework\spring-beans\4.2.3.RELEASE\spring-beans-4.2.3.RELEASE.jar;E:\Laboratory\Maven\repository\org\springframework\spring-context\4.2.3.RELEASE\spring-context-4.2.3.RELEASE.jar;E:\Laboratory\Maven\repository\org\springframework\spring-context-support\4.2.3.RELEASE\spring-context-support-4.2.3.RELEASE.jar;E:\Laboratory\Maven\repository\org\springframework\spring-core\4.2.3.RELEASE\spring-core-4.2.3.RELEASE.jar;E:\Laboratory\Maven\repository\org\springframework\spring-expression\4.2.3.RELEASE\spring-expression-4.2.3.RELEASE.jar;E:\Laboratory\Maven\repository\org\springframework\spring-instrument\4.2.3.RELEASE\spring-instrument-4.2.3.RELEASE.jar;E:\Laboratory\Maven\repository\org\springframework\spring-instrument-tomcat\4.2.3.RELEASE\spring-instrument-tomcat-4.2.3.RELEASE.jar;E:\Laboratory\Maven\repository\org\springframework\data\spring-data-jpa\1.9.4.RELEASE\spring-data-jpa-1.9.4.RELEASE.jar;E:\Laboratory\Maven\repository\org\springframework\data\spring-data-commons\1.11.4.RELEASE\spring-data-commons-1.11.4.RELEASE.jar;E:\Laboratory\Maven\repository\org\slf4j\jcl-over-slf4j\1.7.13\jcl-over-slf4j-1.7.13.jar;E:\Laboratory\Maven\repository\org\springframework\spring-jms\4.2.3.RELEASE\spring-jms-4.2.3.RELEASE.jar;E:\Laboratory\Maven\repository\org\springframework\spring-messaging\4.2.3.RELEASE\spring-messaging-4.2.3.RELEASE.jar;E:\Laboratory\Maven\repository\org\springframework\spring-orm\4.2.3.RELEASE\spring-orm-4.2.3.RELEASE.jar;E:\Laboratory\Maven\repository\org\springframework\spring-jdbc\4.2.3.RELEASE\spring-jdbc-4.2.3.RELEASE.jar;E:\Laboratory\Maven\repository\org\springframework\spring-oxm\4.2.3.RELEASE\spring-oxm-4.2.3.RELEASE.jar;E:\Laboratory\Maven\repository\org\springframework\spring-tx\4.2.3.RELEASE\spring-tx-4.2.3.RELEASE.jar;E:\Laboratory\Maven\repository\org\springframework\spring-web\4.2.3.RELEASE\spring-web-4.2.3.RELEASE.jar;E:\Laboratory\Maven\repository\org\springframework\spring-webmvc\4.2.3.RELEASE\spring-webmvc-4.2.3.RELEASE.jar;E:\Laboratory\Maven\repository\org\springframework\spring-webmvc-portlet\4.2.3.RELEASE\spring-webmvc-portlet-4.2.3.RELEASE.jar;E:\Laboratory\Maven\repository\org\springframework\spring-test\4.2.3.RELEASE\spring-test-4.2.3.RELEASE.jar;E:\Laboratory\Maven\repository\org\springframework\ws\spring-ws-core\2.3.0.RELEASE\spring-ws-core-2.3.0.RELEASE.jar;E:\Laboratory\Maven\repository\commons-logging\commons-logging\1.1.3\commons-logging-1.1.3.jar;E:\Laboratory\Maven\repository\org\springframework\ws\spring-xml\2.3.0.RELEASE\spring-xml-2.3.0.RELEASE.jar;E:\Laboratory\Maven\repository\org\mybatis\mybatis\3.4.0\mybatis-3.4.0.jar;E:\Laboratory\Maven\repository\org\mybatis\mybatis-spring\1.3.0\mybatis-spring-1.3.0.jar;E:\Laboratory\Maven\repository\org\mybatis\generator\mybatis-generator-core\1.3.5\mybatis-generator-core-1.3.5.jar;E:\Laboratory\Maven\repository\mysql\mysql-connector-java\5.1.9\mysql-connector-java-5.1.9.jar;E:\Laboratory\Maven\repository\com\alibaba\druid\1.0.9\druid-1.0.9.jar;C:\Program Files\Java\jdk1.8.0_131\lib\jconsole.jar;C:\Program Files\Java\jdk1.8.0_131\lib\tools.jar;E:\Laboratory\Maven\repository\org\jboss\netty\netty\3.2.5.Final\netty-3.2.5.Final.jar;E:\Laboratory\Maven\repository\com\alibaba\dubbo\2.5.2\dubbo-2.5.2.jar;E:\Laboratory\Maven\repository\org\springframework\spring\2.5.6.SEC03\spring-2.5.6.SEC03.jar;E:\Laboratory\Maven\repository\org\javassist\javassist\3.15.0-GA\javassist-3.15.0-GA.jar;E:\Laboratory\Maven\repository\org\apache\zookeeper\zookeeper\3.5.3-beta\zookeeper-3.5.3-beta.jar;E:\Laboratory\Maven\repository\log4j\log4j\1.2.17\log4j-1.2.17.jar;E:\Laboratory\Maven\repository\io\netty\netty\3.10.5.Final\netty-3.10.5.Final.jar;E:\Laboratory\Maven\repository\com\101tec\zkclient\0.9\zkclient-0.9.jar;E:\Laboratory\Maven\repository\org\apache\activemq\activemq-all\5.8.0\activemq-all-5.8.0.jar;E:\Laboratory\Maven\repository\org\apache\activemq\activemq-amqp\5.8.0\activemq-amqp-5.8.0.jar;E:\Laboratory\Maven\repository\org\apache\activemq\activemq-broker\5.8.0\activemq-broker-5.8.0.jar;E:\Laboratory\Maven\repository\org\apache\activemq\activemq-openwire-legacy\5.8.0\activemq-openwire-legacy-5.8.0.jar;E:\Laboratory\Maven\repository\org\fusesource\hawtbuf\hawtbuf\1.9\hawtbuf-1.9.jar;E:\Laboratory\Maven\repository\org\apache\activemq\activemq-pool\5.8.0\activemq-pool-5.8.0.jar;E:\Laboratory\Maven\repository\org\apache\activemq\activemq-client\5.8.0\activemq-client-5.8.0.jar;E:\Laboratory\Maven\repository\org\apache\geronimo\specs\geronimo-jms_1.1_spec\1.1.1\geronimo-jms_1.1_spec-1.1.1.jar;E:\Laboratory\Maven\repository\org\apache\geronimo\specs\geronimo-j2ee-management_1.1_spec\1.0.1\geronimo-j2ee-management_1.1_spec-1.0.1.jar;E:\Laboratory\Maven\repository\org\apache\geronimo\specs\geronimo-jta_1.0.1B_spec\1.0.1\geronimo-jta_1.0.1B_spec-1.0.1.jar;E:\Laboratory\Maven\repository\commons-pool\commons-pool\1.6\commons-pool-1.6.jar;E:\Laboratory\Maven\repository\quartz\quartz\1.6.0\quartz-1.6.0.jar;E:\Laboratory\Maven\repository\org\elasticsearch\client\rest\5.0.0\rest-5.0.0.jar;E:\Laboratory\Maven\repository\org\apache\httpcomponents\httpclient\4.5.2\httpclient-4.5.2.jar;E:\Laboratory\Maven\repository\org\apache\httpcomponents\httpcore\4.4.5\httpcore-4.4.5.jar;E:\Laboratory\Maven\repository\org\apache\httpcomponents\httpasyncclient\4.1.2\httpasyncclient-4.1.2.jar;E:\Laboratory\Maven\repository\org\apache\httpcomponents\httpcore-nio\4.4.5\httpcore-nio-4.4.5.jar;E:\Laboratory\Maven\repository\org\aspectj\aspectjweaver\1.5.4\aspectjweaver-1.5.4.jar;E:\Laboratory\Maven\repository\org\aspectj\aspectjrt\1.5.4\aspectjrt-1.5.4.jar;E:\Laboratory\Maven\repository\junit\junit\4.12\junit-4.12.jar;E:\Laboratory\Maven\repository\org\hamcrest\hamcrest-core\1.3\hamcrest-core-1.3.jar;E:\Laboratory\Maven\repository\javax\servlet\javax.servlet-api\3.1.0\javax.servlet-api-3.1.0.jar;E:\Laboratory\Maven\repository\javax\servlet\jsp\jsp-api\2.2\jsp-api-2.2.jar;E:\Laboratory\Maven\repository\javax\servlet\jstl\1.2\jstl-1.2.jar;E:\Laboratory\Maven\repository\net\sf\jxls\jxls-core\1.0.6\jxls-core-1.0.6.jar;E:\Laboratory\Maven\repository\commons-collections\commons-collections\3.2.1\commons-collections-3.2.1.jar;E:\Laboratory\Maven\repository\org\apache\commons\commons-jexl\2.0.1\commons-jexl-2.0.1.jar;E:\Laboratory\Maven\repository\org\apache\logging\log4j\log4j-api\2.8.2\log4j-api-2.8.2.jar;E:\Laboratory\Maven\repository\org\apache\logging\log4j\log4j-core\2.8.2\log4j-core-2.8.2.jar;E:\Laboratory\Maven\repository\org\slf4j\slf4j-api\1.7.5\slf4j-api-1.7.5.jar;E:\Laboratory\Maven\repository\org\slf4j\slf4j-log4j12\1.7.5\slf4j-log4j12-1.7.5.jar;E:\Laboratory\Maven\repository\org\apache\logging\log4j\log4j-slf4j-impl\2.8.2\log4j-slf4j-impl-2.8.2.jar;E:\Laboratory\Maven\repository\com\google\zxing\core\3.0.0\core-3.0.0.jar;E:\Laboratory\Maven\repository\com\google\zxing\javase\3.0.0\javase-3.0.0.jar;E:\Laboratory\Maven\repository\com\alibaba\fastjson\1.2.6\fastjson-1.2.6.jar;E:\Laboratory\Maven\repository\org\codehaus\jackson\jackson-mapper-asl\1.9.13\jackson-mapper-asl-1.9.13.jar;E:\Laboratory\Maven\repository\org\codehaus\jackson\jackson-core-asl\1.9.13\jackson-core-asl-1.9.13.jar;E:\Laboratory\Maven\repository\org\apache\commons\commons-lang3\3.4\commons-lang3-3.4.jar;E:\Laboratory\Maven\repository\commons-fileupload\commons-fileupload\1.3.1\commons-fileupload-1.3.1.jar;E:\Laboratory\Maven\repository\commons-io\commons-io\2.4\commons-io-2.4.jar;E:\Laboratory\Maven\repository\commons-codec\commons-codec\1.10\commons-codec-1.10.jar;E:\Laboratory\Maven\repository\commons-beanutils\commons-beanutils\1.9.2\commons-beanutils-1.9.2.jar;E:\Laboratory\Maven\repository\org\apache\commons\commons-collections4\4.1\commons-collections4-4.1.jar;E:\Laboratory\Maven\repository\aopalliance\aopalliance\1.0\aopalliance-1.0.jar;E:\Laboratory\Maven\repository\commons-cli\commons-cli\1.2\commons-cli-1.2.jar;E:\Laboratory\Maven\repository\ognl\ognl\3.1.14\ognl-3.1.14.jar;E:\Laboratory\Maven\repository\commons-net\commons-net\3.2\commons-net-3.2.jar;E:\Laboratory\Maven\repository\org\apache\poi\poi\3.15\poi-3.15.jar;E:\Laboratory\Maven\repository\org\apache\poi\poi-ooxml\3.15\poi-ooxml-3.15.jar;E:\Laboratory\Maven\repository\org\apache\poi\poi-ooxml-schemas\3.15\poi-ooxml-schemas-3.15.jar;E:\Laboratory\Maven\repository\org\apache\xmlbeans\xmlbeans\2.6.0\xmlbeans-2.6.0.jar;E:\Laboratory\Maven\repository\stax\stax-api\1.0.1\stax-api-1.0.1.jar;E:\Laboratory\Maven\repository\com\github\virtuald\curvesapi\1.04\curvesapi-1.04.jar;E:\Laboratory\Maven\repository\javax\jms\jms\1.1\jms-1.1.jar
[INFO ][20171229 16:42:40,716][Environment:109] Client environment:java.library.path=C:\Program Files\Java\jdk1.8.0_131\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\ProgramData\Oracle\Java\javapath;C:\Program Files (x86)\Intel\iCLS Client\;C:\Program Files\Intel\iCLS Client\;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\Program Files\Java\jdk1.8.0_131\bin;D:\Git\Git\cmd;D:\Mysql\mysql-5.6.36-winx64\bin;D:\TortoiseGit\bin;D:\TortoiseSVN\bin;D:\Nodejs\;C:\Users\junlonlu\AppData\Local\Microsoft\WindowsApps;D:\Visual Studio Code\Microsoft VS Code\bin;C:\Users\junlonlu\AppData\Roaming\npm;E:\Laboratory\Maven\apache-maven-3.5.2\bin;.
[INFO ][20171229 16:42:40,717][Environment:109] Client environment:java.io.tmpdir=C:\Users\junlonlu\AppData\Local\Temp\
[INFO ][20171229 16:42:40,717][Environment:109] Client environment:java.compiler=<NA>
[INFO ][20171229 16:42:40,717][Environment:109] Client environment:os.name=Windows 10
[INFO ][20171229 16:42:40,717][Environment:109] Client environment:os.arch=amd64
[INFO ][20171229 16:42:40,718][Environment:109] Client environment:os.version=10.0
[INFO ][20171229 16:42:40,718][Environment:109] Client environment:user.name=junlonlu
[INFO ][20171229 16:42:40,719][Environment:109] Client environment:user.home=C:\Users\junlonlu
[INFO ][20171229 16:42:40,720][Environment:109] Client environment:user.dir=E:\Idea\gw_lulu\web\gw-web-portal
[INFO ][20171229 16:42:40,720][Environment:109] Client environment:os.memory.free=97MB
[INFO ][20171229 16:42:40,720][Environment:109] Client environment:os.memory.max=1799MB
[INFO ][20171229 16:42:40,720][Environment:109] Client environment:os.memory.total=123MB
[INFO ][20171229 16:42:40,724][ZooKeeper:865] Initiating client connection, connectString=127.0.0.1:2181 sessionTimeout=30000 watcher=org.I0Itec.zkclient.ZkClient@56db847e
[INFO ][20171229 16:42:41,034][ClientCnxnSocket:236] jute.maxbuffer value is 4194304 Bytes
[INFO ][20171229 16:42:41,042][ZkClient:935] Waiting for keeper state SyncConnected
[INFO ][20171229 16:42:41,049][ClientCnxn$SendThread:1113] Opening socket connection to server 127.0.0.1/127.0.0.1:2181. Will not attempt to authenticate using SASL (unknown error)
[INFO ][20171229 16:42:41,051][ClientCnxn$SendThread:948] Socket connection established, initiating session, client: /127.0.0.1:60895, server: 127.0.0.1/127.0.0.1:2181
[INFO ][20171229 16:42:41,103][ClientCnxn$SendThread:1381] Session establishment complete on server 127.0.0.1/127.0.0.1:2181, sessionid = 0x100b9115673000f, negotiated timeout = 30000
[INFO ][20171229 16:42:41,109][ZkClient:712] zookeeper state changed (SyncConnected)
[DEBUG][20171229 16:42:41,123][ExtensionLoader:943]  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class RouterFactory$Adpative implements com.alibaba.dubbo.rpc.cluster.RouterFactory {
public com.alibaba.dubbo.rpc.cluster.Router getRouter(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getProtocol();
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.RouterFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.cluster.RouterFactory extension = (com.alibaba.dubbo.rpc.cluster.RouterFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.RouterFactory.class).getExtension(extName);
return extension.getRouter(arg0);
}
}, dubbo version: 2.5.2, current host: 127.0.0.1
[DEBUG][20171229 16:42:41,145][ExtensionLoader:943]  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ConfiguratorFactory$Adpative implements com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory {
public com.alibaba.dubbo.rpc.cluster.Configurator getConfigurator(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getProtocol();
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory extension = (com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory.class).getExtension(extName);
return extension.getConfigurator(arg0);
}
}, dubbo version: 2.5.2, current host: 127.0.0.1
[INFO ][20171229 16:42:41,155][AbstractRegistry:302]  [DUBBO] Register: consumer://192.168.103.21/com.junlon.facade.user.service.AdminQueryFacade?application=gw-web-portal&category=consumers&check=false&dubbo=2.5.2&interface=com.junlon.facade.user.service.AdminQueryFacade&methods=list&pid=69612&side=consumer&timestamp=1514536960570, dubbo version: 2.5.2, current host: 192.168.103.21
[INFO ][20171229 16:42:41,262][AbstractRegistry:325]  [DUBBO] Subscribe: consumer://192.168.103.21/com.junlon.facade.user.service.AdminQueryFacade?application=gw-web-portal&category=providers,configurators,routers&check=false&dubbo=2.5.2&interface=com.junlon.facade.user.service.AdminQueryFacade&methods=list&pid=69612&side=consumer&timestamp=1514536960570, dubbo version: 2.5.2, current host: 192.168.103.21
[INFO ][20171229 16:42:41,470][AbstractRegistry:422]  [DUBBO] Notify urls for subscribe url consumer://192.168.103.21/com.junlon.facade.user.service.AdminQueryFacade?application=gw-web-portal&category=providers,configurators,routers&check=false&dubbo=2.5.2&interface=com.junlon.facade.user.service.AdminQueryFacade&methods=list&pid=69612&side=consumer&timestamp=1514536960570, urls: [dubbo://192.168.103.21:20880/com.junlon.facade.user.service.AdminQueryFacade?anyhost=true&application=gw-serivce-user&default.accepts=1000&default.dispatcher=all&default.retries=0&default.threadpool=fixed&default.threads=1000&default.timeout=30000&dubbo=2.5.2&interface=com.junlon.facade.user.service.AdminQueryFacade&methods=list&pid=54212&retries=0&side=provider&timestamp=1514536669610, empty://192.168.103.21/com.junlon.facade.user.service.AdminQueryFacade?application=gw-web-portal&category=configurators&check=false&dubbo=2.5.2&interface=com.junlon.facade.user.service.AdminQueryFacade&methods=list&pid=69612&side=consumer&timestamp=1514536960570, empty://192.168.103.21/com.junlon.facade.user.service.AdminQueryFacade?application=gw-web-portal&category=routers&check=false&dubbo=2.5.2&interface=com.junlon.facade.user.service.AdminQueryFacade&methods=list&pid=69612&side=consumer&timestamp=1514536960570], dubbo version: 2.5.2, current host: 192.168.103.21
[DEBUG][20171229 16:42:41,521][ExtensionLoader:943]  [DUBBO] package com.alibaba.dubbo.remoting;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Transporter$Adpative implements com.alibaba.dubbo.remoting.Transporter {
public com.alibaba.dubbo.remoting.Client connect(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.remoting.ChannelHandler arg1) throws com.alibaba.dubbo.common.URL {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("client", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Transporter) name from url(" + url.toString() + ") use keys([client, transporter])");
com.alibaba.dubbo.remoting.Transporter extension = (com.alibaba.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.connect(arg0, arg1);
}
public com.alibaba.dubbo.remoting.Server bind(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.remoting.ChannelHandler arg1) throws com.alibaba.dubbo.common.URL {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("server", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Transporter) name from url(" + url.toString() + ") use keys([server, transporter])");
com.alibaba.dubbo.remoting.Transporter extension = (com.alibaba.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.bind(arg0, arg1);
}
}, dubbo version: 2.5.2, current host: 192.168.103.21
[DEBUG][20171229 16:42:41,579][ExtensionLoader:943]  [DUBBO] package com.alibaba.dubbo.remoting;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Dispatcher$Adpative implements com.alibaba.dubbo.remoting.Dispatcher {
public com.alibaba.dubbo.remoting.ChannelHandler dispatch(com.alibaba.dubbo.remoting.ChannelHandler arg0, com.alibaba.dubbo.common.URL arg1) {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = url.getParameter("dispatcher", url.getParameter("dispather", url.getParameter("channel.handler", "all")));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Dispatcher) name from url(" + url.toString() + ") use keys([dispatcher, dispather, channel.handler])");
com.alibaba.dubbo.remoting.Dispatcher extension = (com.alibaba.dubbo.remoting.Dispatcher)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Dispatcher.class).getExtension(extName);
return extension.dispatch(arg0, arg1);
}
}, dubbo version: 2.5.2, current host: 192.168.103.21
[DEBUG][20171229 16:42:41,596][ExtensionLoader:943]  [DUBBO] package com.alibaba.dubbo.common.threadpool;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ThreadPool$Adpative implements com.alibaba.dubbo.common.threadpool.ThreadPool {
public java.util.concurrent.Executor getExecutor(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("threadpool", "fixed");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.common.threadpool.ThreadPool) name from url(" + url.toString() + ") use keys([threadpool])");
com.alibaba.dubbo.common.threadpool.ThreadPool extension = (com.alibaba.dubbo.common.threadpool.ThreadPool)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.common.threadpool.ThreadPool.class).getExtension(extName);
return extension.getExecutor(arg0);
}
}, dubbo version: 2.5.2, current host: 192.168.103.21
[INFO ][20171229 16:42:41,655][AbstractClient:287]  [DUBBO] Successed connect to server /192.168.103.21:20880 from NettyClient 192.168.103.21 using dubbo version 2.5.2, channel is NettyChannel [channel=[id: 0x5942ee04, /192.168.103.21:60896 => /192.168.103.21:20880]], dubbo version: 2.5.2, current host: 192.168.103.21
[INFO ][20171229 16:42:41,656][AbstractClient:105]  [DUBBO] Start NettyClient DESKTOP-7P60AU6/192.168.103.21 connect to the server /192.168.103.21:20880, dubbo version: 2.5.2, current host: 192.168.103.21
[DEBUG][20171229 16:42:41,695][ExtensionLoader:943]  [DUBBO] package com.alibaba.dubbo.cache;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class CacheFactory$Adpative implements com.alibaba.dubbo.cache.CacheFactory {
public com.alibaba.dubbo.cache.Cache getCache(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("cache", "lru");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.cache.CacheFactory) name from url(" + url.toString() + ") use keys([cache])");
com.alibaba.dubbo.cache.CacheFactory extension = (com.alibaba.dubbo.cache.CacheFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.cache.CacheFactory.class).getExtension(extName);
return extension.getCache(arg0);
}
}, dubbo version: 2.5.2, current host: 192.168.103.21
[DEBUG][20171229 16:42:41,710][ExtensionLoader:943]  [DUBBO] package com.alibaba.dubbo.monitor;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class MonitorFactory$Adpative implements com.alibaba.dubbo.monitor.MonitorFactory {
public com.alibaba.dubbo.monitor.Monitor getMonitor(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.monitor.MonitorFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.monitor.MonitorFactory extension = (com.alibaba.dubbo.monitor.MonitorFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.monitor.MonitorFactory.class).getExtension(extName);
return extension.getMonitor(arg0);
}
}, dubbo version: 2.5.2, current host: 192.168.103.21
[DEBUG][20171229 16:42:41,727][ExtensionLoader:943]  [DUBBO] package com.alibaba.dubbo.validation;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Validation$Adpative implements com.alibaba.dubbo.validation.Validation {
public com.alibaba.dubbo.validation.Validator getValidator(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("validation", "jvalidation");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.validation.Validation) name from url(" + url.toString() + ") use keys([validation])");
com.alibaba.dubbo.validation.Validation extension = (com.alibaba.dubbo.validation.Validation)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.validation.Validation.class).getExtension(extName);
return extension.getValidator(arg0);
}
}, dubbo version: 2.5.2, current host: 192.168.103.21
[INFO ][20171229 16:42:41,774][ReferenceConfig:423]  [DUBBO] Refer dubbo service com.junlon.facade.user.service.AdminQueryFacade from url zookeeper://127.0.0.1:2181/com.alibaba.dubbo.registry.RegistryService?anyhost=true&application=gw-web-portal&check=false&default.accepts=1000&default.dispatcher=all&default.retries=0&default.timeout=30000&dubbo=2.5.2&interface=com.junlon.facade.user.service.AdminQueryFacade&methods=list&pid=69612&retries=0&side=consumer&timestamp=1514536960570, dubbo version: 2.5.2, current host: 192.168.103.21
[DEBUG][20171229 16:42:41,977][DecodeHandler:60]  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcResult, dubbo version: 2.5.2, current host: 192.168.103.21
[INFO ][20171229 16:42:42,104][SpringTest:63] testMybatis : [
	{
		"aaccount":"admin",
		"acontact":"13600000000",
		"adept":"it",
		"aid":"1",
		"aname":"winn啊",
		"apwd":"admin",
		"arole":"1",
		"state":"1"
	},
	{
		"aaccount":"test",
		"acontact":"18100000000",
		"adept":"test",
		"aid":"1589027c8a4411e7b5cec85b76aeb963",
		"aname":"test",
		"apwd":"111111",
		"arole":"1",
		"state":"1"
	},
	{
		"aaccount":"啊啊啊啊啊啊啊12345678",
		"acontact":"13610003422",
		"aid":"1819df469aac11e79724966435dcafda",
		"aname":"å\u0095\u008A12345678",
		"apwd":"admin123",
		"arole":"0",
		"state":"1"
	},
	{
		"aaccount":"test1",
		"acontact":"18100000123",
		"adept":"testtt",
		"aid":"316333ad8d5d11e7b5cec85b76aeb963",
		"aname":"testtt",
		"apwd":"111111",
		"arole":"1",
		"state":"1"
	},
	{
		"aaccount":"lulu",
		"acontact":"18000000001",
		"adept":"IT",
		"aid":"64c7f5eb87e311e7b5cec85b76aeb963",
		"aname":"lulu",
		"apwd":"123456",
		"arole":"1",
		"state":"1"
	},
	{
		"aaccount":"testAdmin",
		"acontact":"18000000001",
		"aid":"8066d30398f311e7acc0c85b76aeb963",
		"aname":"他她",
		"apwd":"admin",
		"arole":"1",
		"state":"1"
	},
	{
		"aaccount":"test2",
		"acontact":"18100000123",
		"adept":"testtt",
		"aid":"db493c0a8d5c11e7b5cec85b76aeb963",
		"aname":"testtt",
		"apwd":"111111",
		"arole":"1",
		"state":"1"
	}
]
[INFO ][20171229 16:42:42,107][AbstractApplicationContext:957] Closing org.springframework.context.support.GenericApplicationContext@6dc17b83: startup date [Fri Dec 29 16:42:39 CST 2017]; root of context hierarchy
[INFO ][20171229 16:42:42,107][AbstractConfig$1:450]  [DUBBO] Run shutdown hook now., dubbo version: 2.5.2, current host: 192.168.103.21
[INFO ][20171229 16:42:42,109][AbstractRegistry:343]  [DUBBO] Unsubscribe: consumer://192.168.103.21/com.junlon.facade.user.service.AdminQueryFacade?application=gw-web-portal&category=providers,configurators,routers&check=false&dubbo=2.5.2&interface=com.junlon.facade.user.service.AdminQueryFacade&methods=list&pid=69612&side=consumer&timestamp=1514536960570, dubbo version: 2.5.2, current host: 192.168.103.21
[INFO ][20171229 16:42:42,111][AbstractRegistryFactory:63]  [DUBBO] Close all registries [zookeeper://127.0.0.1:2181/com.alibaba.dubbo.registry.RegistryService?application=gw-web-portal&dubbo=2.5.2&interface=com.alibaba.dubbo.registry.RegistryService&pid=69612&timestamp=1514536960615], dubbo version: 2.5.2, current host: 192.168.103.21
[INFO ][20171229 16:42:42,111][AbstractRegistry:485]  [DUBBO] Destroy registry:zookeeper://127.0.0.1:2181/com.alibaba.dubbo.registry.RegistryService?application=gw-web-portal&dubbo=2.5.2&interface=com.alibaba.dubbo.registry.RegistryService&pid=69612&timestamp=1514536960615, dubbo version: 2.5.2, current host: 192.168.103.21
[INFO ][20171229 16:42:42,112][AbstractRegistry:312]  [DUBBO] Unregister: consumer://192.168.103.21/com.junlon.facade.user.service.AdminQueryFacade?application=gw-web-portal&category=consumers&check=false&dubbo=2.5.2&interface=com.junlon.facade.user.service.AdminQueryFacade&methods=list&pid=69612&side=consumer&timestamp=1514536960570, dubbo version: 2.5.2, current host: 192.168.103.21
[INFO ][20171229 16:42:42,113][NettyChannel:135]  [DUBBO] Close netty channel [id: 0x5942ee04, /192.168.103.21:60896 => /192.168.103.21:20880], dubbo version: 2.5.2, current host: 192.168.103.21
[INFO ][20171229 16:42:42,116][DubboProtocol$1:130]  [DUBBO] disconected from /192.168.103.21:20880,url:dubbo://192.168.103.21:20880/com.junlon.facade.user.service.AdminQueryFacade?anyhost=true&application=gw-web-portal&check=false&codec=dubbo&default.accepts=1000&default.dispatcher=all&default.retries=0&default.timeout=30000&dubbo=2.5.2&heartbeat=60000&interface=com.junlon.facade.user.service.AdminQueryFacade&methods=list&pid=69612&retries=0&side=consumer&timestamp=1514536960570, dubbo version: 2.5.2, current host: 192.168.103.21
[INFO ][20171229 16:42:42,166][AbstractRegistry:494]  [DUBBO] Destroy unregister url consumer://192.168.103.21/com.junlon.facade.user.service.AdminQueryFacade?application=gw-web-portal&category=consumers&check=false&dubbo=2.5.2&interface=com.junlon.facade.user.service.AdminQueryFacade&methods=list&pid=69612&side=consumer&timestamp=1514536960570, dubbo version: 2.5.2, current host: 192.168.103.21
[INFO ][20171229 16:42:42,167][ZkEventThread:82] Terminate ZkClient event thread.
[INFO ][20171229 16:42:42,191][ZooKeeper:1326] Session: 0x100b9115673000f closed
[INFO ][20171229 16:42:42,198][DubboProtocol:407]  [DUBBO] Close dubbo connect: 192.168.103.21:0-->192.168.103.21:20880, dubbo version: 2.5.2, current host: 192.168.103.21
[INFO ][20171229 16:42:42,193][ClientCnxn$EventThread:513] EventThread shut down for session: 0x100b9115673000f
[INFO ][20171229 16:42:42,201][DubboProtocol:421]  [DUBBO] Close dubbo connect: 192.168.103.21:0-->192.168.103.21:20880, dubbo version: 2.5.2, current host: 192.168.103.21
